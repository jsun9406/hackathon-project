apiVersion: v1
items:
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.7.0
    creationTimestamp: "2022-04-12T18:16:19Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v0.28.5
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: alerts.notification.toolkit.fluxcd.io
    resourceVersion: "10089201"
    uid: 1c1ea613-1030-4e43-ad9c-1e8b447380ef
  spec:
    conversion:
      strategy: None
    group: notification.toolkit.fluxcd.io
    names:
      kind: Alert
      listKind: AlertList
      plural: alerts
      singular: alert
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: Alert is the Schema for the alerts API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AlertSpec defines an alerting rule for events involving
                a list of objects
              properties:
                eventSeverity:
                  default: info
                  description: Filter events based on severity, defaults to ('info').
                    If set to 'info' no events will be filtered.
                  enum:
                  - info
                  - error
                  type: string
                eventSources:
                  description: Filter events based on the involved objects.
                  items:
                    description: CrossNamespaceObjectReference contains enough information
                      to let you locate the typed referenced object at cluster level
                    properties:
                      apiVersion:
                        description: API version of the referent
                        type: string
                      kind:
                        description: Kind of the referent
                        enum:
                        - Bucket
                        - GitRepository
                        - Kustomization
                        - HelmRelease
                        - HelmChart
                        - HelmRepository
                        - ImageRepository
                        - ImagePolicy
                        - ImageUpdateAutomation
                        type: string
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                      name:
                        description: Name of the referent
                        maxLength: 53
                        minLength: 1
                        type: string
                      namespace:
                        description: Namespace of the referent
                        maxLength: 53
                        minLength: 1
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                exclusionList:
                  description: A list of Golang regular expressions to be used for
                    excluding messages.
                  items:
                    type: string
                  type: array
                providerRef:
                  description: Send events using this provider.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                  - name
                  type: object
                summary:
                  description: Short description of the impact and affected cluster.
                  type: string
                suspend:
                  description: This flag tells the controller to suspend subsequent
                    events dispatching. Defaults to false.
                  type: boolean
              required:
              - eventSources
              - providerRef
              type: object
            status:
              default:
                observedGeneration: -1
              description: AlertStatus defines the observed state of Alert
              properties:
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, type FooStatus struct{     // Represents the
                      observations of a foo's current state.     // Known .status.conditions.type
                      are: \"Available\", \"Progressing\", and \"Degraded\"     //
                      +patchMergeKey=type     // +patchStrategy=merge     // +listType=map
                      \    // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: Alert
      listKind: AlertList
      plural: alerts
      singular: alert
    conditions:
    - lastTransitionTime: "2022-04-12T18:16:19Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2022-04-12T18:16:20Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.7.0
    creationTimestamp: "2022-04-12T18:16:17Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v0.28.5
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: buckets.source.toolkit.fluxcd.io
    resourceVersion: "10089202"
    uid: 5f527280-219f-41ec-8539-d2114283880d
  spec:
    conversion:
      strategy: None
    group: source.toolkit.fluxcd.io
    names:
      kind: Bucket
      listKind: BucketList
      plural: buckets
      singular: bucket
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .spec.endpoint
        name: Endpoint
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: Bucket is the Schema for the buckets API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: BucketSpec defines the desired state of an S3 compatible
                bucket
              properties:
                accessFrom:
                  description: AccessFrom defines an Access Control List for allowing
                    cross-namespace references to this object.
                  properties:
                    namespaceSelectors:
                      description: NamespaceSelectors is the list of namespace selectors
                        to which this ACL applies. Items in this list are evaluated
                        using a logical OR operation.
                      items:
                        description: NamespaceSelector selects the namespaces to which
                          this ACL applies. An empty map of MatchLabels matches all
                          namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                  - namespaceSelectors
                  type: object
                bucketName:
                  description: The bucket name.
                  type: string
                endpoint:
                  description: The bucket endpoint address.
                  type: string
                ignore:
                  description: Ignore overrides the set of excluded patterns in the
                    .sourceignore format (which is the same as .gitignore). If not
                    provided, a default will be used, consult the documentation for
                    your version to find out what those are.
                  type: string
                insecure:
                  description: Insecure allows connecting to a non-TLS S3 HTTP endpoint.
                  type: boolean
                interval:
                  description: The interval at which to check for bucket updates.
                  type: string
                provider:
                  default: generic
                  description: The S3 compatible storage provider name, default ('generic').
                  enum:
                  - generic
                  - aws
                  - gcp
                  type: string
                region:
                  description: The bucket region.
                  type: string
                secretRef:
                  description: The name of the secret containing authentication credentials
                    for the Bucket.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                  - name
                  type: object
                suspend:
                  description: This flag tells the controller to suspend the reconciliation
                    of this source.
                  type: boolean
                timeout:
                  default: 60s
                  description: The timeout for download operations, defaults to 60s.
                  type: string
              required:
              - bucketName
              - endpoint
              - interval
              type: object
            status:
              default:
                observedGeneration: -1
              description: BucketStatus defines the observed state of a bucket
              properties:
                artifact:
                  description: Artifact represents the output of the last successful
                    Bucket sync.
                  properties:
                    checksum:
                      description: Checksum is the SHA256 checksum of the artifact.
                      type: string
                    lastUpdateTime:
                      description: LastUpdateTime is the timestamp corresponding to
                        the last update of this artifact.
                      format: date-time
                      type: string
                    path:
                      description: Path is the relative file path of this artifact.
                      type: string
                    revision:
                      description: Revision is a human readable identifier traceable
                        in the origin source system. It can be a Git commit SHA, Git
                        tag, a Helm index timestamp, a Helm chart version, etc.
                      type: string
                    url:
                      description: URL is the HTTP address of this artifact.
                      type: string
                  required:
                  - path
                  - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the Bucket.
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, type FooStatus struct{     // Represents the
                      observations of a foo's current state.     // Known .status.conditions.type
                      are: \"Available\", \"Progressing\", and \"Degraded\"     //
                      +patchMergeKey=type     // +patchStrategy=merge     // +listType=map
                      \    // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: LastHandledReconcileAt holds the value of the most
                    recent reconcile request value, so a change of the annotation
                    value can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
                url:
                  description: URL is the download link for the artifact output of
                    the last Bucket sync.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .spec.endpoint
        name: Endpoint
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: Bucket is the Schema for the buckets API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: BucketSpec specifies the required configuration to produce
                an Artifact for an object storage bucket.
              properties:
                accessFrom:
                  description: 'AccessFrom specifies an Access Control List for allowing
                    cross-namespace references to this object. NOTE: Not implemented,
                    provisional as of https://github.com/fluxcd/flux2/pull/2092'
                  properties:
                    namespaceSelectors:
                      description: NamespaceSelectors is the list of namespace selectors
                        to which this ACL applies. Items in this list are evaluated
                        using a logical OR operation.
                      items:
                        description: NamespaceSelector selects the namespaces to which
                          this ACL applies. An empty map of MatchLabels matches all
                          namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                  - namespaceSelectors
                  type: object
                bucketName:
                  description: BucketName is the name of the object storage bucket.
                  type: string
                endpoint:
                  description: Endpoint is the object storage address the BucketName
                    is located at.
                  type: string
                ignore:
                  description: Ignore overrides the set of excluded patterns in the
                    .sourceignore format (which is the same as .gitignore). If not
                    provided, a default will be used, consult the documentation for
                    your version to find out what those are.
                  type: string
                insecure:
                  description: Insecure allows connecting to a non-TLS HTTP Endpoint.
                  type: boolean
                interval:
                  description: Interval at which to check the Endpoint for updates.
                  type: string
                provider:
                  default: generic
                  description: Provider of the object storage bucket. Defaults to
                    'generic', which expects an S3 (API) compatible object storage.
                  enum:
                  - generic
                  - aws
                  - gcp
                  - azure
                  type: string
                region:
                  description: Region of the Endpoint where the BucketName is located
                    in.
                  type: string
                secretRef:
                  description: SecretRef specifies the Secret containing authentication
                    credentials for the Bucket.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                  - name
                  type: object
                suspend:
                  description: Suspend tells the controller to suspend the reconciliation
                    of this Bucket.
                  type: boolean
                timeout:
                  default: 60s
                  description: Timeout for fetch operations, defaults to 60s.
                  type: string
              required:
              - bucketName
              - endpoint
              - interval
              type: object
            status:
              default:
                observedGeneration: -1
              description: BucketStatus records the observed state of a Bucket.
              properties:
                artifact:
                  description: Artifact represents the last successful Bucket reconciliation.
                  properties:
                    checksum:
                      description: Checksum is the SHA256 checksum of the Artifact
                        file.
                      type: string
                    lastUpdateTime:
                      description: LastUpdateTime is the timestamp corresponding to
                        the last update of the Artifact.
                      format: date-time
                      type: string
                    path:
                      description: Path is the relative file path of the Artifact.
                        It can be used to locate the file in the root of the Artifact
                        storage on the local file system of the controller managing
                        the Source.
                      type: string
                    revision:
                      description: Revision is a human-readable identifier traceable
                        in the origin source system. It can be a Git commit SHA, Git
                        tag, a Helm chart version, etc.
                      type: string
                    size:
                      description: Size is the number of bytes in the file.
                      format: int64
                      type: integer
                    url:
                      description: URL is the HTTP address of the Artifact as exposed
                        by the controller managing the Source. It can be used to retrieve
                        the Artifact for consumption, e.g. by another controller applying
                        the Artifact contents.
                      type: string
                  required:
                  - path
                  - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the Bucket.
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, type FooStatus struct{     // Represents the
                      observations of a foo's current state.     // Known .status.conditions.type
                      are: \"Available\", \"Progressing\", and \"Degraded\"     //
                      +patchMergeKey=type     // +patchStrategy=merge     // +listType=map
                      \    // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: LastHandledReconcileAt holds the value of the most
                    recent reconcile request value, so a change of the annotation
                    value can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation
                    of the Bucket object.
                  format: int64
                  type: integer
                url:
                  description: URL is the dynamic fetch link for the latest Artifact.
                    It is provided on a "best effort" basis, and using the precise
                    BucketStatus.Artifact data is recommended.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: Bucket
      listKind: BucketList
      plural: buckets
      singular: bucket
    conditions:
    - lastTransitionTime: "2022-04-12T18:16:17Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2022-04-12T18:16:17Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta2
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      cert-manager.io/inject-ca-from-secret: cert-manager/cert-manager-webhook-ca
    creationTimestamp: "2022-04-12T18:17:07Z"
    generation: 1
    labels:
      app: cert-manager
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.5.4
      kustomize.toolkit.fluxcd.io/name: cert-manager-kustomization
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: certificaterequests.cert-manager.io
    resourceVersion: "10089340"
    uid: 27ae4f7f-ed2c-464e-a7c3-7ce06cb9d940
  spec:
    conversion:
      strategy: Webhook
      webhook:
        clientConfig:
          service:
            name: cert-manager-webhook
            namespace: cert-manager
            path: /convert
            port: 443
        conversionReviewVersions:
        - v1
        - v1beta1
    group: cert-manager.io
    names:
      categories:
      - cert-manager
      kind: CertificateRequest
      listKind: CertificateRequestList
      plural: certificaterequests
      shortNames:
      - cr
      - crs
      singular: certificaterequest
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Approved")].status
        name: Approved
        type: string
      - jsonPath: .status.conditions[?(@.type=="Denied")].status
        name: Denied
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .spec.issuerRef.name
        name: Issuer
        type: string
      - jsonPath: .spec.username
        name: Requestor
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: "A CertificateRequest is used to request a signed certificate
            from one of the configured issuers. \n All fields within the CertificateRequest's
            `spec` are immutable after creation. A CertificateRequest will either
            succeed or fail, as denoted by its `status.state` field. \n A CertificateRequest
            is a one-shot resource, meaning it represents a single point in time request
            for a certificate and cannot be re-used."
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the CertificateRequest resource.
              properties:
                csr:
                  description: The PEM-encoded x509 certificate signing request to
                    be submitted to the CA for signing.
                  format: byte
                  type: string
                duration:
                  description: The requested 'duration' (i.e. lifetime) of the Certificate.
                    This option may be ignored/overridden by some issuer types.
                  type: string
                extra:
                  additionalProperties:
                    items:
                      type: string
                    type: array
                  description: Extra contains extra attributes of the user that created
                    the CertificateRequest. Populated by the cert-manager webhook
                    on creation and immutable.
                  type: object
                groups:
                  description: Groups contains group membership of the user that created
                    the CertificateRequest. Populated by the cert-manager webhook
                    on creation and immutable.
                  items:
                    type: string
                  type: array
                  x-kubernetes-list-type: atomic
                isCA:
                  description: IsCA will request to mark the certificate as valid
                    for certificate signing when submitting to the issuer. This will
                    automatically add the `cert sign` usage to the list of `usages`.
                  type: boolean
                issuerRef:
                  description: IssuerRef is a reference to the issuer for this CertificateRequest.  If
                    the `kind` field is not set, or set to `Issuer`, an Issuer resource
                    with the given name in the same namespace as the CertificateRequest
                    will be used.  If the `kind` field is set to `ClusterIssuer`,
                    a ClusterIssuer with the provided name will be used. The `name`
                    field in this stanza is required at all times. The group field
                    refers to the API group of the issuer which defaults to `cert-manager.io`
                    if empty.
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                  - name
                  type: object
                uid:
                  description: UID contains the uid of the user that created the CertificateRequest.
                    Populated by the cert-manager webhook on creation and immutable.
                  type: string
                usages:
                  description: Usages is the set of x509 usages that are requested
                    for the certificate. Defaults to `digital signature` and `key
                    encipherment` if not specified.
                  items:
                    description: 'KeyUsage specifies valid usage contexts for keys.
                      See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12
                      Valid KeyUsage values are as follows: "signing", "digital signature",
                      "content commitment", "key encipherment", "key agreement", "data
                      encipherment", "cert sign", "crl sign", "encipher only", "decipher
                      only", "any", "server auth", "client auth", "code signing",
                      "email protection", "s/mime", "ipsec end system", "ipsec tunnel",
                      "ipsec user", "timestamping", "ocsp signing", "microsoft sgc",
                      "netscape sgc"'
                    enum:
                    - signing
                    - digital signature
                    - content commitment
                    - key encipherment
                    - key agreement
                    - data encipherment
                    - cert sign
                    - crl sign
                    - encipher only
                    - decipher only
                    - any
                    - server auth
                    - client auth
                    - code signing
                    - email protection
                    - s/mime
                    - ipsec end system
                    - ipsec tunnel
                    - ipsec user
                    - timestamping
                    - ocsp signing
                    - microsoft sgc
                    - netscape sgc
                    type: string
                  type: array
                username:
                  description: Username contains the name of the user that created
                    the CertificateRequest. Populated by the cert-manager webhook
                    on creation and immutable.
                  type: string
              required:
              - csr
              - issuerRef
              type: object
            status:
              description: Status of the CertificateRequest. This is set and managed
                automatically.
              properties:
                ca:
                  description: The PEM encoded x509 certificate of the signer, also
                    known as the CA (Certificate Authority). This is set on a best-effort
                    basis by different issuers. If not set, the CA is assumed to be
                    unknown/not available.
                  format: byte
                  type: string
                certificate:
                  description: The PEM encoded x509 certificate resulting from the
                    certificate signing request. If not set, the CertificateRequest
                    has either not been completed or has failed. More information
                    on failure can be found by checking the `conditions` field.
                  format: byte
                  type: string
                conditions:
                  description: List of status conditions to indicate the status of
                    a CertificateRequest. Known condition types are `Ready` and `InvalidRequest`.
                  items:
                    description: CertificateRequestCondition contains condition information
                      for a CertificateRequest.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`,
                          `Unknown`).
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Ready`,
                          `InvalidRequest`, `Approved`, `Denied`).
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                failureTime:
                  description: FailureTime stores the time that this CertificateRequest
                    failed. This is used to influence garbage collection and back-off.
                  format: date-time
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Approved")].status
        name: Approved
        type: string
      - jsonPath: .status.conditions[?(@.type=="Denied")].status
        name: Denied
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .spec.issuerRef.name
        name: Issuer
        type: string
      - jsonPath: .spec.username
        name: Requestor
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha3
      schema:
        openAPIV3Schema:
          description: "A CertificateRequest is used to request a signed certificate
            from one of the configured issuers. \n All fields within the CertificateRequest's
            `spec` are immutable after creation. A CertificateRequest will either
            succeed or fail, as denoted by its `status.state` field. \n A CertificateRequest
            is a one-shot resource, meaning it represents a single point in time request
            for a certificate and cannot be re-used."
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the CertificateRequest resource.
              properties:
                csr:
                  description: The PEM-encoded x509 certificate signing request to
                    be submitted to the CA for signing.
                  format: byte
                  type: string
                duration:
                  description: The requested 'duration' (i.e. lifetime) of the Certificate.
                    This option may be ignored/overridden by some issuer types.
                  type: string
                extra:
                  additionalProperties:
                    items:
                      type: string
                    type: array
                  description: Extra contains extra attributes of the user that created
                    the CertificateRequest. Populated by the cert-manager webhook
                    on creation and immutable.
                  type: object
                groups:
                  description: Groups contains group membership of the user that created
                    the CertificateRequest. Populated by the cert-manager webhook
                    on creation and immutable.
                  items:
                    type: string
                  type: array
                  x-kubernetes-list-type: atomic
                isCA:
                  description: IsCA will request to mark the certificate as valid
                    for certificate signing when submitting to the issuer. This will
                    automatically add the `cert sign` usage to the list of `usages`.
                  type: boolean
                issuerRef:
                  description: IssuerRef is a reference to the issuer for this CertificateRequest.  If
                    the `kind` field is not set, or set to `Issuer`, an Issuer resource
                    with the given name in the same namespace as the CertificateRequest
                    will be used.  If the `kind` field is set to `ClusterIssuer`,
                    a ClusterIssuer with the provided name will be used. The `name`
                    field in this stanza is required at all times. The group field
                    refers to the API group of the issuer which defaults to `cert-manager.io`
                    if empty.
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                  - name
                  type: object
                uid:
                  description: UID contains the uid of the user that created the CertificateRequest.
                    Populated by the cert-manager webhook on creation and immutable.
                  type: string
                usages:
                  description: Usages is the set of x509 usages that are requested
                    for the certificate. Defaults to `digital signature` and `key
                    encipherment` if not specified.
                  items:
                    description: 'KeyUsage specifies valid usage contexts for keys.
                      See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12
                      Valid KeyUsage values are as follows: "signing", "digital signature",
                      "content commitment", "key encipherment", "key agreement", "data
                      encipherment", "cert sign", "crl sign", "encipher only", "decipher
                      only", "any", "server auth", "client auth", "code signing",
                      "email protection", "s/mime", "ipsec end system", "ipsec tunnel",
                      "ipsec user", "timestamping", "ocsp signing", "microsoft sgc",
                      "netscape sgc"'
                    enum:
                    - signing
                    - digital signature
                    - content commitment
                    - key encipherment
                    - key agreement
                    - data encipherment
                    - cert sign
                    - crl sign
                    - encipher only
                    - decipher only
                    - any
                    - server auth
                    - client auth
                    - code signing
                    - email protection
                    - s/mime
                    - ipsec end system
                    - ipsec tunnel
                    - ipsec user
                    - timestamping
                    - ocsp signing
                    - microsoft sgc
                    - netscape sgc
                    type: string
                  type: array
                username:
                  description: Username contains the name of the user that created
                    the CertificateRequest. Populated by the cert-manager webhook
                    on creation and immutable.
                  type: string
              required:
              - csr
              - issuerRef
              type: object
            status:
              description: Status of the CertificateRequest. This is set and managed
                automatically.
              properties:
                ca:
                  description: The PEM encoded x509 certificate of the signer, also
                    known as the CA (Certificate Authority). This is set on a best-effort
                    basis by different issuers. If not set, the CA is assumed to be
                    unknown/not available.
                  format: byte
                  type: string
                certificate:
                  description: The PEM encoded x509 certificate resulting from the
                    certificate signing request. If not set, the CertificateRequest
                    has either not been completed or has failed. More information
                    on failure can be found by checking the `conditions` field.
                  format: byte
                  type: string
                conditions:
                  description: List of status conditions to indicate the status of
                    a CertificateRequest. Known condition types are `Ready` and `InvalidRequest`.
                  items:
                    description: CertificateRequestCondition contains condition information
                      for a CertificateRequest.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`,
                          `Unknown`).
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Ready`,
                          `InvalidRequest`, `Approved`, `Denied`).
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                failureTime:
                  description: FailureTime stores the time that this CertificateRequest
                    failed. This is used to influence garbage collection and back-off.
                  format: date-time
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Approved")].status
        name: Approved
        type: string
      - jsonPath: .status.conditions[?(@.type=="Denied")].status
        name: Denied
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .spec.issuerRef.name
        name: Issuer
        type: string
      - jsonPath: .spec.username
        name: Requestor
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: "A CertificateRequest is used to request a signed certificate
            from one of the configured issuers. \n All fields within the CertificateRequest's
            `spec` are immutable after creation. A CertificateRequest will either
            succeed or fail, as denoted by its `status.state` field. \n A CertificateRequest
            is a one-shot resource, meaning it represents a single point in time request
            for a certificate and cannot be re-used."
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the CertificateRequest resource.
              properties:
                duration:
                  description: The requested 'duration' (i.e. lifetime) of the Certificate.
                    This option may be ignored/overridden by some issuer types.
                  type: string
                extra:
                  additionalProperties:
                    items:
                      type: string
                    type: array
                  description: Extra contains extra attributes of the user that created
                    the CertificateRequest. Populated by the cert-manager webhook
                    on creation and immutable.
                  type: object
                groups:
                  description: Groups contains group membership of the user that created
                    the CertificateRequest. Populated by the cert-manager webhook
                    on creation and immutable.
                  items:
                    type: string
                  type: array
                  x-kubernetes-list-type: atomic
                isCA:
                  description: IsCA will request to mark the certificate as valid
                    for certificate signing when submitting to the issuer. This will
                    automatically add the `cert sign` usage to the list of `usages`.
                  type: boolean
                issuerRef:
                  description: IssuerRef is a reference to the issuer for this CertificateRequest.  If
                    the `kind` field is not set, or set to `Issuer`, an Issuer resource
                    with the given name in the same namespace as the CertificateRequest
                    will be used.  If the `kind` field is set to `ClusterIssuer`,
                    a ClusterIssuer with the provided name will be used. The `name`
                    field in this stanza is required at all times. The group field
                    refers to the API group of the issuer which defaults to `cert-manager.io`
                    if empty.
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                  - name
                  type: object
                request:
                  description: The PEM-encoded x509 certificate signing request to
                    be submitted to the CA for signing.
                  format: byte
                  type: string
                uid:
                  description: UID contains the uid of the user that created the CertificateRequest.
                    Populated by the cert-manager webhook on creation and immutable.
                  type: string
                usages:
                  description: Usages is the set of x509 usages that are requested
                    for the certificate. Defaults to `digital signature` and `key
                    encipherment` if not specified.
                  items:
                    description: 'KeyUsage specifies valid usage contexts for keys.
                      See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12
                      Valid KeyUsage values are as follows: "signing", "digital signature",
                      "content commitment", "key encipherment", "key agreement", "data
                      encipherment", "cert sign", "crl sign", "encipher only", "decipher
                      only", "any", "server auth", "client auth", "code signing",
                      "email protection", "s/mime", "ipsec end system", "ipsec tunnel",
                      "ipsec user", "timestamping", "ocsp signing", "microsoft sgc",
                      "netscape sgc"'
                    enum:
                    - signing
                    - digital signature
                    - content commitment
                    - key encipherment
                    - key agreement
                    - data encipherment
                    - cert sign
                    - crl sign
                    - encipher only
                    - decipher only
                    - any
                    - server auth
                    - client auth
                    - code signing
                    - email protection
                    - s/mime
                    - ipsec end system
                    - ipsec tunnel
                    - ipsec user
                    - timestamping
                    - ocsp signing
                    - microsoft sgc
                    - netscape sgc
                    type: string
                  type: array
                username:
                  description: Username contains the name of the user that created
                    the CertificateRequest. Populated by the cert-manager webhook
                    on creation and immutable.
                  type: string
              required:
              - issuerRef
              - request
              type: object
            status:
              description: Status of the CertificateRequest. This is set and managed
                automatically.
              properties:
                ca:
                  description: The PEM encoded x509 certificate of the signer, also
                    known as the CA (Certificate Authority). This is set on a best-effort
                    basis by different issuers. If not set, the CA is assumed to be
                    unknown/not available.
                  format: byte
                  type: string
                certificate:
                  description: The PEM encoded x509 certificate resulting from the
                    certificate signing request. If not set, the CertificateRequest
                    has either not been completed or has failed. More information
                    on failure can be found by checking the `conditions` field.
                  format: byte
                  type: string
                conditions:
                  description: List of status conditions to indicate the status of
                    a CertificateRequest. Known condition types are `Ready` and `InvalidRequest`.
                  items:
                    description: CertificateRequestCondition contains condition information
                      for a CertificateRequest.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`,
                          `Unknown`).
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Ready`,
                          `InvalidRequest`, `Approved`, `Denied`).
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                failureTime:
                  description: FailureTime stores the time that this CertificateRequest
                    failed. This is used to influence garbage collection and back-off.
                  format: date-time
                  type: string
              type: object
          required:
          - spec
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Approved")].status
        name: Approved
        type: string
      - jsonPath: .status.conditions[?(@.type=="Denied")].status
        name: Denied
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .spec.issuerRef.name
        name: Issuer
        type: string
      - jsonPath: .spec.username
        name: Requestor
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: "A CertificateRequest is used to request a signed certificate
            from one of the configured issuers. \n All fields within the CertificateRequest's
            `spec` are immutable after creation. A CertificateRequest will either
            succeed or fail, as denoted by its `status.state` field. \n A CertificateRequest
            is a one-shot resource, meaning it represents a single point in time request
            for a certificate and cannot be re-used."
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the CertificateRequest resource.
              properties:
                duration:
                  description: The requested 'duration' (i.e. lifetime) of the Certificate.
                    This option may be ignored/overridden by some issuer types.
                  type: string
                extra:
                  additionalProperties:
                    items:
                      type: string
                    type: array
                  description: Extra contains extra attributes of the user that created
                    the CertificateRequest. Populated by the cert-manager webhook
                    on creation and immutable.
                  type: object
                groups:
                  description: Groups contains group membership of the user that created
                    the CertificateRequest. Populated by the cert-manager webhook
                    on creation and immutable.
                  items:
                    type: string
                  type: array
                  x-kubernetes-list-type: atomic
                isCA:
                  description: IsCA will request to mark the certificate as valid
                    for certificate signing when submitting to the issuer. This will
                    automatically add the `cert sign` usage to the list of `usages`.
                  type: boolean
                issuerRef:
                  description: IssuerRef is a reference to the issuer for this CertificateRequest.  If
                    the `kind` field is not set, or set to `Issuer`, an Issuer resource
                    with the given name in the same namespace as the CertificateRequest
                    will be used.  If the `kind` field is set to `ClusterIssuer`,
                    a ClusterIssuer with the provided name will be used. The `name`
                    field in this stanza is required at all times. The group field
                    refers to the API group of the issuer which defaults to `cert-manager.io`
                    if empty.
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                  - name
                  type: object
                request:
                  description: The PEM-encoded x509 certificate signing request to
                    be submitted to the CA for signing.
                  format: byte
                  type: string
                uid:
                  description: UID contains the uid of the user that created the CertificateRequest.
                    Populated by the cert-manager webhook on creation and immutable.
                  type: string
                usages:
                  description: Usages is the set of x509 usages that are requested
                    for the certificate. If usages are set they SHOULD be encoded
                    inside the CSR spec Defaults to `digital signature` and `key encipherment`
                    if not specified.
                  items:
                    description: 'KeyUsage specifies valid usage contexts for keys.
                      See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12
                      Valid KeyUsage values are as follows: "signing", "digital signature",
                      "content commitment", "key encipherment", "key agreement", "data
                      encipherment", "cert sign", "crl sign", "encipher only", "decipher
                      only", "any", "server auth", "client auth", "code signing",
                      "email protection", "s/mime", "ipsec end system", "ipsec tunnel",
                      "ipsec user", "timestamping", "ocsp signing", "microsoft sgc",
                      "netscape sgc"'
                    enum:
                    - signing
                    - digital signature
                    - content commitment
                    - key encipherment
                    - key agreement
                    - data encipherment
                    - cert sign
                    - crl sign
                    - encipher only
                    - decipher only
                    - any
                    - server auth
                    - client auth
                    - code signing
                    - email protection
                    - s/mime
                    - ipsec end system
                    - ipsec tunnel
                    - ipsec user
                    - timestamping
                    - ocsp signing
                    - microsoft sgc
                    - netscape sgc
                    type: string
                  type: array
                username:
                  description: Username contains the name of the user that created
                    the CertificateRequest. Populated by the cert-manager webhook
                    on creation and immutable.
                  type: string
              required:
              - issuerRef
              - request
              type: object
            status:
              description: Status of the CertificateRequest. This is set and managed
                automatically.
              properties:
                ca:
                  description: The PEM encoded x509 certificate of the signer, also
                    known as the CA (Certificate Authority). This is set on a best-effort
                    basis by different issuers. If not set, the CA is assumed to be
                    unknown/not available.
                  format: byte
                  type: string
                certificate:
                  description: The PEM encoded x509 certificate resulting from the
                    certificate signing request. If not set, the CertificateRequest
                    has either not been completed or has failed. More information
                    on failure can be found by checking the `conditions` field.
                  format: byte
                  type: string
                conditions:
                  description: List of status conditions to indicate the status of
                    a CertificateRequest. Known condition types are `Ready` and `InvalidRequest`.
                  items:
                    description: CertificateRequestCondition contains condition information
                      for a CertificateRequest.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`,
                          `Unknown`).
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Ready`,
                          `InvalidRequest`, `Approved`, `Denied`).
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                failureTime:
                  description: FailureTime stores the time that this CertificateRequest
                    failed. This is used to influence garbage collection and back-off.
                  format: date-time
                  type: string
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - cert-manager
      kind: CertificateRequest
      listKind: CertificateRequestList
      plural: certificaterequests
      shortNames:
      - cr
      - crs
      singular: certificaterequest
    conditions:
    - lastTransitionTime: "2022-04-12T18:17:07Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2022-04-12T18:17:07Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      cert-manager.io/inject-ca-from-secret: cert-manager/cert-manager-webhook-ca
    creationTimestamp: "2022-04-12T18:17:07Z"
    generation: 1
    labels:
      app: cert-manager
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.5.4
      kustomize.toolkit.fluxcd.io/name: cert-manager-kustomization
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: certificates.cert-manager.io
    resourceVersion: "10089342"
    uid: 230dbea1-0143-4064-8bc9-05bf0fa1196b
  spec:
    conversion:
      strategy: Webhook
      webhook:
        clientConfig:
          service:
            name: cert-manager-webhook
            namespace: cert-manager
            path: /convert
            port: 443
        conversionReviewVersions:
        - v1
        - v1beta1
    group: cert-manager.io
    names:
      categories:
      - cert-manager
      kind: Certificate
      listKind: CertificateList
      plural: certificates
      shortNames:
      - cert
      - certs
      singular: certificate
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .spec.secretName
        name: Secret
        type: string
      - jsonPath: .spec.issuerRef.name
        name: Issuer
        priority: 1
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: "A Certificate resource should be created to ensure an up to
            date and signed x509 certificate is stored in the Kubernetes Secret resource
            named in `spec.secretName`. \n The stored certificate will be renewed
            before it expires (as configured by `spec.renewBefore`)."
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the Certificate resource.
              properties:
                commonName:
                  description: 'CommonName is a common name to be used on the Certificate.
                    The CommonName should have a length of 64 characters or fewer
                    to avoid generating invalid CSRs. This value is ignored by TLS
                    clients when any subject alt name is set. This is x509 behaviour:
                    https://tools.ietf.org/html/rfc6125#section-6.4.4'
                  type: string
                dnsNames:
                  description: DNSNames is a list of DNS subjectAltNames to be set
                    on the Certificate.
                  items:
                    type: string
                  type: array
                duration:
                  description: The requested 'duration' (i.e. lifetime) of the Certificate.
                    This option may be ignored/overridden by some issuer types. If
                    unset this defaults to 90 days. Certificate will be renewed either
                    2/3 through its duration or `renewBefore` period before its expiry,
                    whichever is later. Minimum accepted duration is 1 hour. Value
                    must be in units accepted by Go time.ParseDuration https://golang.org/pkg/time/#ParseDuration
                  type: string
                emailSANs:
                  description: EmailSANs is a list of email subjectAltNames to be
                    set on the Certificate.
                  items:
                    type: string
                  type: array
                encodeUsagesInRequest:
                  description: EncodeUsagesInRequest controls whether key usages should
                    be present in the CertificateRequest
                  type: boolean
                ipAddresses:
                  description: IPAddresses is a list of IP address subjectAltNames
                    to be set on the Certificate.
                  items:
                    type: string
                  type: array
                isCA:
                  description: IsCA will mark this Certificate as valid for certificate
                    signing. This will automatically add the `cert sign` usage to
                    the list of `usages`.
                  type: boolean
                issuerRef:
                  description: IssuerRef is a reference to the issuer for this certificate.
                    If the `kind` field is not set, or set to `Issuer`, an Issuer
                    resource with the given name in the same namespace as the Certificate
                    will be used. If the `kind` field is set to `ClusterIssuer`, a
                    ClusterIssuer with the provided name will be used. The `name`
                    field in this stanza is required at all times.
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                  - name
                  type: object
                keyAlgorithm:
                  description: KeyAlgorithm is the private key algorithm of the corresponding
                    private key for this certificate. If provided, allowed values
                    are either `rsa` or `ecdsa` If `keyAlgorithm` is specified and
                    `keySize` is not provided, key size of 256 will be used for `ecdsa`
                    key algorithm and key size of 2048 will be used for `rsa` key
                    algorithm.
                  enum:
                  - rsa
                  - ecdsa
                  type: string
                keyEncoding:
                  description: KeyEncoding is the private key cryptography standards
                    (PKCS) for this certificate's private key to be encoded in. If
                    provided, allowed values are `pkcs1` and `pkcs8` standing for
                    PKCS#1 and PKCS#8, respectively. If KeyEncoding is not specified,
                    then `pkcs1` will be used by default.
                  enum:
                  - pkcs1
                  - pkcs8
                  type: string
                keySize:
                  description: KeySize is the key bit size of the corresponding private
                    key for this certificate. If `keyAlgorithm` is set to `rsa`, valid
                    values are `2048`, `4096` or `8192`, and will default to `2048`
                    if not specified. If `keyAlgorithm` is set to `ecdsa`, valid values
                    are `256`, `384` or `521`, and will default to `256` if not specified.
                    No other values are allowed.
                  type: integer
                keystores:
                  description: Keystores configures additional keystore output formats
                    stored in the `secretName` Secret resource.
                  properties:
                    jks:
                      description: JKS configures options for storing a JKS keystore
                        in the `spec.secretName` Secret resource.
                      properties:
                        create:
                          description: Create enables JKS keystore creation for the
                            Certificate. If true, a file named `keystore.jks` will
                            be created in the target Secret resource, encrypted using
                            the password stored in `passwordSecretRef`. The keystore
                            file will only be updated upon re-issuance.
                          type: boolean
                        passwordSecretRef:
                          description: PasswordSecretRef is a reference to a key in
                            a Secret resource containing the password used to encrypt
                            the JKS keystore.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - create
                      - passwordSecretRef
                      type: object
                    pkcs12:
                      description: PKCS12 configures options for storing a PKCS12
                        keystore in the `spec.secretName` Secret resource.
                      properties:
                        create:
                          description: Create enables PKCS12 keystore creation for
                            the Certificate. If true, a file named `keystore.p12`
                            will be created in the target Secret resource, encrypted
                            using the password stored in `passwordSecretRef`. The
                            keystore file will only be updated upon re-issuance.
                          type: boolean
                        passwordSecretRef:
                          description: PasswordSecretRef is a reference to a key in
                            a Secret resource containing the password used to encrypt
                            the PKCS12 keystore.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - create
                      - passwordSecretRef
                      type: object
                  type: object
                organization:
                  description: Organization is a list of organizations to be used
                    on the Certificate.
                  items:
                    type: string
                  type: array
                privateKey:
                  description: Options to control private keys used for the Certificate.
                  properties:
                    rotationPolicy:
                      description: RotationPolicy controls how private keys should
                        be regenerated when a re-issuance is being processed. If set
                        to Never, a private key will only be generated if one does
                        not already exist in the target `spec.secretName`. If one
                        does exists but it does not have the correct algorithm or
                        size, a warning will be raised to await user intervention.
                        If set to Always, a private key matching the specified requirements
                        will be generated whenever a re-issuance occurs. Default is
                        'Never' for backward compatibility.
                      type: string
                  type: object
                renewBefore:
                  description: How long before the currently issued certificate's
                    expiry cert-manager should renew the certificate. The default
                    is 2/3 of the issued certificate's duration. Minimum accepted
                    value is 5 minutes. Value must be in units accepted by Go time.ParseDuration
                    https://golang.org/pkg/time/#ParseDuration
                  type: string
                revisionHistoryLimit:
                  description: revisionHistoryLimit is the maximum number of CertificateRequest
                    revisions that are maintained in the Certificate's history. Each
                    revision represents a single `CertificateRequest` created by this
                    Certificate, either when it was created, renewed, or Spec was
                    changed. Revisions will be removed by oldest first if the number
                    of revisions exceeds this number. If set, revisionHistoryLimit
                    must be a value of `1` or greater. If unset (`nil`), revisions
                    will not be garbage collected. Default value is `nil`.
                  format: int32
                  type: integer
                secretName:
                  description: SecretName is the name of the secret resource that
                    will be automatically created and managed by this Certificate
                    resource. It will be populated with a private key and certificate,
                    signed by the denoted issuer.
                  type: string
                secretTemplate:
                  description: SecretTemplate defines annotations and labels to be
                    propagated to the Kubernetes Secret when it is created or updated.
                    Once created, labels and annotations are not yet removed from
                    the Secret when they are removed from the template. See https://github.com/jetstack/cert-manager/issues/4292
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: Annotations is a key value map to be copied to
                        the target Kubernetes Secret.
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels is a key value map to be copied to the target
                        Kubernetes Secret.
                      type: object
                  type: object
                subject:
                  description: Full X509 name specification (https://golang.org/pkg/crypto/x509/pkix/#Name).
                  properties:
                    countries:
                      description: Countries to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    localities:
                      description: Cities to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    organizationalUnits:
                      description: Organizational Units to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    postalCodes:
                      description: Postal codes to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    provinces:
                      description: State/Provinces to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    serialNumber:
                      description: Serial number to be used on the Certificate.
                      type: string
                    streetAddresses:
                      description: Street addresses to be used on the Certificate.
                      items:
                        type: string
                      type: array
                  type: object
                uriSANs:
                  description: URISANs is a list of URI subjectAltNames to be set
                    on the Certificate.
                  items:
                    type: string
                  type: array
                usages:
                  description: Usages is the set of x509 usages that are requested
                    for the certificate. Defaults to `digital signature` and `key
                    encipherment` if not specified.
                  items:
                    description: 'KeyUsage specifies valid usage contexts for keys.
                      See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12
                      Valid KeyUsage values are as follows: "signing", "digital signature",
                      "content commitment", "key encipherment", "key agreement", "data
                      encipherment", "cert sign", "crl sign", "encipher only", "decipher
                      only", "any", "server auth", "client auth", "code signing",
                      "email protection", "s/mime", "ipsec end system", "ipsec tunnel",
                      "ipsec user", "timestamping", "ocsp signing", "microsoft sgc",
                      "netscape sgc"'
                    enum:
                    - signing
                    - digital signature
                    - content commitment
                    - key encipherment
                    - key agreement
                    - data encipherment
                    - cert sign
                    - crl sign
                    - encipher only
                    - decipher only
                    - any
                    - server auth
                    - client auth
                    - code signing
                    - email protection
                    - s/mime
                    - ipsec end system
                    - ipsec tunnel
                    - ipsec user
                    - timestamping
                    - ocsp signing
                    - microsoft sgc
                    - netscape sgc
                    type: string
                  type: array
              required:
              - issuerRef
              - secretName
              type: object
            status:
              description: Status of the Certificate. This is set and managed automatically.
              properties:
                conditions:
                  description: List of status conditions to indicate the status of
                    certificates. Known condition types are `Ready` and `Issuing`.
                  items:
                    description: CertificateCondition contains condition information
                      for an Certificate.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      observedGeneration:
                        description: If set, this represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.condition[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the Certificate.
                        format: int64
                        type: integer
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`,
                          `Unknown`).
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Ready`,
                          `Issuing`).
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                lastFailureTime:
                  description: LastFailureTime is the time as recorded by the Certificate
                    controller of the most recent failure to complete a CertificateRequest
                    for this Certificate resource. If set, cert-manager will not re-request
                    another Certificate until 1 hour has elapsed from this time.
                  format: date-time
                  type: string
                nextPrivateKeySecretName:
                  description: The name of the Secret resource containing the private
                    key to be used for the next certificate iteration. The keymanager
                    controller will automatically set this field if the `Issuing`
                    condition is set to `True`. It will automatically unset this field
                    when the Issuing condition is not set or False.
                  type: string
                notAfter:
                  description: The expiration time of the certificate stored in the
                    secret named by this resource in `spec.secretName`.
                  format: date-time
                  type: string
                notBefore:
                  description: The time after which the certificate stored in the
                    secret named by this resource in spec.secretName is valid.
                  format: date-time
                  type: string
                renewalTime:
                  description: RenewalTime is the time at which the certificate will
                    be next renewed. If not set, no upcoming renewal is scheduled.
                  format: date-time
                  type: string
                revision:
                  description: "The current 'revision' of the certificate as issued.
                    \n When a CertificateRequest resource is created, it will have
                    the `cert-manager.io/certificate-revision` set to one greater
                    than the current value of this field. \n Upon issuance, this field
                    will be set to the value of the annotation on the CertificateRequest
                    resource used to issue the certificate. \n Persisting the value
                    on the CertificateRequest resource allows the certificates controller
                    to know whether a request is part of an old issuance or if it
                    is part of the ongoing revision's issuance by checking if the
                    revision value in the annotation is greater than this field."
                  type: integer
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .spec.secretName
        name: Secret
        type: string
      - jsonPath: .spec.issuerRef.name
        name: Issuer
        priority: 1
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha3
      schema:
        openAPIV3Schema:
          description: "A Certificate resource should be created to ensure an up to
            date and signed x509 certificate is stored in the Kubernetes Secret resource
            named in `spec.secretName`. \n The stored certificate will be renewed
            before it expires (as configured by `spec.renewBefore`)."
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the Certificate resource.
              properties:
                commonName:
                  description: 'CommonName is a common name to be used on the Certificate.
                    The CommonName should have a length of 64 characters or fewer
                    to avoid generating invalid CSRs. This value is ignored by TLS
                    clients when any subject alt name is set. This is x509 behaviour:
                    https://tools.ietf.org/html/rfc6125#section-6.4.4'
                  type: string
                dnsNames:
                  description: DNSNames is a list of DNS subjectAltNames to be set
                    on the Certificate.
                  items:
                    type: string
                  type: array
                duration:
                  description: The requested 'duration' (i.e. lifetime) of the Certificate.
                    This option may be ignored/overridden by some issuer types. If
                    unset this defaults to 90 days. Certificate will be renewed either
                    2/3 through its duration or `renewBefore` period before its expiry,
                    whichever is later. Minimum accepted duration is 1 hour. Value
                    must be in units accepted by Go time.ParseDuration https://golang.org/pkg/time/#ParseDuration
                  type: string
                emailSANs:
                  description: EmailSANs is a list of email subjectAltNames to be
                    set on the Certificate.
                  items:
                    type: string
                  type: array
                encodeUsagesInRequest:
                  description: EncodeUsagesInRequest controls whether key usages should
                    be present in the CertificateRequest
                  type: boolean
                ipAddresses:
                  description: IPAddresses is a list of IP address subjectAltNames
                    to be set on the Certificate.
                  items:
                    type: string
                  type: array
                isCA:
                  description: IsCA will mark this Certificate as valid for certificate
                    signing. This will automatically add the `cert sign` usage to
                    the list of `usages`.
                  type: boolean
                issuerRef:
                  description: IssuerRef is a reference to the issuer for this certificate.
                    If the `kind` field is not set, or set to `Issuer`, an Issuer
                    resource with the given name in the same namespace as the Certificate
                    will be used. If the `kind` field is set to `ClusterIssuer`, a
                    ClusterIssuer with the provided name will be used. The `name`
                    field in this stanza is required at all times.
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                  - name
                  type: object
                keyAlgorithm:
                  description: KeyAlgorithm is the private key algorithm of the corresponding
                    private key for this certificate. If provided, allowed values
                    are either `rsa` or `ecdsa` If `keyAlgorithm` is specified and
                    `keySize` is not provided, key size of 256 will be used for `ecdsa`
                    key algorithm and key size of 2048 will be used for `rsa` key
                    algorithm.
                  enum:
                  - rsa
                  - ecdsa
                  type: string
                keyEncoding:
                  description: KeyEncoding is the private key cryptography standards
                    (PKCS) for this certificate's private key to be encoded in. If
                    provided, allowed values are `pkcs1` and `pkcs8` standing for
                    PKCS#1 and PKCS#8, respectively. If KeyEncoding is not specified,
                    then `pkcs1` will be used by default.
                  enum:
                  - pkcs1
                  - pkcs8
                  type: string
                keySize:
                  description: KeySize is the key bit size of the corresponding private
                    key for this certificate. If `keyAlgorithm` is set to `rsa`, valid
                    values are `2048`, `4096` or `8192`, and will default to `2048`
                    if not specified. If `keyAlgorithm` is set to `ecdsa`, valid values
                    are `256`, `384` or `521`, and will default to `256` if not specified.
                    No other values are allowed.
                  type: integer
                keystores:
                  description: Keystores configures additional keystore output formats
                    stored in the `secretName` Secret resource.
                  properties:
                    jks:
                      description: JKS configures options for storing a JKS keystore
                        in the `spec.secretName` Secret resource.
                      properties:
                        create:
                          description: Create enables JKS keystore creation for the
                            Certificate. If true, a file named `keystore.jks` will
                            be created in the target Secret resource, encrypted using
                            the password stored in `passwordSecretRef`. The keystore
                            file will only be updated upon re-issuance. A file named
                            `truststore.jks` will also be created in the target Secret
                            resource, encrypted using the password stored in `passwordSecretRef`
                            containing the issuing Certificate Authority.
                          type: boolean
                        passwordSecretRef:
                          description: PasswordSecretRef is a reference to a key in
                            a Secret resource containing the password used to encrypt
                            the JKS keystore.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - create
                      - passwordSecretRef
                      type: object
                    pkcs12:
                      description: PKCS12 configures options for storing a PKCS12
                        keystore in the `spec.secretName` Secret resource.
                      properties:
                        create:
                          description: Create enables PKCS12 keystore creation for
                            the Certificate. If true, a file named `keystore.p12`
                            will be created in the target Secret resource, encrypted
                            using the password stored in `passwordSecretRef`. The
                            keystore file will only be updated upon re-issuance. A
                            file named `truststore.p12` will also be created in the
                            target Secret resource, encrypted using the password stored
                            in `passwordSecretRef` containing the issuing Certificate
                            Authority.
                          type: boolean
                        passwordSecretRef:
                          description: PasswordSecretRef is a reference to a key in
                            a Secret resource containing the password used to encrypt
                            the PKCS12 keystore.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - create
                      - passwordSecretRef
                      type: object
                  type: object
                privateKey:
                  description: Options to control private keys used for the Certificate.
                  properties:
                    rotationPolicy:
                      description: RotationPolicy controls how private keys should
                        be regenerated when a re-issuance is being processed. If set
                        to Never, a private key will only be generated if one does
                        not already exist in the target `spec.secretName`. If one
                        does exists but it does not have the correct algorithm or
                        size, a warning will be raised to await user intervention.
                        If set to Always, a private key matching the specified requirements
                        will be generated whenever a re-issuance occurs. Default is
                        'Never' for backward compatibility.
                      type: string
                  type: object
                renewBefore:
                  description: How long before the currently issued certificate's
                    expiry cert-manager should renew the certificate. The default
                    is 2/3 of the issued certificate's duration. Minimum accepted
                    value is 5 minutes. Value must be in units accepted by Go time.ParseDuration
                    https://golang.org/pkg/time/#ParseDuration
                  type: string
                revisionHistoryLimit:
                  description: revisionHistoryLimit is the maximum number of CertificateRequest
                    revisions that are maintained in the Certificate's history. Each
                    revision represents a single `CertificateRequest` created by this
                    Certificate, either when it was created, renewed, or Spec was
                    changed. Revisions will be removed by oldest first if the number
                    of revisions exceeds this number. If set, revisionHistoryLimit
                    must be a value of `1` or greater. If unset (`nil`), revisions
                    will not be garbage collected. Default value is `nil`.
                  format: int32
                  type: integer
                secretName:
                  description: SecretName is the name of the secret resource that
                    will be automatically created and managed by this Certificate
                    resource. It will be populated with a private key and certificate,
                    signed by the denoted issuer.
                  type: string
                secretTemplate:
                  description: SecretTemplate defines annotations and labels to be
                    propagated to the Kubernetes Secret when it is created or updated.
                    Once created, labels and annotations are not yet removed from
                    the Secret when they are removed from the template. See https://github.com/jetstack/cert-manager/issues/4292
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: Annotations is a key value map to be copied to
                        the target Kubernetes Secret.
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels is a key value map to be copied to the target
                        Kubernetes Secret.
                      type: object
                  type: object
                subject:
                  description: Full X509 name specification (https://golang.org/pkg/crypto/x509/pkix/#Name).
                  properties:
                    countries:
                      description: Countries to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    localities:
                      description: Cities to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    organizationalUnits:
                      description: Organizational Units to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    organizations:
                      description: Organizations to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    postalCodes:
                      description: Postal codes to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    provinces:
                      description: State/Provinces to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    serialNumber:
                      description: Serial number to be used on the Certificate.
                      type: string
                    streetAddresses:
                      description: Street addresses to be used on the Certificate.
                      items:
                        type: string
                      type: array
                  type: object
                uriSANs:
                  description: URISANs is a list of URI subjectAltNames to be set
                    on the Certificate.
                  items:
                    type: string
                  type: array
                usages:
                  description: Usages is the set of x509 usages that are requested
                    for the certificate. Defaults to `digital signature` and `key
                    encipherment` if not specified.
                  items:
                    description: 'KeyUsage specifies valid usage contexts for keys.
                      See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12
                      Valid KeyUsage values are as follows: "signing", "digital signature",
                      "content commitment", "key encipherment", "key agreement", "data
                      encipherment", "cert sign", "crl sign", "encipher only", "decipher
                      only", "any", "server auth", "client auth", "code signing",
                      "email protection", "s/mime", "ipsec end system", "ipsec tunnel",
                      "ipsec user", "timestamping", "ocsp signing", "microsoft sgc",
                      "netscape sgc"'
                    enum:
                    - signing
                    - digital signature
                    - content commitment
                    - key encipherment
                    - key agreement
                    - data encipherment
                    - cert sign
                    - crl sign
                    - encipher only
                    - decipher only
                    - any
                    - server auth
                    - client auth
                    - code signing
                    - email protection
                    - s/mime
                    - ipsec end system
                    - ipsec tunnel
                    - ipsec user
                    - timestamping
                    - ocsp signing
                    - microsoft sgc
                    - netscape sgc
                    type: string
                  type: array
              required:
              - issuerRef
              - secretName
              type: object
            status:
              description: Status of the Certificate. This is set and managed automatically.
              properties:
                conditions:
                  description: List of status conditions to indicate the status of
                    certificates. Known condition types are `Ready` and `Issuing`.
                  items:
                    description: CertificateCondition contains condition information
                      for an Certificate.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      observedGeneration:
                        description: If set, this represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.condition[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the Certificate.
                        format: int64
                        type: integer
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`,
                          `Unknown`).
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Ready`,
                          `Issuing`).
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                lastFailureTime:
                  description: LastFailureTime is the time as recorded by the Certificate
                    controller of the most recent failure to complete a CertificateRequest
                    for this Certificate resource. If set, cert-manager will not re-request
                    another Certificate until 1 hour has elapsed from this time.
                  format: date-time
                  type: string
                nextPrivateKeySecretName:
                  description: The name of the Secret resource containing the private
                    key to be used for the next certificate iteration. The keymanager
                    controller will automatically set this field if the `Issuing`
                    condition is set to `True`. It will automatically unset this field
                    when the Issuing condition is not set or False.
                  type: string
                notAfter:
                  description: The expiration time of the certificate stored in the
                    secret named by this resource in `spec.secretName`.
                  format: date-time
                  type: string
                notBefore:
                  description: The time after which the certificate stored in the
                    secret named by this resource in spec.secretName is valid.
                  format: date-time
                  type: string
                renewalTime:
                  description: RenewalTime is the time at which the certificate will
                    be next renewed. If not set, no upcoming renewal is scheduled.
                  format: date-time
                  type: string
                revision:
                  description: "The current 'revision' of the certificate as issued.
                    \n When a CertificateRequest resource is created, it will have
                    the `cert-manager.io/certificate-revision` set to one greater
                    than the current value of this field. \n Upon issuance, this field
                    will be set to the value of the annotation on the CertificateRequest
                    resource used to issue the certificate. \n Persisting the value
                    on the CertificateRequest resource allows the certificates controller
                    to know whether a request is part of an old issuance or if it
                    is part of the ongoing revision's issuance by checking if the
                    revision value in the annotation is greater than this field."
                  type: integer
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .spec.secretName
        name: Secret
        type: string
      - jsonPath: .spec.issuerRef.name
        name: Issuer
        priority: 1
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: "A Certificate resource should be created to ensure an up to
            date and signed x509 certificate is stored in the Kubernetes Secret resource
            named in `spec.secretName`. \n The stored certificate will be renewed
            before it expires (as configured by `spec.renewBefore`)."
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the Certificate resource.
              properties:
                commonName:
                  description: 'CommonName is a common name to be used on the Certificate.
                    The CommonName should have a length of 64 characters or fewer
                    to avoid generating invalid CSRs. This value is ignored by TLS
                    clients when any subject alt name is set. This is x509 behaviour:
                    https://tools.ietf.org/html/rfc6125#section-6.4.4'
                  type: string
                dnsNames:
                  description: DNSNames is a list of DNS subjectAltNames to be set
                    on the Certificate.
                  items:
                    type: string
                  type: array
                duration:
                  description: The requested 'duration' (i.e. lifetime) of the Certificate.
                    This option may be ignored/overridden by some issuer types. If
                    unset this defaults to 90 days. Certificate will be renewed either
                    2/3 through its duration or `renewBefore` period before its expiry,
                    whichever is later. Minimum accepted duration is 1 hour. Value
                    must be in units accepted by Go time.ParseDuration https://golang.org/pkg/time/#ParseDuration
                  type: string
                emailSANs:
                  description: EmailSANs is a list of email subjectAltNames to be
                    set on the Certificate.
                  items:
                    type: string
                  type: array
                encodeUsagesInRequest:
                  description: EncodeUsagesInRequest controls whether key usages should
                    be present in the CertificateRequest
                  type: boolean
                ipAddresses:
                  description: IPAddresses is a list of IP address subjectAltNames
                    to be set on the Certificate.
                  items:
                    type: string
                  type: array
                isCA:
                  description: IsCA will mark this Certificate as valid for certificate
                    signing. This will automatically add the `cert sign` usage to
                    the list of `usages`.
                  type: boolean
                issuerRef:
                  description: IssuerRef is a reference to the issuer for this certificate.
                    If the `kind` field is not set, or set to `Issuer`, an Issuer
                    resource with the given name in the same namespace as the Certificate
                    will be used. If the `kind` field is set to `ClusterIssuer`, a
                    ClusterIssuer with the provided name will be used. The `name`
                    field in this stanza is required at all times.
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                  - name
                  type: object
                keystores:
                  description: Keystores configures additional keystore output formats
                    stored in the `secretName` Secret resource.
                  properties:
                    jks:
                      description: JKS configures options for storing a JKS keystore
                        in the `spec.secretName` Secret resource.
                      properties:
                        create:
                          description: Create enables JKS keystore creation for the
                            Certificate. If true, a file named `keystore.jks` will
                            be created in the target Secret resource, encrypted using
                            the password stored in `passwordSecretRef`. The keystore
                            file will only be updated upon re-issuance.
                          type: boolean
                        passwordSecretRef:
                          description: PasswordSecretRef is a reference to a key in
                            a Secret resource containing the password used to encrypt
                            the JKS keystore.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - create
                      - passwordSecretRef
                      type: object
                    pkcs12:
                      description: PKCS12 configures options for storing a PKCS12
                        keystore in the `spec.secretName` Secret resource.
                      properties:
                        create:
                          description: Create enables PKCS12 keystore creation for
                            the Certificate. If true, a file named `keystore.p12`
                            will be created in the target Secret resource, encrypted
                            using the password stored in `passwordSecretRef`. The
                            keystore file will only be updated upon re-issuance.
                          type: boolean
                        passwordSecretRef:
                          description: PasswordSecretRef is a reference to a key in
                            a Secret resource containing the password used to encrypt
                            the PKCS12 keystore.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - create
                      - passwordSecretRef
                      type: object
                  type: object
                privateKey:
                  description: Options to control private keys used for the Certificate.
                  properties:
                    algorithm:
                      description: Algorithm is the private key algorithm of the corresponding
                        private key for this certificate. If provided, allowed values
                        are either `RSA` or `ECDSA` If `algorithm` is specified and
                        `size` is not provided, key size of 256 will be used for `ECDSA`
                        key algorithm and key size of 2048 will be used for `RSA`
                        key algorithm.
                      enum:
                      - RSA
                      - ECDSA
                      type: string
                    encoding:
                      description: The private key cryptography standards (PKCS) encoding
                        for this certificate's private key to be encoded in. If provided,
                        allowed values are `PKCS1` and `PKCS8` standing for PKCS#1
                        and PKCS#8, respectively. Defaults to `PKCS1` if not specified.
                      enum:
                      - PKCS1
                      - PKCS8
                      type: string
                    rotationPolicy:
                      description: RotationPolicy controls how private keys should
                        be regenerated when a re-issuance is being processed. If set
                        to Never, a private key will only be generated if one does
                        not already exist in the target `spec.secretName`. If one
                        does exists but it does not have the correct algorithm or
                        size, a warning will be raised to await user intervention.
                        If set to Always, a private key matching the specified requirements
                        will be generated whenever a re-issuance occurs. Default is
                        'Never' for backward compatibility.
                      type: string
                    size:
                      description: Size is the key bit size of the corresponding private
                        key for this certificate. If `algorithm` is set to `RSA`,
                        valid values are `2048`, `4096` or `8192`, and will default
                        to `2048` if not specified. If `algorithm` is set to `ECDSA`,
                        valid values are `256`, `384` or `521`, and will default to
                        `256` if not specified. No other values are allowed.
                      type: integer
                  type: object
                renewBefore:
                  description: How long before the currently issued certificate's
                    expiry cert-manager should renew the certificate. The default
                    is 2/3 of the issued certificate's duration. Minimum accepted
                    value is 5 minutes. Value must be in units accepted by Go time.ParseDuration
                    https://golang.org/pkg/time/#ParseDuration
                  type: string
                revisionHistoryLimit:
                  description: revisionHistoryLimit is the maximum number of CertificateRequest
                    revisions that are maintained in the Certificate's history. Each
                    revision represents a single `CertificateRequest` created by this
                    Certificate, either when it was created, renewed, or Spec was
                    changed. Revisions will be removed by oldest first if the number
                    of revisions exceeds this number. If set, revisionHistoryLimit
                    must be a value of `1` or greater. If unset (`nil`), revisions
                    will not be garbage collected. Default value is `nil`.
                  format: int32
                  type: integer
                secretName:
                  description: SecretName is the name of the secret resource that
                    will be automatically created and managed by this Certificate
                    resource. It will be populated with a private key and certificate,
                    signed by the denoted issuer.
                  type: string
                secretTemplate:
                  description: SecretTemplate defines annotations and labels to be
                    propagated to the Kubernetes Secret when it is created or updated.
                    Once created, labels and annotations are not yet removed from
                    the Secret when they are removed from the template. See https://github.com/jetstack/cert-manager/issues/4292
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: Annotations is a key value map to be copied to
                        the target Kubernetes Secret.
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels is a key value map to be copied to the target
                        Kubernetes Secret.
                      type: object
                  type: object
                subject:
                  description: Full X509 name specification (https://golang.org/pkg/crypto/x509/pkix/#Name).
                  properties:
                    countries:
                      description: Countries to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    localities:
                      description: Cities to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    organizationalUnits:
                      description: Organizational Units to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    organizations:
                      description: Organizations to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    postalCodes:
                      description: Postal codes to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    provinces:
                      description: State/Provinces to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    serialNumber:
                      description: Serial number to be used on the Certificate.
                      type: string
                    streetAddresses:
                      description: Street addresses to be used on the Certificate.
                      items:
                        type: string
                      type: array
                  type: object
                uriSANs:
                  description: URISANs is a list of URI subjectAltNames to be set
                    on the Certificate.
                  items:
                    type: string
                  type: array
                usages:
                  description: Usages is the set of x509 usages that are requested
                    for the certificate. Defaults to `digital signature` and `key
                    encipherment` if not specified.
                  items:
                    description: 'KeyUsage specifies valid usage contexts for keys.
                      See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12
                      Valid KeyUsage values are as follows: "signing", "digital signature",
                      "content commitment", "key encipherment", "key agreement", "data
                      encipherment", "cert sign", "crl sign", "encipher only", "decipher
                      only", "any", "server auth", "client auth", "code signing",
                      "email protection", "s/mime", "ipsec end system", "ipsec tunnel",
                      "ipsec user", "timestamping", "ocsp signing", "microsoft sgc",
                      "netscape sgc"'
                    enum:
                    - signing
                    - digital signature
                    - content commitment
                    - key encipherment
                    - key agreement
                    - data encipherment
                    - cert sign
                    - crl sign
                    - encipher only
                    - decipher only
                    - any
                    - server auth
                    - client auth
                    - code signing
                    - email protection
                    - s/mime
                    - ipsec end system
                    - ipsec tunnel
                    - ipsec user
                    - timestamping
                    - ocsp signing
                    - microsoft sgc
                    - netscape sgc
                    type: string
                  type: array
              required:
              - issuerRef
              - secretName
              type: object
            status:
              description: Status of the Certificate. This is set and managed automatically.
              properties:
                conditions:
                  description: List of status conditions to indicate the status of
                    certificates. Known condition types are `Ready` and `Issuing`.
                  items:
                    description: CertificateCondition contains condition information
                      for an Certificate.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      observedGeneration:
                        description: If set, this represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.condition[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the Certificate.
                        format: int64
                        type: integer
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`,
                          `Unknown`).
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Ready`,
                          `Issuing`).
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                lastFailureTime:
                  description: LastFailureTime is the time as recorded by the Certificate
                    controller of the most recent failure to complete a CertificateRequest
                    for this Certificate resource. If set, cert-manager will not re-request
                    another Certificate until 1 hour has elapsed from this time.
                  format: date-time
                  type: string
                nextPrivateKeySecretName:
                  description: The name of the Secret resource containing the private
                    key to be used for the next certificate iteration. The keymanager
                    controller will automatically set this field if the `Issuing`
                    condition is set to `True`. It will automatically unset this field
                    when the Issuing condition is not set or False.
                  type: string
                notAfter:
                  description: The expiration time of the certificate stored in the
                    secret named by this resource in `spec.secretName`.
                  format: date-time
                  type: string
                notBefore:
                  description: The time after which the certificate stored in the
                    secret named by this resource in spec.secretName is valid.
                  format: date-time
                  type: string
                renewalTime:
                  description: RenewalTime is the time at which the certificate will
                    be next renewed. If not set, no upcoming renewal is scheduled.
                  format: date-time
                  type: string
                revision:
                  description: "The current 'revision' of the certificate as issued.
                    \n When a CertificateRequest resource is created, it will have
                    the `cert-manager.io/certificate-revision` set to one greater
                    than the current value of this field. \n Upon issuance, this field
                    will be set to the value of the annotation on the CertificateRequest
                    resource used to issue the certificate. \n Persisting the value
                    on the CertificateRequest resource allows the certificates controller
                    to know whether a request is part of an old issuance or if it
                    is part of the ongoing revision's issuance by checking if the
                    revision value in the annotation is greater than this field."
                  type: integer
              type: object
          required:
          - spec
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .spec.secretName
        name: Secret
        type: string
      - jsonPath: .spec.issuerRef.name
        name: Issuer
        priority: 1
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: "A Certificate resource should be created to ensure an up to
            date and signed x509 certificate is stored in the Kubernetes Secret resource
            named in `spec.secretName`. \n The stored certificate will be renewed
            before it expires (as configured by `spec.renewBefore`)."
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the Certificate resource.
              properties:
                commonName:
                  description: 'CommonName is a common name to be used on the Certificate.
                    The CommonName should have a length of 64 characters or fewer
                    to avoid generating invalid CSRs. This value is ignored by TLS
                    clients when any subject alt name is set. This is x509 behaviour:
                    https://tools.ietf.org/html/rfc6125#section-6.4.4'
                  type: string
                dnsNames:
                  description: DNSNames is a list of DNS subjectAltNames to be set
                    on the Certificate.
                  items:
                    type: string
                  type: array
                duration:
                  description: The requested 'duration' (i.e. lifetime) of the Certificate.
                    This option may be ignored/overridden by some issuer types. If
                    unset this defaults to 90 days. Certificate will be renewed either
                    2/3 through its duration or `renewBefore` period before its expiry,
                    whichever is later. Minimum accepted duration is 1 hour. Value
                    must be in units accepted by Go time.ParseDuration https://golang.org/pkg/time/#ParseDuration
                  type: string
                emailAddresses:
                  description: EmailAddresses is a list of email subjectAltNames to
                    be set on the Certificate.
                  items:
                    type: string
                  type: array
                encodeUsagesInRequest:
                  description: EncodeUsagesInRequest controls whether key usages should
                    be present in the CertificateRequest
                  type: boolean
                ipAddresses:
                  description: IPAddresses is a list of IP address subjectAltNames
                    to be set on the Certificate.
                  items:
                    type: string
                  type: array
                isCA:
                  description: IsCA will mark this Certificate as valid for certificate
                    signing. This will automatically add the `cert sign` usage to
                    the list of `usages`.
                  type: boolean
                issuerRef:
                  description: IssuerRef is a reference to the issuer for this certificate.
                    If the `kind` field is not set, or set to `Issuer`, an Issuer
                    resource with the given name in the same namespace as the Certificate
                    will be used. If the `kind` field is set to `ClusterIssuer`, a
                    ClusterIssuer with the provided name will be used. The `name`
                    field in this stanza is required at all times.
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                  - name
                  type: object
                keystores:
                  description: Keystores configures additional keystore output formats
                    stored in the `secretName` Secret resource.
                  properties:
                    jks:
                      description: JKS configures options for storing a JKS keystore
                        in the `spec.secretName` Secret resource.
                      properties:
                        create:
                          description: Create enables JKS keystore creation for the
                            Certificate. If true, a file named `keystore.jks` will
                            be created in the target Secret resource, encrypted using
                            the password stored in `passwordSecretRef`. The keystore
                            file will only be updated upon re-issuance. A file named
                            `truststore.jks` will also be created in the target Secret
                            resource, encrypted using the password stored in `passwordSecretRef`
                            containing the issuing Certificate Authority
                          type: boolean
                        passwordSecretRef:
                          description: PasswordSecretRef is a reference to a key in
                            a Secret resource containing the password used to encrypt
                            the JKS keystore.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - create
                      - passwordSecretRef
                      type: object
                    pkcs12:
                      description: PKCS12 configures options for storing a PKCS12
                        keystore in the `spec.secretName` Secret resource.
                      properties:
                        create:
                          description: Create enables PKCS12 keystore creation for
                            the Certificate. If true, a file named `keystore.p12`
                            will be created in the target Secret resource, encrypted
                            using the password stored in `passwordSecretRef`. The
                            keystore file will only be updated upon re-issuance. A
                            file named `truststore.p12` will also be created in the
                            target Secret resource, encrypted using the password stored
                            in `passwordSecretRef` containing the issuing Certificate
                            Authority
                          type: boolean
                        passwordSecretRef:
                          description: PasswordSecretRef is a reference to a key in
                            a Secret resource containing the password used to encrypt
                            the PKCS12 keystore.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - create
                      - passwordSecretRef
                      type: object
                  type: object
                privateKey:
                  description: Options to control private keys used for the Certificate.
                  properties:
                    algorithm:
                      description: Algorithm is the private key algorithm of the corresponding
                        private key for this certificate. If provided, allowed values
                        are either `RSA`,`Ed25519` or `ECDSA` If `algorithm` is specified
                        and `size` is not provided, key size of 256 will be used for
                        `ECDSA` key algorithm and key size of 2048 will be used for
                        `RSA` key algorithm. key size is ignored when using the `Ed25519`
                        key algorithm.
                      enum:
                      - RSA
                      - ECDSA
                      - Ed25519
                      type: string
                    encoding:
                      description: The private key cryptography standards (PKCS) encoding
                        for this certificate's private key to be encoded in. If provided,
                        allowed values are `PKCS1` and `PKCS8` standing for PKCS#1
                        and PKCS#8, respectively. Defaults to `PKCS1` if not specified.
                      enum:
                      - PKCS1
                      - PKCS8
                      type: string
                    rotationPolicy:
                      description: RotationPolicy controls how private keys should
                        be regenerated when a re-issuance is being processed. If set
                        to Never, a private key will only be generated if one does
                        not already exist in the target `spec.secretName`. If one
                        does exists but it does not have the correct algorithm or
                        size, a warning will be raised to await user intervention.
                        If set to Always, a private key matching the specified requirements
                        will be generated whenever a re-issuance occurs. Default is
                        'Never' for backward compatibility.
                      type: string
                    size:
                      description: Size is the key bit size of the corresponding private
                        key for this certificate. If `algorithm` is set to `RSA`,
                        valid values are `2048`, `4096` or `8192`, and will default
                        to `2048` if not specified. If `algorithm` is set to `ECDSA`,
                        valid values are `256`, `384` or `521`, and will default to
                        `256` if not specified. If `algorithm` is set to `Ed25519`,
                        Size is ignored. No other values are allowed.
                      type: integer
                  type: object
                renewBefore:
                  description: How long before the currently issued certificate's
                    expiry cert-manager should renew the certificate. The default
                    is 2/3 of the issued certificate's duration. Minimum accepted
                    value is 5 minutes. Value must be in units accepted by Go time.ParseDuration
                    https://golang.org/pkg/time/#ParseDuration
                  type: string
                revisionHistoryLimit:
                  description: revisionHistoryLimit is the maximum number of CertificateRequest
                    revisions that are maintained in the Certificate's history. Each
                    revision represents a single `CertificateRequest` created by this
                    Certificate, either when it was created, renewed, or Spec was
                    changed. Revisions will be removed by oldest first if the number
                    of revisions exceeds this number. If set, revisionHistoryLimit
                    must be a value of `1` or greater. If unset (`nil`), revisions
                    will not be garbage collected. Default value is `nil`.
                  format: int32
                  type: integer
                secretName:
                  description: SecretName is the name of the secret resource that
                    will be automatically created and managed by this Certificate
                    resource. It will be populated with a private key and certificate,
                    signed by the denoted issuer.
                  type: string
                secretTemplate:
                  description: SecretTemplate defines annotations and labels to be
                    propagated to the Kubernetes Secret when it is created or updated.
                    Once created, labels and annotations are not yet removed from
                    the Secret when they are removed from the template. See https://github.com/jetstack/cert-manager/issues/4292
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: Annotations is a key value map to be copied to
                        the target Kubernetes Secret.
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels is a key value map to be copied to the target
                        Kubernetes Secret.
                      type: object
                  type: object
                subject:
                  description: Full X509 name specification (https://golang.org/pkg/crypto/x509/pkix/#Name).
                  properties:
                    countries:
                      description: Countries to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    localities:
                      description: Cities to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    organizationalUnits:
                      description: Organizational Units to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    organizations:
                      description: Organizations to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    postalCodes:
                      description: Postal codes to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    provinces:
                      description: State/Provinces to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    serialNumber:
                      description: Serial number to be used on the Certificate.
                      type: string
                    streetAddresses:
                      description: Street addresses to be used on the Certificate.
                      items:
                        type: string
                      type: array
                  type: object
                uris:
                  description: URIs is a list of URI subjectAltNames to be set on
                    the Certificate.
                  items:
                    type: string
                  type: array
                usages:
                  description: Usages is the set of x509 usages that are requested
                    for the certificate. Defaults to `digital signature` and `key
                    encipherment` if not specified.
                  items:
                    description: 'KeyUsage specifies valid usage contexts for keys.
                      See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12
                      Valid KeyUsage values are as follows: "signing", "digital signature",
                      "content commitment", "key encipherment", "key agreement", "data
                      encipherment", "cert sign", "crl sign", "encipher only", "decipher
                      only", "any", "server auth", "client auth", "code signing",
                      "email protection", "s/mime", "ipsec end system", "ipsec tunnel",
                      "ipsec user", "timestamping", "ocsp signing", "microsoft sgc",
                      "netscape sgc"'
                    enum:
                    - signing
                    - digital signature
                    - content commitment
                    - key encipherment
                    - key agreement
                    - data encipherment
                    - cert sign
                    - crl sign
                    - encipher only
                    - decipher only
                    - any
                    - server auth
                    - client auth
                    - code signing
                    - email protection
                    - s/mime
                    - ipsec end system
                    - ipsec tunnel
                    - ipsec user
                    - timestamping
                    - ocsp signing
                    - microsoft sgc
                    - netscape sgc
                    type: string
                  type: array
              required:
              - issuerRef
              - secretName
              type: object
            status:
              description: Status of the Certificate. This is set and managed automatically.
              properties:
                conditions:
                  description: List of status conditions to indicate the status of
                    certificates. Known condition types are `Ready` and `Issuing`.
                  items:
                    description: CertificateCondition contains condition information
                      for an Certificate.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      observedGeneration:
                        description: If set, this represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.condition[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the Certificate.
                        format: int64
                        type: integer
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`,
                          `Unknown`).
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Ready`,
                          `Issuing`).
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                lastFailureTime:
                  description: LastFailureTime is the time as recorded by the Certificate
                    controller of the most recent failure to complete a CertificateRequest
                    for this Certificate resource. If set, cert-manager will not re-request
                    another Certificate until 1 hour has elapsed from this time.
                  format: date-time
                  type: string
                nextPrivateKeySecretName:
                  description: The name of the Secret resource containing the private
                    key to be used for the next certificate iteration. The keymanager
                    controller will automatically set this field if the `Issuing`
                    condition is set to `True`. It will automatically unset this field
                    when the Issuing condition is not set or False.
                  type: string
                notAfter:
                  description: The expiration time of the certificate stored in the
                    secret named by this resource in `spec.secretName`.
                  format: date-time
                  type: string
                notBefore:
                  description: The time after which the certificate stored in the
                    secret named by this resource in spec.secretName is valid.
                  format: date-time
                  type: string
                renewalTime:
                  description: RenewalTime is the time at which the certificate will
                    be next renewed. If not set, no upcoming renewal is scheduled.
                  format: date-time
                  type: string
                revision:
                  description: "The current 'revision' of the certificate as issued.
                    \n When a CertificateRequest resource is created, it will have
                    the `cert-manager.io/certificate-revision` set to one greater
                    than the current value of this field. \n Upon issuance, this field
                    will be set to the value of the annotation on the CertificateRequest
                    resource used to issue the certificate. \n Persisting the value
                    on the CertificateRequest resource allows the certificates controller
                    to know whether a request is part of an old issuance or if it
                    is part of the ongoing revision's issuance by checking if the
                    revision value in the annotation is greater than this field."
                  type: integer
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - cert-manager
      kind: Certificate
      listKind: CertificateList
      plural: certificates
      shortNames:
      - cert
      - certs
      singular: certificate
    conditions:
    - lastTransitionTime: "2022-04-12T18:17:07Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2022-04-12T18:17:07Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      cert-manager.io/inject-ca-from-secret: cert-manager/cert-manager-webhook-ca
    creationTimestamp: "2022-04-12T18:17:07Z"
    generation: 1
    labels:
      app: cert-manager
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.5.4
      kustomize.toolkit.fluxcd.io/name: cert-manager-kustomization
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: challenges.acme.cert-manager.io
    resourceVersion: "10089364"
    uid: 8651b533-ce6a-4d96-b066-dd08133291c6
  spec:
    conversion:
      strategy: Webhook
      webhook:
        clientConfig:
          service:
            name: cert-manager-webhook
            namespace: cert-manager
            path: /convert
            port: 443
        conversionReviewVersions:
        - v1
        - v1beta1
    group: acme.cert-manager.io
    names:
      categories:
      - cert-manager
      - cert-manager-acme
      kind: Challenge
      listKind: ChallengeList
      plural: challenges
      singular: challenge
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.state
        name: State
        type: string
      - jsonPath: .spec.dnsName
        name: Domain
        type: string
      - jsonPath: .status.reason
        name: Reason
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: Challenge is a type to represent a Challenge request with an
            ACME server
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                authzURL:
                  description: AuthzURL is the URL to the ACME Authorization resource
                    that this challenge is a part of.
                  type: string
                dnsName:
                  description: DNSName is the identifier that this challenge is for,
                    e.g. example.com. If the requested DNSName is a 'wildcard', this
                    field MUST be set to the non-wildcard domain, e.g. for `*.example.com`,
                    it must be `example.com`.
                  type: string
                issuerRef:
                  description: IssuerRef references a properly configured ACME-type
                    Issuer which should be used to create this Challenge. If the Issuer
                    does not exist, processing will be retried. If the Issuer is not
                    an 'ACME' Issuer, an error will be returned and the Challenge
                    will be marked as failed.
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                  - name
                  type: object
                key:
                  description: 'Key is the ACME challenge key for this challenge For
                    HTTP01 challenges, this is the value that must be responded with
                    to complete the HTTP01 challenge in the format: `<private key
                    JWK thumbprint>.<key from acme server for challenge>`. For DNS01
                    challenges, this is the base64 encoded SHA256 sum of the `<private
                    key JWK thumbprint>.<key from acme server for challenge>` text
                    that must be set as the TXT record content.'
                  type: string
                solver:
                  description: Solver contains the domain solving configuration that
                    should be used to solve this challenge resource.
                  properties:
                    dns01:
                      description: Configures cert-manager to attempt to complete
                        authorizations by performing the DNS01 challenge flow.
                      properties:
                        acmedns:
                          description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)
                            API to manage DNS01 challenge records.
                          properties:
                            accountSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            host:
                              type: string
                          required:
                          - accountSecretRef
                          - host
                          type: object
                        akamai:
                          description: Use the Akamai DNS zone management API to manage
                            DNS01 challenge records.
                          properties:
                            accessTokenSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            clientSecretSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            clientTokenSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            serviceConsumerDomain:
                              type: string
                          required:
                          - accessTokenSecretRef
                          - clientSecretSecretRef
                          - clientTokenSecretRef
                          - serviceConsumerDomain
                          type: object
                        azuredns:
                          description: Use the Microsoft Azure DNS API to manage DNS01
                            challenge records.
                          properties:
                            clientID:
                              description: if both this and ClientSecret are left
                                unset MSI will be used
                              type: string
                            clientSecretSecretRef:
                              description: if both this and ClientID are left unset
                                MSI will be used
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            environment:
                              enum:
                              - AzurePublicCloud
                              - AzureChinaCloud
                              - AzureGermanCloud
                              - AzureUSGovernmentCloud
                              type: string
                            hostedZoneName:
                              type: string
                            resourceGroupName:
                              type: string
                            subscriptionID:
                              type: string
                            tenantID:
                              description: when specifying ClientID and ClientSecret
                                then this field is also needed
                              type: string
                          required:
                          - resourceGroupName
                          - subscriptionID
                          type: object
                        clouddns:
                          description: Use the Google Cloud DNS API to manage DNS01
                            challenge records.
                          properties:
                            hostedZoneName:
                              description: HostedZoneName is an optional field that
                                tells cert-manager in which Cloud DNS zone the challenge
                                record has to be created. If left empty cert-manager
                                will automatically choose a zone.
                              type: string
                            project:
                              type: string
                            serviceAccountSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - project
                          type: object
                        cloudflare:
                          description: Use the Cloudflare API to manage DNS01 challenge
                            records.
                          properties:
                            apiKeySecretRef:
                              description: 'API key to use to authenticate with Cloudflare.
                                Note: using an API token to authenticate is now the
                                recommended method as it allows greater control of
                                permissions.'
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            apiTokenSecretRef:
                              description: API token used to authenticate with Cloudflare.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            email:
                              description: Email of the account, only required when
                                using API key based authentication.
                              type: string
                          type: object
                        cnameStrategy:
                          description: CNAMEStrategy configures how the DNS01 provider
                            should handle CNAME records when found in DNS zones.
                          enum:
                          - None
                          - Follow
                          type: string
                        digitalocean:
                          description: Use the DigitalOcean DNS API to manage DNS01
                            challenge records.
                          properties:
                            tokenSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - tokenSecretRef
                          type: object
                        rfc2136:
                          description: Use RFC2136 ("Dynamic Updates in the Domain
                            Name System") (https://datatracker.ietf.org/doc/rfc2136/)
                            to manage DNS01 challenge records.
                          properties:
                            nameserver:
                              description: The IP address or hostname of an authoritative
                                DNS server supporting RFC2136 in the form host:port.
                                If the host is an IPv6 address it must be enclosed
                                in square brackets (e.g [2001:db8::1])┬á; port is optional.
                                This field is required.
                              type: string
                            tsigAlgorithm:
                              description: 'The TSIG Algorithm configured in the DNS
                                supporting RFC2136. Used only when ``tsigSecretSecretRef``
                                and ``tsigKeyName`` are defined. Supported values
                                are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``,
                                ``HMACSHA256`` or ``HMACSHA512``.'
                              type: string
                            tsigKeyName:
                              description: The TSIG Key name configured in the DNS.
                                If ``tsigSecretSecretRef`` is defined, this field
                                is required.
                              type: string
                            tsigSecretSecretRef:
                              description: The name of the secret containing the TSIG
                                value. If ``tsigKeyName`` is defined, this field is
                                required.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - nameserver
                          type: object
                        route53:
                          description: Use the AWS Route53 API to manage DNS01 challenge
                            records.
                          properties:
                            accessKeyID:
                              description: 'The AccessKeyID is used for authentication.
                                If not set we fall-back to using env vars, shared
                                credentials file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                              type: string
                            hostedZoneID:
                              description: If set, the provider will manage only this
                                zone in Route53 and will not do an lookup using the
                                route53:ListHostedZonesByName api call.
                              type: string
                            region:
                              description: Always set the region when using AccessKeyID
                                and SecretAccessKey
                              type: string
                            role:
                              description: Role is a Role ARN which the Route53 provider
                                will assume using either the explicit credentials
                                AccessKeyID/SecretAccessKey or the inferred credentials
                                from environment variables, shared credentials file
                                or AWS Instance metadata
                              type: string
                            secretAccessKeySecretRef:
                              description: The SecretAccessKey is used for authentication.
                                If not set we fall-back to using env vars, shared
                                credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - region
                          type: object
                        webhook:
                          description: Configure an external webhook based DNS01 challenge
                            solver to manage DNS01 challenge records.
                          properties:
                            config:
                              description: Additional configuration that should be
                                passed to the webhook apiserver when challenges are
                                processed. This can contain arbitrary JSON data. Secret
                                values should not be specified in this stanza. If
                                secret values are needed (e.g. credentials for a DNS
                                service), you should use a SecretKeySelector to reference
                                a Secret resource. For details on the schema of this
                                field, consult the webhook provider implementation's
                                documentation.
                              x-kubernetes-preserve-unknown-fields: true
                            groupName:
                              description: The API group name that should be used
                                when POSTing ChallengePayload resources to the webhook
                                apiserver. This should be the same as the GroupName
                                specified in the webhook provider implementation.
                              type: string
                            solverName:
                              description: The name of the solver to use, as defined
                                in the webhook provider implementation. This will
                                typically be the name of the provider, e.g. 'cloudflare'.
                              type: string
                          required:
                          - groupName
                          - solverName
                          type: object
                      type: object
                    http01:
                      description: Configures cert-manager to attempt to complete
                        authorizations by performing the HTTP01 challenge flow. It
                        is not possible to obtain certificates for wildcard domain
                        names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
                      properties:
                        gatewayHTTPRoute:
                          description: The Gateway API is a sig-network community
                            API that models service networking in Kubernetes (https://gateway-api.sigs.k8s.io/).
                            The Gateway solver will create HTTPRoutes with the specified
                            labels in the same namespace as the challenge. This solver
                            is experimental, and fields / behaviour may change in
                            the future.
                          properties:
                            labels:
                              additionalProperties:
                                type: string
                              description: The labels that cert-manager will use when
                                creating the temporary HTTPRoute needed for solving
                                the HTTP-01 challenge. These labels must match the
                                label selector of at least one Gateway.
                              type: object
                            serviceType:
                              description: Optional service type for Kubernetes solver
                                service. Supported values are NodePort or ClusterIP.
                                If unset, defaults to NodePort.
                              type: string
                          type: object
                        ingress:
                          description: The ingress based HTTP01 challenge solver will
                            solve challenges by creating or modifying Ingress resources
                            in order to route requests for '/.well-known/acme-challenge/XYZ'
                            to 'challenge solver' pods that are provisioned by cert-manager
                            for each Challenge to be completed.
                          properties:
                            class:
                              description: The ingress class to use when creating
                                Ingress resources to solve ACME challenges that use
                                this challenge solver. Only one of 'class' or 'name'
                                may be specified.
                              type: string
                            ingressTemplate:
                              description: Optional ingress template used to configure
                                the ACME challenge solver ingress used for HTTP01
                                challenges
                              properties:
                                metadata:
                                  description: ObjectMeta overrides for the ingress
                                    used to solve HTTP01 challenges. Only the 'labels'
                                    and 'annotations' fields may be set. If labels
                                    or annotations overlap with in-built values, the
                                    values here will override the in-built values.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations that should be added
                                        to the created ACME HTTP01 solver ingress.
                                      type: object
                                    labels:
                                      additionalProperties:
                                        type: string
                                      description: Labels that should be added to
                                        the created ACME HTTP01 solver ingress.
                                      type: object
                                  type: object
                              type: object
                            name:
                              description: The name of the ingress resource that should
                                have ACME challenge solving routes inserted into it
                                in order to solve HTTP01 challenges. This is typically
                                used in conjunction with ingress controllers like
                                ingress-gce, which maintains a 1:1 mapping between
                                external IPs and ingress resources.
                              type: string
                            podTemplate:
                              description: Optional pod template used to configure
                                the ACME challenge solver pods used for HTTP01 challenges.
                              properties:
                                metadata:
                                  description: ObjectMeta overrides for the pod used
                                    to solve HTTP01 challenges. Only the 'labels'
                                    and 'annotations' fields may be set. If labels
                                    or annotations overlap with in-built values, the
                                    values here will override the in-built values.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations that should be added
                                        to the create ACME HTTP01 solver pods.
                                      type: object
                                    labels:
                                      additionalProperties:
                                        type: string
                                      description: Labels that should be added to
                                        the created ACME HTTP01 solver pods.
                                      type: object
                                  type: object
                                spec:
                                  description: PodSpec defines overrides for the HTTP01
                                    challenge solver pod. Only the 'priorityClassName',
                                    'nodeSelector', 'affinity', 'serviceAccountName'
                                    and 'tolerations' fields are supported currently.
                                    All other fields will be ignored.
                                  properties:
                                    affinity:
                                      description: If specified, the pod's scheduling
                                        constraints
                                      properties:
                                        nodeAffinity:
                                          description: Describes node affinity scheduling
                                            rules for the pod.
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: The scheduler will prefer
                                                to schedule pods to nodes that satisfy
                                                the affinity expressions specified
                                                by this field, but it may choose a
                                                node that violates one or more of
                                                the expressions. The node that is
                                                most preferred is the one with the
                                                greatest sum of weights, i.e. for
                                                each node that meets all of the scheduling
                                                requirements (resource request, requiredDuringScheduling
                                                affinity expressions, etc.), compute
                                                a sum by iterating through the elements
                                                of this field and adding "weight"
                                                to the sum if the node matches the
                                                corresponding matchExpressions; the
                                                node(s) with the highest sum are the
                                                most preferred.
                                              items:
                                                description: An empty preferred scheduling
                                                  term matches all objects with implicit
                                                  weight 0 (i.e. it's a no-op). A
                                                  null preferred scheduling term matches
                                                  no objects (i.e. is also a no-op).
                                                properties:
                                                  preference:
                                                    description: A node selector term,
                                                      associated with the corresponding
                                                      weight.
                                                    properties:
                                                      matchExpressions:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's labels.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchFields:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's fields.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                    type: object
                                                  weight:
                                                    description: Weight associated
                                                      with matching the corresponding
                                                      nodeSelectorTerm, in the range
                                                      1-100.
                                                    format: int32
                                                    type: integer
                                                required:
                                                - preference
                                                - weight
                                                type: object
                                              type: array
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: If the affinity requirements
                                                specified by this field are not met
                                                at scheduling time, the pod will not
                                                be scheduled onto the node. If the
                                                affinity requirements specified by
                                                this field cease to be met at some
                                                point during pod execution (e.g. due
                                                to an update), the system may or may
                                                not try to eventually evict the pod
                                                from its node.
                                              properties:
                                                nodeSelectorTerms:
                                                  description: Required. A list of
                                                    node selector terms. The terms
                                                    are ORed.
                                                  items:
                                                    description: A null or empty node
                                                      selector term matches no objects.
                                                      The requirements of them are
                                                      ANDed. The TopologySelectorTerm
                                                      type implements a subset of
                                                      the NodeSelectorTerm.
                                                    properties:
                                                      matchExpressions:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's labels.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchFields:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's fields.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                    type: object
                                                  type: array
                                              required:
                                              - nodeSelectorTerms
                                              type: object
                                          type: object
                                        podAffinity:
                                          description: Describes pod affinity scheduling
                                            rules (e.g. co-locate this pod in the
                                            same node, zone, etc. as some other pod(s)).
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: The scheduler will prefer
                                                to schedule pods to nodes that satisfy
                                                the affinity expressions specified
                                                by this field, but it may choose a
                                                node that violates one or more of
                                                the expressions. The node that is
                                                most preferred is the one with the
                                                greatest sum of weights, i.e. for
                                                each node that meets all of the scheduling
                                                requirements (resource request, requiredDuringScheduling
                                                affinity expressions, etc.), compute
                                                a sum by iterating through the elements
                                                of this field and adding "weight"
                                                to the sum if the node has pods which
                                                matches the corresponding podAffinityTerm;
                                                the node(s) with the highest sum are
                                                the most preferred.
                                              items:
                                                description: The weights of all of
                                                  the matched WeightedPodAffinityTerm
                                                  fields are added per-node to find
                                                  the most preferred node(s)
                                                properties:
                                                  podAffinityTerm:
                                                    description: Required. A pod affinity
                                                      term, associated with the corresponding
                                                      weight.
                                                    properties:
                                                      labelSelector:
                                                        description: A label query
                                                          over a set of resources,
                                                          in this case pods.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaceSelector:
                                                        description: A label query
                                                          over the set of namespaces
                                                          that the term applies to.
                                                          The term is applied to the
                                                          union of the namespaces
                                                          selected by this field and
                                                          the ones listed in the namespaces
                                                          field. null selector and
                                                          null or empty namespaces
                                                          list means "this pod's namespace".
                                                          An empty selector ({}) matches
                                                          all namespaces. This field
                                                          is alpha-level and is only
                                                          honored when PodAffinityNamespaceSelector
                                                          feature is enabled.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaces:
                                                        description: namespaces specifies
                                                          a static list of namespace
                                                          names that the term applies
                                                          to. The term is applied
                                                          to the union of the namespaces
                                                          listed in this field and
                                                          the ones selected by namespaceSelector.
                                                          null or empty namespaces
                                                          list and null namespaceSelector
                                                          means "this pod's namespace"
                                                        items:
                                                          type: string
                                                        type: array
                                                      topologyKey:
                                                        description: This pod should
                                                          be co-located (affinity)
                                                          or not co-located (anti-affinity)
                                                          with the pods matching the
                                                          labelSelector in the specified
                                                          namespaces, where co-located
                                                          is defined as running on
                                                          a node whose value of the
                                                          label with key topologyKey
                                                          matches that of any node
                                                          on which any of the selected
                                                          pods is running. Empty topologyKey
                                                          is not allowed.
                                                        type: string
                                                    required:
                                                    - topologyKey
                                                    type: object
                                                  weight:
                                                    description: weight associated
                                                      with matching the corresponding
                                                      podAffinityTerm, in the range
                                                      1-100.
                                                    format: int32
                                                    type: integer
                                                required:
                                                - podAffinityTerm
                                                - weight
                                                type: object
                                              type: array
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: If the affinity requirements
                                                specified by this field are not met
                                                at scheduling time, the pod will not
                                                be scheduled onto the node. If the
                                                affinity requirements specified by
                                                this field cease to be met at some
                                                point during pod execution (e.g. due
                                                to a pod label update), the system
                                                may or may not try to eventually evict
                                                the pod from its node. When there
                                                are multiple elements, the lists of
                                                nodes corresponding to each podAffinityTerm
                                                are intersected, i.e. all terms must
                                                be satisfied.
                                              items:
                                                description: Defines a set of pods
                                                  (namely those matching the labelSelector
                                                  relative to the given namespace(s))
                                                  that this pod should be co-located
                                                  (affinity) or not co-located (anti-affinity)
                                                  with, where co-located is defined
                                                  as running on a node whose value
                                                  of the label with key <topologyKey>
                                                  matches that of any node on which
                                                  a pod of the set of pods is running
                                                properties:
                                                  labelSelector:
                                                    description: A label query over
                                                      a set of resources, in this
                                                      case pods.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaceSelector:
                                                    description: A label query over
                                                      the set of namespaces that the
                                                      term applies to. The term is
                                                      applied to the union of the
                                                      namespaces selected by this
                                                      field and the ones listed in
                                                      the namespaces field. null selector
                                                      and null or empty namespaces
                                                      list means "this pod's namespace".
                                                      An empty selector ({}) matches
                                                      all namespaces. This field is
                                                      alpha-level and is only honored
                                                      when PodAffinityNamespaceSelector
                                                      feature is enabled.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaces:
                                                    description: namespaces specifies
                                                      a static list of namespace names
                                                      that the term applies to. The
                                                      term is applied to the union
                                                      of the namespaces listed in
                                                      this field and the ones selected
                                                      by namespaceSelector. null or
                                                      empty namespaces list and null
                                                      namespaceSelector means "this
                                                      pod's namespace"
                                                    items:
                                                      type: string
                                                    type: array
                                                  topologyKey:
                                                    description: This pod should be
                                                      co-located (affinity) or not
                                                      co-located (anti-affinity) with
                                                      the pods matching the labelSelector
                                                      in the specified namespaces,
                                                      where co-located is defined
                                                      as running on a node whose value
                                                      of the label with key topologyKey
                                                      matches that of any node on
                                                      which any of the selected pods
                                                      is running. Empty topologyKey
                                                      is not allowed.
                                                    type: string
                                                required:
                                                - topologyKey
                                                type: object
                                              type: array
                                          type: object
                                        podAntiAffinity:
                                          description: Describes pod anti-affinity
                                            scheduling rules (e.g. avoid putting this
                                            pod in the same node, zone, etc. as some
                                            other pod(s)).
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: The scheduler will prefer
                                                to schedule pods to nodes that satisfy
                                                the anti-affinity expressions specified
                                                by this field, but it may choose a
                                                node that violates one or more of
                                                the expressions. The node that is
                                                most preferred is the one with the
                                                greatest sum of weights, i.e. for
                                                each node that meets all of the scheduling
                                                requirements (resource request, requiredDuringScheduling
                                                anti-affinity expressions, etc.),
                                                compute a sum by iterating through
                                                the elements of this field and adding
                                                "weight" to the sum if the node has
                                                pods which matches the corresponding
                                                podAffinityTerm; the node(s) with
                                                the highest sum are the most preferred.
                                              items:
                                                description: The weights of all of
                                                  the matched WeightedPodAffinityTerm
                                                  fields are added per-node to find
                                                  the most preferred node(s)
                                                properties:
                                                  podAffinityTerm:
                                                    description: Required. A pod affinity
                                                      term, associated with the corresponding
                                                      weight.
                                                    properties:
                                                      labelSelector:
                                                        description: A label query
                                                          over a set of resources,
                                                          in this case pods.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaceSelector:
                                                        description: A label query
                                                          over the set of namespaces
                                                          that the term applies to.
                                                          The term is applied to the
                                                          union of the namespaces
                                                          selected by this field and
                                                          the ones listed in the namespaces
                                                          field. null selector and
                                                          null or empty namespaces
                                                          list means "this pod's namespace".
                                                          An empty selector ({}) matches
                                                          all namespaces. This field
                                                          is alpha-level and is only
                                                          honored when PodAffinityNamespaceSelector
                                                          feature is enabled.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaces:
                                                        description: namespaces specifies
                                                          a static list of namespace
                                                          names that the term applies
                                                          to. The term is applied
                                                          to the union of the namespaces
                                                          listed in this field and
                                                          the ones selected by namespaceSelector.
                                                          null or empty namespaces
                                                          list and null namespaceSelector
                                                          means "this pod's namespace"
                                                        items:
                                                          type: string
                                                        type: array
                                                      topologyKey:
                                                        description: This pod should
                                                          be co-located (affinity)
                                                          or not co-located (anti-affinity)
                                                          with the pods matching the
                                                          labelSelector in the specified
                                                          namespaces, where co-located
                                                          is defined as running on
                                                          a node whose value of the
                                                          label with key topologyKey
                                                          matches that of any node
                                                          on which any of the selected
                                                          pods is running. Empty topologyKey
                                                          is not allowed.
                                                        type: string
                                                    required:
                                                    - topologyKey
                                                    type: object
                                                  weight:
                                                    description: weight associated
                                                      with matching the corresponding
                                                      podAffinityTerm, in the range
                                                      1-100.
                                                    format: int32
                                                    type: integer
                                                required:
                                                - podAffinityTerm
                                                - weight
                                                type: object
                                              type: array
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: If the anti-affinity requirements
                                                specified by this field are not met
                                                at scheduling time, the pod will not
                                                be scheduled onto the node. If the
                                                anti-affinity requirements specified
                                                by this field cease to be met at some
                                                point during pod execution (e.g. due
                                                to a pod label update), the system
                                                may or may not try to eventually evict
                                                the pod from its node. When there
                                                are multiple elements, the lists of
                                                nodes corresponding to each podAffinityTerm
                                                are intersected, i.e. all terms must
                                                be satisfied.
                                              items:
                                                description: Defines a set of pods
                                                  (namely those matching the labelSelector
                                                  relative to the given namespace(s))
                                                  that this pod should be co-located
                                                  (affinity) or not co-located (anti-affinity)
                                                  with, where co-located is defined
                                                  as running on a node whose value
                                                  of the label with key <topologyKey>
                                                  matches that of any node on which
                                                  a pod of the set of pods is running
                                                properties:
                                                  labelSelector:
                                                    description: A label query over
                                                      a set of resources, in this
                                                      case pods.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaceSelector:
                                                    description: A label query over
                                                      the set of namespaces that the
                                                      term applies to. The term is
                                                      applied to the union of the
                                                      namespaces selected by this
                                                      field and the ones listed in
                                                      the namespaces field. null selector
                                                      and null or empty namespaces
                                                      list means "this pod's namespace".
                                                      An empty selector ({}) matches
                                                      all namespaces. This field is
                                                      alpha-level and is only honored
                                                      when PodAffinityNamespaceSelector
                                                      feature is enabled.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaces:
                                                    description: namespaces specifies
                                                      a static list of namespace names
                                                      that the term applies to. The
                                                      term is applied to the union
                                                      of the namespaces listed in
                                                      this field and the ones selected
                                                      by namespaceSelector. null or
                                                      empty namespaces list and null
                                                      namespaceSelector means "this
                                                      pod's namespace"
                                                    items:
                                                      type: string
                                                    type: array
                                                  topologyKey:
                                                    description: This pod should be
                                                      co-located (affinity) or not
                                                      co-located (anti-affinity) with
                                                      the pods matching the labelSelector
                                                      in the specified namespaces,
                                                      where co-located is defined
                                                      as running on a node whose value
                                                      of the label with key topologyKey
                                                      matches that of any node on
                                                      which any of the selected pods
                                                      is running. Empty topologyKey
                                                      is not allowed.
                                                    type: string
                                                required:
                                                - topologyKey
                                                type: object
                                              type: array
                                          type: object
                                      type: object
                                    nodeSelector:
                                      additionalProperties:
                                        type: string
                                      description: 'NodeSelector is a selector which
                                        must be true for the pod to fit on a node.
                                        Selector which must match a node''s labels
                                        for the pod to be scheduled on that node.
                                        More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                      type: object
                                    priorityClassName:
                                      description: If specified, the pod's priorityClassName.
                                      type: string
                                    serviceAccountName:
                                      description: If specified, the pod's service
                                        account
                                      type: string
                                    tolerations:
                                      description: If specified, the pod's tolerations.
                                      items:
                                        description: The pod this Toleration is attached
                                          to tolerates any taint that matches the
                                          triple <key,value,effect> using the matching
                                          operator <operator>.
                                        properties:
                                          effect:
                                            description: Effect indicates the taint
                                              effect to match. Empty means match all
                                              taint effects. When specified, allowed
                                              values are NoSchedule, PreferNoSchedule
                                              and NoExecute.
                                            type: string
                                          key:
                                            description: Key is the taint key that
                                              the toleration applies to. Empty means
                                              match all taint keys. If the key is
                                              empty, operator must be Exists; this
                                              combination means to match all values
                                              and all keys.
                                            type: string
                                          operator:
                                            description: Operator represents a key's
                                              relationship to the value. Valid operators
                                              are Exists and Equal. Defaults to Equal.
                                              Exists is equivalent to wildcard for
                                              value, so that a pod can tolerate all
                                              taints of a particular category.
                                            type: string
                                          tolerationSeconds:
                                            description: TolerationSeconds represents
                                              the period of time the toleration (which
                                              must be of effect NoExecute, otherwise
                                              this field is ignored) tolerates the
                                              taint. By default, it is not set, which
                                              means tolerate the taint forever (do
                                              not evict). Zero and negative values
                                              will be treated as 0 (evict immediately)
                                              by the system.
                                            format: int64
                                            type: integer
                                          value:
                                            description: Value is the taint value
                                              the toleration matches to. If the operator
                                              is Exists, the value should be empty,
                                              otherwise just a regular string.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            serviceType:
                              description: Optional service type for Kubernetes solver
                                service. Supported values are NodePort or ClusterIP.
                                If unset, defaults to NodePort.
                              type: string
                          type: object
                      type: object
                    selector:
                      description: Selector selects a set of DNSNames on the Certificate
                        resource that should be solved using this challenge solver.
                        If not specified, the solver will be treated as the 'default'
                        solver with the lowest priority, i.e. if any other solver
                        has a more specific match, it will be used instead.
                      properties:
                        dnsNames:
                          description: List of DNSNames that this solver will be used
                            to solve. If specified and a match is found, a dnsNames
                            selector will take precedence over a dnsZones selector.
                            If multiple solvers match with the same dnsNames value,
                            the solver with the most matching labels in matchLabels
                            will be selected. If neither has more matches, the solver
                            defined earlier in the list will be selected.
                          items:
                            type: string
                          type: array
                        dnsZones:
                          description: List of DNSZones that this solver will be used
                            to solve. The most specific DNS zone match specified here
                            will take precedence over other DNS zone matches, so a
                            solver specifying sys.example.com will be selected over
                            one specifying example.com for the domain www.sys.example.com.
                            If multiple solvers match with the same dnsZones value,
                            the solver with the most matching labels in matchLabels
                            will be selected. If neither has more matches, the solver
                            defined earlier in the list will be selected.
                          items:
                            type: string
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: A label selector that is used to refine the
                            set of certificate's that this challenge solver will apply
                            to.
                          type: object
                      type: object
                  type: object
                token:
                  description: Token is the ACME challenge token for this challenge.
                    This is the raw value returned from the ACME server.
                  type: string
                type:
                  description: Type is the type of ACME challenge this resource represents.
                    One of "http-01" or "dns-01".
                  enum:
                  - http-01
                  - dns-01
                  type: string
                url:
                  description: URL is the URL of the ACME Challenge resource for this
                    challenge. This can be used to lookup details about the status
                    of this challenge.
                  type: string
                wildcard:
                  description: Wildcard will be true if this challenge is for a wildcard
                    identifier, for example '*.example.com'.
                  type: boolean
              required:
              - authzURL
              - dnsName
              - issuerRef
              - key
              - solver
              - token
              - type
              - url
              type: object
            status:
              properties:
                presented:
                  description: Presented will be set to true if the challenge values
                    for this challenge are currently 'presented'. This *does not*
                    imply the self check is passing. Only that the values have been
                    'submitted' for the appropriate challenge mechanism (i.e. the
                    DNS01 TXT record has been presented, or the HTTP01 configuration
                    has been configured).
                  type: boolean
                processing:
                  description: Processing is used to denote whether this challenge
                    should be processed or not. This field will only be set to true
                    by the 'scheduling' component. It will only be set to false by
                    the 'challenges' controller, after the challenge has reached a
                    final state or timed out. If this field is set to false, the challenge
                    controller will not take any more action.
                  type: boolean
                reason:
                  description: Reason contains human readable information on why the
                    Challenge is in the current state.
                  type: string
                state:
                  description: State contains the current 'state' of the challenge.
                    If not set, the state of the challenge is unknown.
                  enum:
                  - valid
                  - ready
                  - pending
                  - processing
                  - invalid
                  - expired
                  - errored
                  type: string
              type: object
          required:
          - metadata
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.state
        name: State
        type: string
      - jsonPath: .spec.dnsName
        name: Domain
        type: string
      - jsonPath: .status.reason
        name: Reason
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha3
      schema:
        openAPIV3Schema:
          description: Challenge is a type to represent a Challenge request with an
            ACME server
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                authzURL:
                  description: AuthzURL is the URL to the ACME Authorization resource
                    that this challenge is a part of.
                  type: string
                dnsName:
                  description: DNSName is the identifier that this challenge is for,
                    e.g. example.com. If the requested DNSName is a 'wildcard', this
                    field MUST be set to the non-wildcard domain, e.g. for `*.example.com`,
                    it must be `example.com`.
                  type: string
                issuerRef:
                  description: IssuerRef references a properly configured ACME-type
                    Issuer which should be used to create this Challenge. If the Issuer
                    does not exist, processing will be retried. If the Issuer is not
                    an 'ACME' Issuer, an error will be returned and the Challenge
                    will be marked as failed.
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                  - name
                  type: object
                key:
                  description: 'Key is the ACME challenge key for this challenge For
                    HTTP01 challenges, this is the value that must be responded with
                    to complete the HTTP01 challenge in the format: `<private key
                    JWK thumbprint>.<key from acme server for challenge>`. For DNS01
                    challenges, this is the base64 encoded SHA256 sum of the `<private
                    key JWK thumbprint>.<key from acme server for challenge>` text
                    that must be set as the TXT record content.'
                  type: string
                solver:
                  description: Solver contains the domain solving configuration that
                    should be used to solve this challenge resource.
                  properties:
                    dns01:
                      description: Configures cert-manager to attempt to complete
                        authorizations by performing the DNS01 challenge flow.
                      properties:
                        acmedns:
                          description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)
                            API to manage DNS01 challenge records.
                          properties:
                            accountSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            host:
                              type: string
                          required:
                          - accountSecretRef
                          - host
                          type: object
                        akamai:
                          description: Use the Akamai DNS zone management API to manage
                            DNS01 challenge records.
                          properties:
                            accessTokenSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            clientSecretSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            clientTokenSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            serviceConsumerDomain:
                              type: string
                          required:
                          - accessTokenSecretRef
                          - clientSecretSecretRef
                          - clientTokenSecretRef
                          - serviceConsumerDomain
                          type: object
                        azuredns:
                          description: Use the Microsoft Azure DNS API to manage DNS01
                            challenge records.
                          properties:
                            clientID:
                              description: if both this and ClientSecret are left
                                unset MSI will be used
                              type: string
                            clientSecretSecretRef:
                              description: if both this and ClientID are left unset
                                MSI will be used
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            environment:
                              enum:
                              - AzurePublicCloud
                              - AzureChinaCloud
                              - AzureGermanCloud
                              - AzureUSGovernmentCloud
                              type: string
                            hostedZoneName:
                              type: string
                            resourceGroupName:
                              type: string
                            subscriptionID:
                              type: string
                            tenantID:
                              description: when specifying ClientID and ClientSecret
                                then this field is also needed
                              type: string
                          required:
                          - resourceGroupName
                          - subscriptionID
                          type: object
                        clouddns:
                          description: Use the Google Cloud DNS API to manage DNS01
                            challenge records.
                          properties:
                            hostedZoneName:
                              description: HostedZoneName is an optional field that
                                tells cert-manager in which Cloud DNS zone the challenge
                                record has to be created. If left empty cert-manager
                                will automatically choose a zone.
                              type: string
                            project:
                              type: string
                            serviceAccountSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - project
                          type: object
                        cloudflare:
                          description: Use the Cloudflare API to manage DNS01 challenge
                            records.
                          properties:
                            apiKeySecretRef:
                              description: 'API key to use to authenticate with Cloudflare.
                                Note: using an API token to authenticate is now the
                                recommended method as it allows greater control of
                                permissions.'
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            apiTokenSecretRef:
                              description: API token used to authenticate with Cloudflare.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            email:
                              description: Email of the account, only required when
                                using API key based authentication.
                              type: string
                          type: object
                        cnameStrategy:
                          description: CNAMEStrategy configures how the DNS01 provider
                            should handle CNAME records when found in DNS zones.
                          enum:
                          - None
                          - Follow
                          type: string
                        digitalocean:
                          description: Use the DigitalOcean DNS API to manage DNS01
                            challenge records.
                          properties:
                            tokenSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - tokenSecretRef
                          type: object
                        rfc2136:
                          description: Use RFC2136 ("Dynamic Updates in the Domain
                            Name System") (https://datatracker.ietf.org/doc/rfc2136/)
                            to manage DNS01 challenge records.
                          properties:
                            nameserver:
                              description: The IP address or hostname of an authoritative
                                DNS server supporting RFC2136 in the form host:port.
                                If the host is an IPv6 address it must be enclosed
                                in square brackets (e.g [2001:db8::1])┬á; port is optional.
                                This field is required.
                              type: string
                            tsigAlgorithm:
                              description: 'The TSIG Algorithm configured in the DNS
                                supporting RFC2136. Used only when ``tsigSecretSecretRef``
                                and ``tsigKeyName`` are defined. Supported values
                                are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``,
                                ``HMACSHA256`` or ``HMACSHA512``.'
                              type: string
                            tsigKeyName:
                              description: The TSIG Key name configured in the DNS.
                                If ``tsigSecretSecretRef`` is defined, this field
                                is required.
                              type: string
                            tsigSecretSecretRef:
                              description: The name of the secret containing the TSIG
                                value. If ``tsigKeyName`` is defined, this field is
                                required.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - nameserver
                          type: object
                        route53:
                          description: Use the AWS Route53 API to manage DNS01 challenge
                            records.
                          properties:
                            accessKeyID:
                              description: 'The AccessKeyID is used for authentication.
                                If not set we fall-back to using env vars, shared
                                credentials file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                              type: string
                            hostedZoneID:
                              description: If set, the provider will manage only this
                                zone in Route53 and will not do an lookup using the
                                route53:ListHostedZonesByName api call.
                              type: string
                            region:
                              description: Always set the region when using AccessKeyID
                                and SecretAccessKey
                              type: string
                            role:
                              description: Role is a Role ARN which the Route53 provider
                                will assume using either the explicit credentials
                                AccessKeyID/SecretAccessKey or the inferred credentials
                                from environment variables, shared credentials file
                                or AWS Instance metadata
                              type: string
                            secretAccessKeySecretRef:
                              description: The SecretAccessKey is used for authentication.
                                If not set we fall-back to using env vars, shared
                                credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - region
                          type: object
                        webhook:
                          description: Configure an external webhook based DNS01 challenge
                            solver to manage DNS01 challenge records.
                          properties:
                            config:
                              description: Additional configuration that should be
                                passed to the webhook apiserver when challenges are
                                processed. This can contain arbitrary JSON data. Secret
                                values should not be specified in this stanza. If
                                secret values are needed (e.g. credentials for a DNS
                                service), you should use a SecretKeySelector to reference
                                a Secret resource. For details on the schema of this
                                field, consult the webhook provider implementation's
                                documentation.
                              x-kubernetes-preserve-unknown-fields: true
                            groupName:
                              description: The API group name that should be used
                                when POSTing ChallengePayload resources to the webhook
                                apiserver. This should be the same as the GroupName
                                specified in the webhook provider implementation.
                              type: string
                            solverName:
                              description: The name of the solver to use, as defined
                                in the webhook provider implementation. This will
                                typically be the name of the provider, e.g. 'cloudflare'.
                              type: string
                          required:
                          - groupName
                          - solverName
                          type: object
                      type: object
                    http01:
                      description: Configures cert-manager to attempt to complete
                        authorizations by performing the HTTP01 challenge flow. It
                        is not possible to obtain certificates for wildcard domain
                        names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
                      properties:
                        gatewayHTTPRoute:
                          description: The Gateway API is a sig-network community
                            API that models service networking in Kubernetes (https://gateway-api.sigs.k8s.io/).
                            The Gateway solver will create HTTPRoutes with the specified
                            labels in the same namespace as the challenge. This solver
                            is experimental, and fields / behaviour may change in
                            the future.
                          properties:
                            labels:
                              additionalProperties:
                                type: string
                              description: The labels that cert-manager will use when
                                creating the temporary HTTPRoute needed for solving
                                the HTTP-01 challenge. These labels must match the
                                label selector of at least one Gateway.
                              type: object
                            serviceType:
                              description: Optional service type for Kubernetes solver
                                service. Supported values are NodePort or ClusterIP.
                                If unset, defaults to NodePort.
                              type: string
                          type: object
                        ingress:
                          description: The ingress based HTTP01 challenge solver will
                            solve challenges by creating or modifying Ingress resources
                            in order to route requests for '/.well-known/acme-challenge/XYZ'
                            to 'challenge solver' pods that are provisioned by cert-manager
                            for each Challenge to be completed.
                          properties:
                            class:
                              description: The ingress class to use when creating
                                Ingress resources to solve ACME challenges that use
                                this challenge solver. Only one of 'class' or 'name'
                                may be specified.
                              type: string
                            ingressTemplate:
                              description: Optional ingress template used to configure
                                the ACME challenge solver ingress used for HTTP01
                                challenges
                              properties:
                                metadata:
                                  description: ObjectMeta overrides for the ingress
                                    used to solve HTTP01 challenges. Only the 'labels'
                                    and 'annotations' fields may be set. If labels
                                    or annotations overlap with in-built values, the
                                    values here will override the in-built values.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations that should be added
                                        to the created ACME HTTP01 solver ingress.
                                      type: object
                                    labels:
                                      additionalProperties:
                                        type: string
                                      description: Labels that should be added to
                                        the created ACME HTTP01 solver ingress.
                                      type: object
                                  type: object
                              type: object
                            name:
                              description: The name of the ingress resource that should
                                have ACME challenge solving routes inserted into it
                                in order to solve HTTP01 challenges. This is typically
                                used in conjunction with ingress controllers like
                                ingress-gce, which maintains a 1:1 mapping between
                                external IPs and ingress resources.
                              type: string
                            podTemplate:
                              description: Optional pod template used to configure
                                the ACME challenge solver pods used for HTTP01 challenges.
                              properties:
                                metadata:
                                  description: ObjectMeta overrides for the pod used
                                    to solve HTTP01 challenges. Only the 'labels'
                                    and 'annotations' fields may be set. If labels
                                    or annotations overlap with in-built values, the
                                    values here will override the in-built values.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations that should be added
                                        to the create ACME HTTP01 solver pods.
                                      type: object
                                    labels:
                                      additionalProperties:
                                        type: string
                                      description: Labels that should be added to
                                        the created ACME HTTP01 solver pods.
                                      type: object
                                  type: object
                                spec:
                                  description: PodSpec defines overrides for the HTTP01
                                    challenge solver pod. Only the 'priorityClassName',
                                    'nodeSelector', 'affinity', 'serviceAccountName'
                                    and 'tolerations' fields are supported currently.
                                    All other fields will be ignored.
                                  properties:
                                    affinity:
                                      description: If specified, the pod's scheduling
                                        constraints
                                      properties:
                                        nodeAffinity:
                                          description: Describes node affinity scheduling
                                            rules for the pod.
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: The scheduler will prefer
                                                to schedule pods to nodes that satisfy
                                                the affinity expressions specified
                                                by this field, but it may choose a
                                                node that violates one or more of
                                                the expressions. The node that is
                                                most preferred is the one with the
                                                greatest sum of weights, i.e. for
                                                each node that meets all of the scheduling
                                                requirements (resource request, requiredDuringScheduling
                                                affinity expressions, etc.), compute
                                                a sum by iterating through the elements
                                                of this field and adding "weight"
                                                to the sum if the node matches the
                                                corresponding matchExpressions; the
                                                node(s) with the highest sum are the
                                                most preferred.
                                              items:
                                                description: An empty preferred scheduling
                                                  term matches all objects with implicit
                                                  weight 0 (i.e. it's a no-op). A
                                                  null preferred scheduling term matches
                                                  no objects (i.e. is also a no-op).
                                                properties:
                                                  preference:
                                                    description: A node selector term,
                                                      associated with the corresponding
                                                      weight.
                                                    properties:
                                                      matchExpressions:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's labels.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchFields:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's fields.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                    type: object
                                                  weight:
                                                    description: Weight associated
                                                      with matching the corresponding
                                                      nodeSelectorTerm, in the range
                                                      1-100.
                                                    format: int32
                                                    type: integer
                                                required:
                                                - preference
                                                - weight
                                                type: object
                                              type: array
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: If the affinity requirements
                                                specified by this field are not met
                                                at scheduling time, the pod will not
                                                be scheduled onto the node. If the
                                                affinity requirements specified by
                                                this field cease to be met at some
                                                point during pod execution (e.g. due
                                                to an update), the system may or may
                                                not try to eventually evict the pod
                                                from its node.
                                              properties:
                                                nodeSelectorTerms:
                                                  description: Required. A list of
                                                    node selector terms. The terms
                                                    are ORed.
                                                  items:
                                                    description: A null or empty node
                                                      selector term matches no objects.
                                                      The requirements of them are
                                                      ANDed. The TopologySelectorTerm
                                                      type implements a subset of
                                                      the NodeSelectorTerm.
                                                    properties:
                                                      matchExpressions:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's labels.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchFields:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's fields.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                    type: object
                                                  type: array
                                              required:
                                              - nodeSelectorTerms
                                              type: object
                                          type: object
                                        podAffinity:
                                          description: Describes pod affinity scheduling
                                            rules (e.g. co-locate this pod in the
                                            same node, zone, etc. as some other pod(s)).
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: The scheduler will prefer
                                                to schedule pods to nodes that satisfy
                                                the affinity expressions specified
                                                by this field, but it may choose a
                                                node that violates one or more of
                                                the expressions. The node that is
                                                most preferred is the one with the
                                                greatest sum of weights, i.e. for
                                                each node that meets all of the scheduling
                                                requirements (resource request, requiredDuringScheduling
                                                affinity expressions, etc.), compute
                                                a sum by iterating through the elements
                                                of this field and adding "weight"
                                                to the sum if the node has pods which
                                                matches the corresponding podAffinityTerm;
                                                the node(s) with the highest sum are
                                                the most preferred.
                                              items:
                                                description: The weights of all of
                                                  the matched WeightedPodAffinityTerm
                                                  fields are added per-node to find
                                                  the most preferred node(s)
                                                properties:
                                                  podAffinityTerm:
                                                    description: Required. A pod affinity
                                                      term, associated with the corresponding
                                                      weight.
                                                    properties:
                                                      labelSelector:
                                                        description: A label query
                                                          over a set of resources,
                                                          in this case pods.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaceSelector:
                                                        description: A label query
                                                          over the set of namespaces
                                                          that the term applies to.
                                                          The term is applied to the
                                                          union of the namespaces
                                                          selected by this field and
                                                          the ones listed in the namespaces
                                                          field. null selector and
                                                          null or empty namespaces
                                                          list means "this pod's namespace".
                                                          An empty selector ({}) matches
                                                          all namespaces. This field
                                                          is alpha-level and is only
                                                          honored when PodAffinityNamespaceSelector
                                                          feature is enabled.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaces:
                                                        description: namespaces specifies
                                                          a static list of namespace
                                                          names that the term applies
                                                          to. The term is applied
                                                          to the union of the namespaces
                                                          listed in this field and
                                                          the ones selected by namespaceSelector.
                                                          null or empty namespaces
                                                          list and null namespaceSelector
                                                          means "this pod's namespace"
                                                        items:
                                                          type: string
                                                        type: array
                                                      topologyKey:
                                                        description: This pod should
                                                          be co-located (affinity)
                                                          or not co-located (anti-affinity)
                                                          with the pods matching the
                                                          labelSelector in the specified
                                                          namespaces, where co-located
                                                          is defined as running on
                                                          a node whose value of the
                                                          label with key topologyKey
                                                          matches that of any node
                                                          on which any of the selected
                                                          pods is running. Empty topologyKey
                                                          is not allowed.
                                                        type: string
                                                    required:
                                                    - topologyKey
                                                    type: object
                                                  weight:
                                                    description: weight associated
                                                      with matching the corresponding
                                                      podAffinityTerm, in the range
                                                      1-100.
                                                    format: int32
                                                    type: integer
                                                required:
                                                - podAffinityTerm
                                                - weight
                                                type: object
                                              type: array
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: If the affinity requirements
                                                specified by this field are not met
                                                at scheduling time, the pod will not
                                                be scheduled onto the node. If the
                                                affinity requirements specified by
                                                this field cease to be met at some
                                                point during pod execution (e.g. due
                                                to a pod label update), the system
                                                may or may not try to eventually evict
                                                the pod from its node. When there
                                                are multiple elements, the lists of
                                                nodes corresponding to each podAffinityTerm
                                                are intersected, i.e. all terms must
                                                be satisfied.
                                              items:
                                                description: Defines a set of pods
                                                  (namely those matching the labelSelector
                                                  relative to the given namespace(s))
                                                  that this pod should be co-located
                                                  (affinity) or not co-located (anti-affinity)
                                                  with, where co-located is defined
                                                  as running on a node whose value
                                                  of the label with key <topologyKey>
                                                  matches that of any node on which
                                                  a pod of the set of pods is running
                                                properties:
                                                  labelSelector:
                                                    description: A label query over
                                                      a set of resources, in this
                                                      case pods.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaceSelector:
                                                    description: A label query over
                                                      the set of namespaces that the
                                                      term applies to. The term is
                                                      applied to the union of the
                                                      namespaces selected by this
                                                      field and the ones listed in
                                                      the namespaces field. null selector
                                                      and null or empty namespaces
                                                      list means "this pod's namespace".
                                                      An empty selector ({}) matches
                                                      all namespaces. This field is
                                                      alpha-level and is only honored
                                                      when PodAffinityNamespaceSelector
                                                      feature is enabled.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaces:
                                                    description: namespaces specifies
                                                      a static list of namespace names
                                                      that the term applies to. The
                                                      term is applied to the union
                                                      of the namespaces listed in
                                                      this field and the ones selected
                                                      by namespaceSelector. null or
                                                      empty namespaces list and null
                                                      namespaceSelector means "this
                                                      pod's namespace"
                                                    items:
                                                      type: string
                                                    type: array
                                                  topologyKey:
                                                    description: This pod should be
                                                      co-located (affinity) or not
                                                      co-located (anti-affinity) with
                                                      the pods matching the labelSelector
                                                      in the specified namespaces,
                                                      where co-located is defined
                                                      as running on a node whose value
                                                      of the label with key topologyKey
                                                      matches that of any node on
                                                      which any of the selected pods
                                                      is running. Empty topologyKey
                                                      is not allowed.
                                                    type: string
                                                required:
                                                - topologyKey
                                                type: object
                                              type: array
                                          type: object
                                        podAntiAffinity:
                                          description: Describes pod anti-affinity
                                            scheduling rules (e.g. avoid putting this
                                            pod in the same node, zone, etc. as some
                                            other pod(s)).
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: The scheduler will prefer
                                                to schedule pods to nodes that satisfy
                                                the anti-affinity expressions specified
                                                by this field, but it may choose a
                                                node that violates one or more of
                                                the expressions. The node that is
                                                most preferred is the one with the
                                                greatest sum of weights, i.e. for
                                                each node that meets all of the scheduling
                                                requirements (resource request, requiredDuringScheduling
                                                anti-affinity expressions, etc.),
                                                compute a sum by iterating through
                                                the elements of this field and adding
                                                "weight" to the sum if the node has
                                                pods which matches the corresponding
                                                podAffinityTerm; the node(s) with
                                                the highest sum are the most preferred.
                                              items:
                                                description: The weights of all of
                                                  the matched WeightedPodAffinityTerm
                                                  fields are added per-node to find
                                                  the most preferred node(s)
                                                properties:
                                                  podAffinityTerm:
                                                    description: Required. A pod affinity
                                                      term, associated with the corresponding
                                                      weight.
                                                    properties:
                                                      labelSelector:
                                                        description: A label query
                                                          over a set of resources,
                                                          in this case pods.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaceSelector:
                                                        description: A label query
                                                          over the set of namespaces
                                                          that the term applies to.
                                                          The term is applied to the
                                                          union of the namespaces
                                                          selected by this field and
                                                          the ones listed in the namespaces
                                                          field. null selector and
                                                          null or empty namespaces
                                                          list means "this pod's namespace".
                                                          An empty selector ({}) matches
                                                          all namespaces. This field
                                                          is alpha-level and is only
                                                          honored when PodAffinityNamespaceSelector
                                                          feature is enabled.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaces:
                                                        description: namespaces specifies
                                                          a static list of namespace
                                                          names that the term applies
                                                          to. The term is applied
                                                          to the union of the namespaces
                                                          listed in this field and
                                                          the ones selected by namespaceSelector.
                                                          null or empty namespaces
                                                          list and null namespaceSelector
                                                          means "this pod's namespace"
                                                        items:
                                                          type: string
                                                        type: array
                                                      topologyKey:
                                                        description: This pod should
                                                          be co-located (affinity)
                                                          or not co-located (anti-affinity)
                                                          with the pods matching the
                                                          labelSelector in the specified
                                                          namespaces, where co-located
                                                          is defined as running on
                                                          a node whose value of the
                                                          label with key topologyKey
                                                          matches that of any node
                                                          on which any of the selected
                                                          pods is running. Empty topologyKey
                                                          is not allowed.
                                                        type: string
                                                    required:
                                                    - topologyKey
                                                    type: object
                                                  weight:
                                                    description: weight associated
                                                      with matching the corresponding
                                                      podAffinityTerm, in the range
                                                      1-100.
                                                    format: int32
                                                    type: integer
                                                required:
                                                - podAffinityTerm
                                                - weight
                                                type: object
                                              type: array
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: If the anti-affinity requirements
                                                specified by this field are not met
                                                at scheduling time, the pod will not
                                                be scheduled onto the node. If the
                                                anti-affinity requirements specified
                                                by this field cease to be met at some
                                                point during pod execution (e.g. due
                                                to a pod label update), the system
                                                may or may not try to eventually evict
                                                the pod from its node. When there
                                                are multiple elements, the lists of
                                                nodes corresponding to each podAffinityTerm
                                                are intersected, i.e. all terms must
                                                be satisfied.
                                              items:
                                                description: Defines a set of pods
                                                  (namely those matching the labelSelector
                                                  relative to the given namespace(s))
                                                  that this pod should be co-located
                                                  (affinity) or not co-located (anti-affinity)
                                                  with, where co-located is defined
                                                  as running on a node whose value
                                                  of the label with key <topologyKey>
                                                  matches that of any node on which
                                                  a pod of the set of pods is running
                                                properties:
                                                  labelSelector:
                                                    description: A label query over
                                                      a set of resources, in this
                                                      case pods.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaceSelector:
                                                    description: A label query over
                                                      the set of namespaces that the
                                                      term applies to. The term is
                                                      applied to the union of the
                                                      namespaces selected by this
                                                      field and the ones listed in
                                                      the namespaces field. null selector
                                                      and null or empty namespaces
                                                      list means "this pod's namespace".
                                                      An empty selector ({}) matches
                                                      all namespaces. This field is
                                                      alpha-level and is only honored
                                                      when PodAffinityNamespaceSelector
                                                      feature is enabled.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaces:
                                                    description: namespaces specifies
                                                      a static list of namespace names
                                                      that the term applies to. The
                                                      term is applied to the union
                                                      of the namespaces listed in
                                                      this field and the ones selected
                                                      by namespaceSelector. null or
                                                      empty namespaces list and null
                                                      namespaceSelector means "this
                                                      pod's namespace"
                                                    items:
                                                      type: string
                                                    type: array
                                                  topologyKey:
                                                    description: This pod should be
                                                      co-located (affinity) or not
                                                      co-located (anti-affinity) with
                                                      the pods matching the labelSelector
                                                      in the specified namespaces,
                                                      where co-located is defined
                                                      as running on a node whose value
                                                      of the label with key topologyKey
                                                      matches that of any node on
                                                      which any of the selected pods
                                                      is running. Empty topologyKey
                                                      is not allowed.
                                                    type: string
                                                required:
                                                - topologyKey
                                                type: object
                                              type: array
                                          type: object
                                      type: object
                                    nodeSelector:
                                      additionalProperties:
                                        type: string
                                      description: 'NodeSelector is a selector which
                                        must be true for the pod to fit on a node.
                                        Selector which must match a node''s labels
                                        for the pod to be scheduled on that node.
                                        More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                      type: object
                                    priorityClassName:
                                      description: If specified, the pod's priorityClassName.
                                      type: string
                                    serviceAccountName:
                                      description: If specified, the pod's service
                                        account
                                      type: string
                                    tolerations:
                                      description: If specified, the pod's tolerations.
                                      items:
                                        description: The pod this Toleration is attached
                                          to tolerates any taint that matches the
                                          triple <key,value,effect> using the matching
                                          operator <operator>.
                                        properties:
                                          effect:
                                            description: Effect indicates the taint
                                              effect to match. Empty means match all
                                              taint effects. When specified, allowed
                                              values are NoSchedule, PreferNoSchedule
                                              and NoExecute.
                                            type: string
                                          key:
                                            description: Key is the taint key that
                                              the toleration applies to. Empty means
                                              match all taint keys. If the key is
                                              empty, operator must be Exists; this
                                              combination means to match all values
                                              and all keys.
                                            type: string
                                          operator:
                                            description: Operator represents a key's
                                              relationship to the value. Valid operators
                                              are Exists and Equal. Defaults to Equal.
                                              Exists is equivalent to wildcard for
                                              value, so that a pod can tolerate all
                                              taints of a particular category.
                                            type: string
                                          tolerationSeconds:
                                            description: TolerationSeconds represents
                                              the period of time the toleration (which
                                              must be of effect NoExecute, otherwise
                                              this field is ignored) tolerates the
                                              taint. By default, it is not set, which
                                              means tolerate the taint forever (do
                                              not evict). Zero and negative values
                                              will be treated as 0 (evict immediately)
                                              by the system.
                                            format: int64
                                            type: integer
                                          value:
                                            description: Value is the taint value
                                              the toleration matches to. If the operator
                                              is Exists, the value should be empty,
                                              otherwise just a regular string.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            serviceType:
                              description: Optional service type for Kubernetes solver
                                service. Supported values are NodePort or ClusterIP.
                                If unset, defaults to NodePort.
                              type: string
                          type: object
                      type: object
                    selector:
                      description: Selector selects a set of DNSNames on the Certificate
                        resource that should be solved using this challenge solver.
                        If not specified, the solver will be treated as the 'default'
                        solver with the lowest priority, i.e. if any other solver
                        has a more specific match, it will be used instead.
                      properties:
                        dnsNames:
                          description: List of DNSNames that this solver will be used
                            to solve. If specified and a match is found, a dnsNames
                            selector will take precedence over a dnsZones selector.
                            If multiple solvers match with the same dnsNames value,
                            the solver with the most matching labels in matchLabels
                            will be selected. If neither has more matches, the solver
                            defined earlier in the list will be selected.
                          items:
                            type: string
                          type: array
                        dnsZones:
                          description: List of DNSZones that this solver will be used
                            to solve. The most specific DNS zone match specified here
                            will take precedence over other DNS zone matches, so a
                            solver specifying sys.example.com will be selected over
                            one specifying example.com for the domain www.sys.example.com.
                            If multiple solvers match with the same dnsZones value,
                            the solver with the most matching labels in matchLabels
                            will be selected. If neither has more matches, the solver
                            defined earlier in the list will be selected.
                          items:
                            type: string
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: A label selector that is used to refine the
                            set of certificate's that this challenge solver will apply
                            to.
                          type: object
                      type: object
                  type: object
                token:
                  description: Token is the ACME challenge token for this challenge.
                    This is the raw value returned from the ACME server.
                  type: string
                type:
                  description: Type is the type of ACME challenge this resource represents.
                    One of "http-01" or "dns-01".
                  enum:
                  - http-01
                  - dns-01
                  type: string
                url:
                  description: URL is the URL of the ACME Challenge resource for this
                    challenge. This can be used to lookup details about the status
                    of this challenge.
                  type: string
                wildcard:
                  description: Wildcard will be true if this challenge is for a wildcard
                    identifier, for example '*.example.com'.
                  type: boolean
              required:
              - authzURL
              - dnsName
              - issuerRef
              - key
              - solver
              - token
              - type
              - url
              type: object
            status:
              properties:
                presented:
                  description: Presented will be set to true if the challenge values
                    for this challenge are currently 'presented'. This *does not*
                    imply the self check is passing. Only that the values have been
                    'submitted' for the appropriate challenge mechanism (i.e. the
                    DNS01 TXT record has been presented, or the HTTP01 configuration
                    has been configured).
                  type: boolean
                processing:
                  description: Processing is used to denote whether this challenge
                    should be processed or not. This field will only be set to true
                    by the 'scheduling' component. It will only be set to false by
                    the 'challenges' controller, after the challenge has reached a
                    final state or timed out. If this field is set to false, the challenge
                    controller will not take any more action.
                  type: boolean
                reason:
                  description: Reason contains human readable information on why the
                    Challenge is in the current state.
                  type: string
                state:
                  description: State contains the current 'state' of the challenge.
                    If not set, the state of the challenge is unknown.
                  enum:
                  - valid
                  - ready
                  - pending
                  - processing
                  - invalid
                  - expired
                  - errored
                  type: string
              type: object
          required:
          - metadata
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.state
        name: State
        type: string
      - jsonPath: .spec.dnsName
        name: Domain
        type: string
      - jsonPath: .status.reason
        name: Reason
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: Challenge is a type to represent a Challenge request with an
            ACME server
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                authorizationURL:
                  description: The URL to the ACME Authorization resource that this
                    challenge is a part of.
                  type: string
                dnsName:
                  description: dnsName is the identifier that this challenge is for,
                    e.g. example.com. If the requested DNSName is a 'wildcard', this
                    field MUST be set to the non-wildcard domain, e.g. for `*.example.com`,
                    it must be `example.com`.
                  type: string
                issuerRef:
                  description: References a properly configured ACME-type Issuer which
                    should be used to create this Challenge. If the Issuer does not
                    exist, processing will be retried. If the Issuer is not an 'ACME'
                    Issuer, an error will be returned and the Challenge will be marked
                    as failed.
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                  - name
                  type: object
                key:
                  description: 'The ACME challenge key for this challenge For HTTP01
                    challenges, this is the value that must be responded with to complete
                    the HTTP01 challenge in the format: `<private key JWK thumbprint>.<key
                    from acme server for challenge>`. For DNS01 challenges, this is
                    the base64 encoded SHA256 sum of the `<private key JWK thumbprint>.<key
                    from acme server for challenge>` text that must be set as the
                    TXT record content.'
                  type: string
                solver:
                  description: Contains the domain solving configuration that should
                    be used to solve this challenge resource.
                  properties:
                    dns01:
                      description: Configures cert-manager to attempt to complete
                        authorizations by performing the DNS01 challenge flow.
                      properties:
                        acmeDNS:
                          description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)
                            API to manage DNS01 challenge records.
                          properties:
                            accountSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            host:
                              type: string
                          required:
                          - accountSecretRef
                          - host
                          type: object
                        akamai:
                          description: Use the Akamai DNS zone management API to manage
                            DNS01 challenge records.
                          properties:
                            accessTokenSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            clientSecretSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            clientTokenSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            serviceConsumerDomain:
                              type: string
                          required:
                          - accessTokenSecretRef
                          - clientSecretSecretRef
                          - clientTokenSecretRef
                          - serviceConsumerDomain
                          type: object
                        azureDNS:
                          description: Use the Microsoft Azure DNS API to manage DNS01
                            challenge records.
                          properties:
                            clientID:
                              description: if both this and ClientSecret are left
                                unset MSI will be used
                              type: string
                            clientSecretSecretRef:
                              description: if both this and ClientID are left unset
                                MSI will be used
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            environment:
                              enum:
                              - AzurePublicCloud
                              - AzureChinaCloud
                              - AzureGermanCloud
                              - AzureUSGovernmentCloud
                              type: string
                            hostedZoneName:
                              type: string
                            resourceGroupName:
                              type: string
                            subscriptionID:
                              type: string
                            tenantID:
                              description: when specifying ClientID and ClientSecret
                                then this field is also needed
                              type: string
                          required:
                          - resourceGroupName
                          - subscriptionID
                          type: object
                        cloudDNS:
                          description: Use the Google Cloud DNS API to manage DNS01
                            challenge records.
                          properties:
                            hostedZoneName:
                              description: HostedZoneName is an optional field that
                                tells cert-manager in which Cloud DNS zone the challenge
                                record has to be created. If left empty cert-manager
                                will automatically choose a zone.
                              type: string
                            project:
                              type: string
                            serviceAccountSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - project
                          type: object
                        cloudflare:
                          description: Use the Cloudflare API to manage DNS01 challenge
                            records.
                          properties:
                            apiKeySecretRef:
                              description: 'API key to use to authenticate with Cloudflare.
                                Note: using an API token to authenticate is now the
                                recommended method as it allows greater control of
                                permissions.'
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            apiTokenSecretRef:
                              description: API token used to authenticate with Cloudflare.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            email:
                              description: Email of the account, only required when
                                using API key based authentication.
                              type: string
                          type: object
                        cnameStrategy:
                          description: CNAMEStrategy configures how the DNS01 provider
                            should handle CNAME records when found in DNS zones.
                          enum:
                          - None
                          - Follow
                          type: string
                        digitalocean:
                          description: Use the DigitalOcean DNS API to manage DNS01
                            challenge records.
                          properties:
                            tokenSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - tokenSecretRef
                          type: object
                        rfc2136:
                          description: Use RFC2136 ("Dynamic Updates in the Domain
                            Name System") (https://datatracker.ietf.org/doc/rfc2136/)
                            to manage DNS01 challenge records.
                          properties:
                            nameserver:
                              description: The IP address or hostname of an authoritative
                                DNS server supporting RFC2136 in the form host:port.
                                If the host is an IPv6 address it must be enclosed
                                in square brackets (e.g [2001:db8::1])┬á; port is optional.
                                This field is required.
                              type: string
                            tsigAlgorithm:
                              description: 'The TSIG Algorithm configured in the DNS
                                supporting RFC2136. Used only when ``tsigSecretSecretRef``
                                and ``tsigKeyName`` are defined. Supported values
                                are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``,
                                ``HMACSHA256`` or ``HMACSHA512``.'
                              type: string
                            tsigKeyName:
                              description: The TSIG Key name configured in the DNS.
                                If ``tsigSecretSecretRef`` is defined, this field
                                is required.
                              type: string
                            tsigSecretSecretRef:
                              description: The name of the secret containing the TSIG
                                value. If ``tsigKeyName`` is defined, this field is
                                required.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - nameserver
                          type: object
                        route53:
                          description: Use the AWS Route53 API to manage DNS01 challenge
                            records.
                          properties:
                            accessKeyID:
                              description: 'The AccessKeyID is used for authentication.
                                If not set we fall-back to using env vars, shared
                                credentials file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                              type: string
                            hostedZoneID:
                              description: If set, the provider will manage only this
                                zone in Route53 and will not do an lookup using the
                                route53:ListHostedZonesByName api call.
                              type: string
                            region:
                              description: Always set the region when using AccessKeyID
                                and SecretAccessKey
                              type: string
                            role:
                              description: Role is a Role ARN which the Route53 provider
                                will assume using either the explicit credentials
                                AccessKeyID/SecretAccessKey or the inferred credentials
                                from environment variables, shared credentials file
                                or AWS Instance metadata
                              type: string
                            secretAccessKeySecretRef:
                              description: The SecretAccessKey is used for authentication.
                                If not set we fall-back to using env vars, shared
                                credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - region
                          type: object
                        webhook:
                          description: Configure an external webhook based DNS01 challenge
                            solver to manage DNS01 challenge records.
                          properties:
                            config:
                              description: Additional configuration that should be
                                passed to the webhook apiserver when challenges are
                                processed. This can contain arbitrary JSON data. Secret
                                values should not be specified in this stanza. If
                                secret values are needed (e.g. credentials for a DNS
                                service), you should use a SecretKeySelector to reference
                                a Secret resource. For details on the schema of this
                                field, consult the webhook provider implementation's
                                documentation.
                              x-kubernetes-preserve-unknown-fields: true
                            groupName:
                              description: The API group name that should be used
                                when POSTing ChallengePayload resources to the webhook
                                apiserver. This should be the same as the GroupName
                                specified in the webhook provider implementation.
                              type: string
                            solverName:
                              description: The name of the solver to use, as defined
                                in the webhook provider implementation. This will
                                typically be the name of the provider, e.g. 'cloudflare'.
                              type: string
                          required:
                          - groupName
                          - solverName
                          type: object
                      type: object
                    http01:
                      description: Configures cert-manager to attempt to complete
                        authorizations by performing the HTTP01 challenge flow. It
                        is not possible to obtain certificates for wildcard domain
                        names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
                      properties:
                        gatewayHTTPRoute:
                          description: The Gateway API is a sig-network community
                            API that models service networking in Kubernetes (https://gateway-api.sigs.k8s.io/).
                            The Gateway solver will create HTTPRoutes with the specified
                            labels in the same namespace as the challenge. This solver
                            is experimental, and fields / behaviour may change in
                            the future.
                          properties:
                            labels:
                              additionalProperties:
                                type: string
                              description: The labels that cert-manager will use when
                                creating the temporary HTTPRoute needed for solving
                                the HTTP-01 challenge. These labels must match the
                                label selector of at least one Gateway.
                              type: object
                            serviceType:
                              description: Optional service type for Kubernetes solver
                                service. Supported values are NodePort or ClusterIP.
                                If unset, defaults to NodePort.
                              type: string
                          type: object
                        ingress:
                          description: The ingress based HTTP01 challenge solver will
                            solve challenges by creating or modifying Ingress resources
                            in order to route requests for '/.well-known/acme-challenge/XYZ'
                            to 'challenge solver' pods that are provisioned by cert-manager
                            for each Challenge to be completed.
                          properties:
                            class:
                              description: The ingress class to use when creating
                                Ingress resources to solve ACME challenges that use
                                this challenge solver. Only one of 'class' or 'name'
                                may be specified.
                              type: string
                            ingressTemplate:
                              description: Optional ingress template used to configure
                                the ACME challenge solver ingress used for HTTP01
                                challenges.
                              properties:
                                metadata:
                                  description: ObjectMeta overrides for the ingress
                                    used to solve HTTP01 challenges. Only the 'labels'
                                    and 'annotations' fields may be set. If labels
                                    or annotations overlap with in-built values, the
                                    values here will override the in-built values.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations that should be added
                                        to the created ACME HTTP01 solver ingress.
                                      type: object
                                    labels:
                                      additionalProperties:
                                        type: string
                                      description: Labels that should be added to
                                        the created ACME HTTP01 solver ingress.
                                      type: object
                                  type: object
                              type: object
                            name:
                              description: The name of the ingress resource that should
                                have ACME challenge solving routes inserted into it
                                in order to solve HTTP01 challenges. This is typically
                                used in conjunction with ingress controllers like
                                ingress-gce, which maintains a 1:1 mapping between
                                external IPs and ingress resources.
                              type: string
                            podTemplate:
                              description: Optional pod template used to configure
                                the ACME challenge solver pods used for HTTP01 challenges
                              properties:
                                metadata:
                                  description: ObjectMeta overrides for the pod used
                                    to solve HTTP01 challenges. Only the 'labels'
                                    and 'annotations' fields may be set. If labels
                                    or annotations overlap with in-built values, the
                                    values here will override the in-built values.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations that should be added
                                        to the create ACME HTTP01 solver pods.
                                      type: object
                                    labels:
                                      additionalProperties:
                                        type: string
                                      description: Labels that should be added to
                                        the created ACME HTTP01 solver pods.
                                      type: object
                                  type: object
                                spec:
                                  description: PodSpec defines overrides for the HTTP01
                                    challenge solver pod. Only the 'priorityClassName',
                                    'nodeSelector', 'affinity', 'serviceAccountName'
                                    and 'tolerations' fields are supported currently.
                                    All other fields will be ignored.
                                  properties:
                                    affinity:
                                      description: If specified, the pod's scheduling
                                        constraints
                                      properties:
                                        nodeAffinity:
                                          description: Describes node affinity scheduling
                                            rules for the pod.
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: The scheduler will prefer
                                                to schedule pods to nodes that satisfy
                                                the affinity expressions specified
                                                by this field, but it may choose a
                                                node that violates one or more of
                                                the expressions. The node that is
                                                most preferred is the one with the
                                                greatest sum of weights, i.e. for
                                                each node that meets all of the scheduling
                                                requirements (resource request, requiredDuringScheduling
                                                affinity expressions, etc.), compute
                                                a sum by iterating through the elements
                                                of this field and adding "weight"
                                                to the sum if the node matches the
                                                corresponding matchExpressions; the
                                                node(s) with the highest sum are the
                                                most preferred.
                                              items:
                                                description: An empty preferred scheduling
                                                  term matches all objects with implicit
                                                  weight 0 (i.e. it's a no-op). A
                                                  null preferred scheduling term matches
                                                  no objects (i.e. is also a no-op).
                                                properties:
                                                  preference:
                                                    description: A node selector term,
                                                      associated with the corresponding
                                                      weight.
                                                    properties:
                                                      matchExpressions:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's labels.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchFields:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's fields.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                    type: object
                                                  weight:
                                                    description: Weight associated
                                                      with matching the corresponding
                                                      nodeSelectorTerm, in the range
                                                      1-100.
                                                    format: int32
                                                    type: integer
                                                required:
                                                - preference
                                                - weight
                                                type: object
                                              type: array
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: If the affinity requirements
                                                specified by this field are not met
                                                at scheduling time, the pod will not
                                                be scheduled onto the node. If the
                                                affinity requirements specified by
                                                this field cease to be met at some
                                                point during pod execution (e.g. due
                                                to an update), the system may or may
                                                not try to eventually evict the pod
                                                from its node.
                                              properties:
                                                nodeSelectorTerms:
                                                  description: Required. A list of
                                                    node selector terms. The terms
                                                    are ORed.
                                                  items:
                                                    description: A null or empty node
                                                      selector term matches no objects.
                                                      The requirements of them are
                                                      ANDed. The TopologySelectorTerm
                                                      type implements a subset of
                                                      the NodeSelectorTerm.
                                                    properties:
                                                      matchExpressions:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's labels.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchFields:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's fields.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                    type: object
                                                  type: array
                                              required:
                                              - nodeSelectorTerms
                                              type: object
                                          type: object
                                        podAffinity:
                                          description: Describes pod affinity scheduling
                                            rules (e.g. co-locate this pod in the
                                            same node, zone, etc. as some other pod(s)).
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: The scheduler will prefer
                                                to schedule pods to nodes that satisfy
                                                the affinity expressions specified
                                                by this field, but it may choose a
                                                node that violates one or more of
                                                the expressions. The node that is
                                                most preferred is the one with the
                                                greatest sum of weights, i.e. for
                                                each node that meets all of the scheduling
                                                requirements (resource request, requiredDuringScheduling
                                                affinity expressions, etc.), compute
                                                a sum by iterating through the elements
                                                of this field and adding "weight"
                                                to the sum if the node has pods which
                                                matches the corresponding podAffinityTerm;
                                                the node(s) with the highest sum are
                                                the most preferred.
                                              items:
                                                description: The weights of all of
                                                  the matched WeightedPodAffinityTerm
                                                  fields are added per-node to find
                                                  the most preferred node(s)
                                                properties:
                                                  podAffinityTerm:
                                                    description: Required. A pod affinity
                                                      term, associated with the corresponding
                                                      weight.
                                                    properties:
                                                      labelSelector:
                                                        description: A label query
                                                          over a set of resources,
                                                          in this case pods.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaceSelector:
                                                        description: A label query
                                                          over the set of namespaces
                                                          that the term applies to.
                                                          The term is applied to the
                                                          union of the namespaces
                                                          selected by this field and
                                                          the ones listed in the namespaces
                                                          field. null selector and
                                                          null or empty namespaces
                                                          list means "this pod's namespace".
                                                          An empty selector ({}) matches
                                                          all namespaces. This field
                                                          is alpha-level and is only
                                                          honored when PodAffinityNamespaceSelector
                                                          feature is enabled.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaces:
                                                        description: namespaces specifies
                                                          a static list of namespace
                                                          names that the term applies
                                                          to. The term is applied
                                                          to the union of the namespaces
                                                          listed in this field and
                                                          the ones selected by namespaceSelector.
                                                          null or empty namespaces
                                                          list and null namespaceSelector
                                                          means "this pod's namespace"
                                                        items:
                                                          type: string
                                                        type: array
                                                      topologyKey:
                                                        description: This pod should
                                                          be co-located (affinity)
                                                          or not co-located (anti-affinity)
                                                          with the pods matching the
                                                          labelSelector in the specified
                                                          namespaces, where co-located
                                                          is defined as running on
                                                          a node whose value of the
                                                          label with key topologyKey
                                                          matches that of any node
                                                          on which any of the selected
                                                          pods is running. Empty topologyKey
                                                          is not allowed.
                                                        type: string
                                                    required:
                                                    - topologyKey
                                                    type: object
                                                  weight:
                                                    description: weight associated
                                                      with matching the corresponding
                                                      podAffinityTerm, in the range
                                                      1-100.
                                                    format: int32
                                                    type: integer
                                                required:
                                                - podAffinityTerm
                                                - weight
                                                type: object
                                              type: array
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: If the affinity requirements
                                                specified by this field are not met
                                                at scheduling time, the pod will not
                                                be scheduled onto the node. If the
                                                affinity requirements specified by
                                                this field cease to be met at some
                                                point during pod execution (e.g. due
                                                to a pod label update), the system
                                                may or may not try to eventually evict
                                                the pod from its node. When there
                                                are multiple elements, the lists of
                                                nodes corresponding to each podAffinityTerm
                                                are intersected, i.e. all terms must
                                                be satisfied.
                                              items:
                                                description: Defines a set of pods
                                                  (namely those matching the labelSelector
                                                  relative to the given namespace(s))
                                                  that this pod should be co-located
                                                  (affinity) or not co-located (anti-affinity)
                                                  with, where co-located is defined
                                                  as running on a node whose value
                                                  of the label with key <topologyKey>
                                                  matches that of any node on which
                                                  a pod of the set of pods is running
                                                properties:
                                                  labelSelector:
                                                    description: A label query over
                                                      a set of resources, in this
                                                      case pods.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaceSelector:
                                                    description: A label query over
                                                      the set of namespaces that the
                                                      term applies to. The term is
                                                      applied to the union of the
                                                      namespaces selected by this
                                                      field and the ones listed in
                                                      the namespaces field. null selector
                                                      and null or empty namespaces
                                                      list means "this pod's namespace".
                                                      An empty selector ({}) matches
                                                      all namespaces. This field is
                                                      alpha-level and is only honored
                                                      when PodAffinityNamespaceSelector
                                                      feature is enabled.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaces:
                                                    description: namespaces specifies
                                                      a static list of namespace names
                                                      that the term applies to. The
                                                      term is applied to the union
                                                      of the namespaces listed in
                                                      this field and the ones selected
                                                      by namespaceSelector. null or
                                                      empty namespaces list and null
                                                      namespaceSelector means "this
                                                      pod's namespace"
                                                    items:
                                                      type: string
                                                    type: array
                                                  topologyKey:
                                                    description: This pod should be
                                                      co-located (affinity) or not
                                                      co-located (anti-affinity) with
                                                      the pods matching the labelSelector
                                                      in the specified namespaces,
                                                      where co-located is defined
                                                      as running on a node whose value
                                                      of the label with key topologyKey
                                                      matches that of any node on
                                                      which any of the selected pods
                                                      is running. Empty topologyKey
                                                      is not allowed.
                                                    type: string
                                                required:
                                                - topologyKey
                                                type: object
                                              type: array
                                          type: object
                                        podAntiAffinity:
                                          description: Describes pod anti-affinity
                                            scheduling rules (e.g. avoid putting this
                                            pod in the same node, zone, etc. as some
                                            other pod(s)).
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: The scheduler will prefer
                                                to schedule pods to nodes that satisfy
                                                the anti-affinity expressions specified
                                                by this field, but it may choose a
                                                node that violates one or more of
                                                the expressions. The node that is
                                                most preferred is the one with the
                                                greatest sum of weights, i.e. for
                                                each node that meets all of the scheduling
                                                requirements (resource request, requiredDuringScheduling
                                                anti-affinity expressions, etc.),
                                                compute a sum by iterating through
                                                the elements of this field and adding
                                                "weight" to the sum if the node has
                                                pods which matches the corresponding
                                                podAffinityTerm; the node(s) with
                                                the highest sum are the most preferred.
                                              items:
                                                description: The weights of all of
                                                  the matched WeightedPodAffinityTerm
                                                  fields are added per-node to find
                                                  the most preferred node(s)
                                                properties:
                                                  podAffinityTerm:
                                                    description: Required. A pod affinity
                                                      term, associated with the corresponding
                                                      weight.
                                                    properties:
                                                      labelSelector:
                                                        description: A label query
                                                          over a set of resources,
                                                          in this case pods.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaceSelector:
                                                        description: A label query
                                                          over the set of namespaces
                                                          that the term applies to.
                                                          The term is applied to the
                                                          union of the namespaces
                                                          selected by this field and
                                                          the ones listed in the namespaces
                                                          field. null selector and
                                                          null or empty namespaces
                                                          list means "this pod's namespace".
                                                          An empty selector ({}) matches
                                                          all namespaces. This field
                                                          is alpha-level and is only
                                                          honored when PodAffinityNamespaceSelector
                                                          feature is enabled.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaces:
                                                        description: namespaces specifies
                                                          a static list of namespace
                                                          names that the term applies
                                                          to. The term is applied
                                                          to the union of the namespaces
                                                          listed in this field and
                                                          the ones selected by namespaceSelector.
                                                          null or empty namespaces
                                                          list and null namespaceSelector
                                                          means "this pod's namespace"
                                                        items:
                                                          type: string
                                                        type: array
                                                      topologyKey:
                                                        description: This pod should
                                                          be co-located (affinity)
                                                          or not co-located (anti-affinity)
                                                          with the pods matching the
                                                          labelSelector in the specified
                                                          namespaces, where co-located
                                                          is defined as running on
                                                          a node whose value of the
                                                          label with key topologyKey
                                                          matches that of any node
                                                          on which any of the selected
                                                          pods is running. Empty topologyKey
                                                          is not allowed.
                                                        type: string
                                                    required:
                                                    - topologyKey
                                                    type: object
                                                  weight:
                                                    description: weight associated
                                                      with matching the corresponding
                                                      podAffinityTerm, in the range
                                                      1-100.
                                                    format: int32
                                                    type: integer
                                                required:
                                                - podAffinityTerm
                                                - weight
                                                type: object
                                              type: array
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: If the anti-affinity requirements
                                                specified by this field are not met
                                                at scheduling time, the pod will not
                                                be scheduled onto the node. If the
                                                anti-affinity requirements specified
                                                by this field cease to be met at some
                                                point during pod execution (e.g. due
                                                to a pod label update), the system
                                                may or may not try to eventually evict
                                                the pod from its node. When there
                                                are multiple elements, the lists of
                                                nodes corresponding to each podAffinityTerm
                                                are intersected, i.e. all terms must
                                                be satisfied.
                                              items:
                                                description: Defines a set of pods
                                                  (namely those matching the labelSelector
                                                  relative to the given namespace(s))
                                                  that this pod should be co-located
                                                  (affinity) or not co-located (anti-affinity)
                                                  with, where co-located is defined
                                                  as running on a node whose value
                                                  of the label with key <topologyKey>
                                                  matches that of any node on which
                                                  a pod of the set of pods is running
                                                properties:
                                                  labelSelector:
                                                    description: A label query over
                                                      a set of resources, in this
                                                      case pods.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaceSelector:
                                                    description: A label query over
                                                      the set of namespaces that the
                                                      term applies to. The term is
                                                      applied to the union of the
                                                      namespaces selected by this
                                                      field and the ones listed in
                                                      the namespaces field. null selector
                                                      and null or empty namespaces
                                                      list means "this pod's namespace".
                                                      An empty selector ({}) matches
                                                      all namespaces. This field is
                                                      alpha-level and is only honored
                                                      when PodAffinityNamespaceSelector
                                                      feature is enabled.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaces:
                                                    description: namespaces specifies
                                                      a static list of namespace names
                                                      that the term applies to. The
                                                      term is applied to the union
                                                      of the namespaces listed in
                                                      this field and the ones selected
                                                      by namespaceSelector. null or
                                                      empty namespaces list and null
                                                      namespaceSelector means "this
                                                      pod's namespace"
                                                    items:
                                                      type: string
                                                    type: array
                                                  topologyKey:
                                                    description: This pod should be
                                                      co-located (affinity) or not
                                                      co-located (anti-affinity) with
                                                      the pods matching the labelSelector
                                                      in the specified namespaces,
                                                      where co-located is defined
                                                      as running on a node whose value
                                                      of the label with key topologyKey
                                                      matches that of any node on
                                                      which any of the selected pods
                                                      is running. Empty topologyKey
                                                      is not allowed.
                                                    type: string
                                                required:
                                                - topologyKey
                                                type: object
                                              type: array
                                          type: object
                                      type: object
                                    nodeSelector:
                                      additionalProperties:
                                        type: string
                                      description: 'NodeSelector is a selector which
                                        must be true for the pod to fit on a node.
                                        Selector which must match a node''s labels
                                        for the pod to be scheduled on that node.
                                        More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                      type: object
                                    priorityClassName:
                                      description: If specified, the pod's priorityClassName.
                                      type: string
                                    serviceAccountName:
                                      description: If specified, the pod's service
                                        account
                                      type: string
                                    tolerations:
                                      description: If specified, the pod's tolerations.
                                      items:
                                        description: The pod this Toleration is attached
                                          to tolerates any taint that matches the
                                          triple <key,value,effect> using the matching
                                          operator <operator>.
                                        properties:
                                          effect:
                                            description: Effect indicates the taint
                                              effect to match. Empty means match all
                                              taint effects. When specified, allowed
                                              values are NoSchedule, PreferNoSchedule
                                              and NoExecute.
                                            type: string
                                          key:
                                            description: Key is the taint key that
                                              the toleration applies to. Empty means
                                              match all taint keys. If the key is
                                              empty, operator must be Exists; this
                                              combination means to match all values
                                              and all keys.
                                            type: string
                                          operator:
                                            description: Operator represents a key's
                                              relationship to the value. Valid operators
                                              are Exists and Equal. Defaults to Equal.
                                              Exists is equivalent to wildcard for
                                              value, so that a pod can tolerate all
                                              taints of a particular category.
                                            type: string
                                          tolerationSeconds:
                                            description: TolerationSeconds represents
                                              the period of time the toleration (which
                                              must be of effect NoExecute, otherwise
                                              this field is ignored) tolerates the
                                              taint. By default, it is not set, which
                                              means tolerate the taint forever (do
                                              not evict). Zero and negative values
                                              will be treated as 0 (evict immediately)
                                              by the system.
                                            format: int64
                                            type: integer
                                          value:
                                            description: Value is the taint value
                                              the toleration matches to. If the operator
                                              is Exists, the value should be empty,
                                              otherwise just a regular string.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            serviceType:
                              description: Optional service type for Kubernetes solver
                                service. Supported values are NodePort or ClusterIP.
                                If unset, defaults to NodePort.
                              type: string
                          type: object
                      type: object
                    selector:
                      description: Selector selects a set of DNSNames on the Certificate
                        resource that should be solved using this challenge solver.
                        If not specified, the solver will be treated as the 'default'
                        solver with the lowest priority, i.e. if any other solver
                        has a more specific match, it will be used instead.
                      properties:
                        dnsNames:
                          description: List of DNSNames that this solver will be used
                            to solve. If specified and a match is found, a dnsNames
                            selector will take precedence over a dnsZones selector.
                            If multiple solvers match with the same dnsNames value,
                            the solver with the most matching labels in matchLabels
                            will be selected. If neither has more matches, the solver
                            defined earlier in the list will be selected.
                          items:
                            type: string
                          type: array
                        dnsZones:
                          description: List of DNSZones that this solver will be used
                            to solve. The most specific DNS zone match specified here
                            will take precedence over other DNS zone matches, so a
                            solver specifying sys.example.com will be selected over
                            one specifying example.com for the domain www.sys.example.com.
                            If multiple solvers match with the same dnsZones value,
                            the solver with the most matching labels in matchLabels
                            will be selected. If neither has more matches, the solver
                            defined earlier in the list will be selected.
                          items:
                            type: string
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: A label selector that is used to refine the
                            set of certificate's that this challenge solver will apply
                            to.
                          type: object
                      type: object
                  type: object
                token:
                  description: The ACME challenge token for this challenge. This is
                    the raw value returned from the ACME server.
                  type: string
                type:
                  description: The type of ACME challenge this resource represents.
                    One of "HTTP-01" or "DNS-01".
                  enum:
                  - HTTP-01
                  - DNS-01
                  type: string
                url:
                  description: The URL of the ACME Challenge resource for this challenge.
                    This can be used to lookup details about the status of this challenge.
                  type: string
                wildcard:
                  description: wildcard will be true if this challenge is for a wildcard
                    identifier, for example '*.example.com'.
                  type: boolean
              required:
              - authorizationURL
              - dnsName
              - issuerRef
              - key
              - solver
              - token
              - type
              - url
              type: object
            status:
              properties:
                presented:
                  description: presented will be set to true if the challenge values
                    for this challenge are currently 'presented'. This *does not*
                    imply the self check is passing. Only that the values have been
                    'submitted' for the appropriate challenge mechanism (i.e. the
                    DNS01 TXT record has been presented, or the HTTP01 configuration
                    has been configured).
                  type: boolean
                processing:
                  description: Used to denote whether this challenge should be processed
                    or not. This field will only be set to true by the 'scheduling'
                    component. It will only be set to false by the 'challenges' controller,
                    after the challenge has reached a final state or timed out. If
                    this field is set to false, the challenge controller will not
                    take any more action.
                  type: boolean
                reason:
                  description: Contains human readable information on why the Challenge
                    is in the current state.
                  type: string
                state:
                  description: Contains the current 'state' of the challenge. If not
                    set, the state of the challenge is unknown.
                  enum:
                  - valid
                  - ready
                  - pending
                  - processing
                  - invalid
                  - expired
                  - errored
                  type: string
              type: object
          required:
          - metadata
          - spec
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.state
        name: State
        type: string
      - jsonPath: .spec.dnsName
        name: Domain
        type: string
      - jsonPath: .status.reason
        name: Reason
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: Challenge is a type to represent a Challenge request with an
            ACME server
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                authorizationURL:
                  description: The URL to the ACME Authorization resource that this
                    challenge is a part of.
                  type: string
                dnsName:
                  description: dnsName is the identifier that this challenge is for,
                    e.g. example.com. If the requested DNSName is a 'wildcard', this
                    field MUST be set to the non-wildcard domain, e.g. for `*.example.com`,
                    it must be `example.com`.
                  type: string
                issuerRef:
                  description: References a properly configured ACME-type Issuer which
                    should be used to create this Challenge. If the Issuer does not
                    exist, processing will be retried. If the Issuer is not an 'ACME'
                    Issuer, an error will be returned and the Challenge will be marked
                    as failed.
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                  - name
                  type: object
                key:
                  description: 'The ACME challenge key for this challenge For HTTP01
                    challenges, this is the value that must be responded with to complete
                    the HTTP01 challenge in the format: `<private key JWK thumbprint>.<key
                    from acme server for challenge>`. For DNS01 challenges, this is
                    the base64 encoded SHA256 sum of the `<private key JWK thumbprint>.<key
                    from acme server for challenge>` text that must be set as the
                    TXT record content.'
                  type: string
                solver:
                  description: Contains the domain solving configuration that should
                    be used to solve this challenge resource.
                  properties:
                    dns01:
                      description: Configures cert-manager to attempt to complete
                        authorizations by performing the DNS01 challenge flow.
                      properties:
                        acmeDNS:
                          description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)
                            API to manage DNS01 challenge records.
                          properties:
                            accountSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            host:
                              type: string
                          required:
                          - accountSecretRef
                          - host
                          type: object
                        akamai:
                          description: Use the Akamai DNS zone management API to manage
                            DNS01 challenge records.
                          properties:
                            accessTokenSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            clientSecretSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            clientTokenSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            serviceConsumerDomain:
                              type: string
                          required:
                          - accessTokenSecretRef
                          - clientSecretSecretRef
                          - clientTokenSecretRef
                          - serviceConsumerDomain
                          type: object
                        azureDNS:
                          description: Use the Microsoft Azure DNS API to manage DNS01
                            challenge records.
                          properties:
                            clientID:
                              description: if both this and ClientSecret are left
                                unset MSI will be used
                              type: string
                            clientSecretSecretRef:
                              description: if both this and ClientID are left unset
                                MSI will be used
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            environment:
                              enum:
                              - AzurePublicCloud
                              - AzureChinaCloud
                              - AzureGermanCloud
                              - AzureUSGovernmentCloud
                              type: string
                            hostedZoneName:
                              type: string
                            resourceGroupName:
                              type: string
                            subscriptionID:
                              type: string
                            tenantID:
                              description: when specifying ClientID and ClientSecret
                                then this field is also needed
                              type: string
                          required:
                          - resourceGroupName
                          - subscriptionID
                          type: object
                        cloudDNS:
                          description: Use the Google Cloud DNS API to manage DNS01
                            challenge records.
                          properties:
                            hostedZoneName:
                              description: HostedZoneName is an optional field that
                                tells cert-manager in which Cloud DNS zone the challenge
                                record has to be created. If left empty cert-manager
                                will automatically choose a zone.
                              type: string
                            project:
                              type: string
                            serviceAccountSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - project
                          type: object
                        cloudflare:
                          description: Use the Cloudflare API to manage DNS01 challenge
                            records.
                          properties:
                            apiKeySecretRef:
                              description: 'API key to use to authenticate with Cloudflare.
                                Note: using an API token to authenticate is now the
                                recommended method as it allows greater control of
                                permissions.'
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            apiTokenSecretRef:
                              description: API token used to authenticate with Cloudflare.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            email:
                              description: Email of the account, only required when
                                using API key based authentication.
                              type: string
                          type: object
                        cnameStrategy:
                          description: CNAMEStrategy configures how the DNS01 provider
                            should handle CNAME records when found in DNS zones.
                          enum:
                          - None
                          - Follow
                          type: string
                        digitalocean:
                          description: Use the DigitalOcean DNS API to manage DNS01
                            challenge records.
                          properties:
                            tokenSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - tokenSecretRef
                          type: object
                        rfc2136:
                          description: Use RFC2136 ("Dynamic Updates in the Domain
                            Name System") (https://datatracker.ietf.org/doc/rfc2136/)
                            to manage DNS01 challenge records.
                          properties:
                            nameserver:
                              description: The IP address or hostname of an authoritative
                                DNS server supporting RFC2136 in the form host:port.
                                If the host is an IPv6 address it must be enclosed
                                in square brackets (e.g [2001:db8::1])┬á; port is optional.
                                This field is required.
                              type: string
                            tsigAlgorithm:
                              description: 'The TSIG Algorithm configured in the DNS
                                supporting RFC2136. Used only when ``tsigSecretSecretRef``
                                and ``tsigKeyName`` are defined. Supported values
                                are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``,
                                ``HMACSHA256`` or ``HMACSHA512``.'
                              type: string
                            tsigKeyName:
                              description: The TSIG Key name configured in the DNS.
                                If ``tsigSecretSecretRef`` is defined, this field
                                is required.
                              type: string
                            tsigSecretSecretRef:
                              description: The name of the secret containing the TSIG
                                value. If ``tsigKeyName`` is defined, this field is
                                required.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - nameserver
                          type: object
                        route53:
                          description: Use the AWS Route53 API to manage DNS01 challenge
                            records.
                          properties:
                            accessKeyID:
                              description: 'The AccessKeyID is used for authentication.
                                If not set we fall-back to using env vars, shared
                                credentials file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                              type: string
                            hostedZoneID:
                              description: If set, the provider will manage only this
                                zone in Route53 and will not do an lookup using the
                                route53:ListHostedZonesByName api call.
                              type: string
                            region:
                              description: Always set the region when using AccessKeyID
                                and SecretAccessKey
                              type: string
                            role:
                              description: Role is a Role ARN which the Route53 provider
                                will assume using either the explicit credentials
                                AccessKeyID/SecretAccessKey or the inferred credentials
                                from environment variables, shared credentials file
                                or AWS Instance metadata
                              type: string
                            secretAccessKeySecretRef:
                              description: The SecretAccessKey is used for authentication.
                                If not set we fall-back to using env vars, shared
                                credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - region
                          type: object
                        webhook:
                          description: Configure an external webhook based DNS01 challenge
                            solver to manage DNS01 challenge records.
                          properties:
                            config:
                              description: Additional configuration that should be
                                passed to the webhook apiserver when challenges are
                                processed. This can contain arbitrary JSON data. Secret
                                values should not be specified in this stanza. If
                                secret values are needed (e.g. credentials for a DNS
                                service), you should use a SecretKeySelector to reference
                                a Secret resource. For details on the schema of this
                                field, consult the webhook provider implementation's
                                documentation.
                              x-kubernetes-preserve-unknown-fields: true
                            groupName:
                              description: The API group name that should be used
                                when POSTing ChallengePayload resources to the webhook
                                apiserver. This should be the same as the GroupName
                                specified in the webhook provider implementation.
                              type: string
                            solverName:
                              description: The name of the solver to use, as defined
                                in the webhook provider implementation. This will
                                typically be the name of the provider, e.g. 'cloudflare'.
                              type: string
                          required:
                          - groupName
                          - solverName
                          type: object
                      type: object
                    http01:
                      description: Configures cert-manager to attempt to complete
                        authorizations by performing the HTTP01 challenge flow. It
                        is not possible to obtain certificates for wildcard domain
                        names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
                      properties:
                        gatewayHTTPRoute:
                          description: The Gateway API is a sig-network community
                            API that models service networking in Kubernetes (https://gateway-api.sigs.k8s.io/).
                            The Gateway solver will create HTTPRoutes with the specified
                            labels in the same namespace as the challenge. This solver
                            is experimental, and fields / behaviour may change in
                            the future.
                          properties:
                            labels:
                              additionalProperties:
                                type: string
                              description: The labels that cert-manager will use when
                                creating the temporary HTTPRoute needed for solving
                                the HTTP-01 challenge. These labels must match the
                                label selector of at least one Gateway.
                              type: object
                            serviceType:
                              description: Optional service type for Kubernetes solver
                                service. Supported values are NodePort or ClusterIP.
                                If unset, defaults to NodePort.
                              type: string
                          type: object
                        ingress:
                          description: The ingress based HTTP01 challenge solver will
                            solve challenges by creating or modifying Ingress resources
                            in order to route requests for '/.well-known/acme-challenge/XYZ'
                            to 'challenge solver' pods that are provisioned by cert-manager
                            for each Challenge to be completed.
                          properties:
                            class:
                              description: The ingress class to use when creating
                                Ingress resources to solve ACME challenges that use
                                this challenge solver. Only one of 'class' or 'name'
                                may be specified.
                              type: string
                            ingressTemplate:
                              description: Optional ingress template used to configure
                                the ACME challenge solver ingress used for HTTP01
                                challenges.
                              properties:
                                metadata:
                                  description: ObjectMeta overrides for the ingress
                                    used to solve HTTP01 challenges. Only the 'labels'
                                    and 'annotations' fields may be set. If labels
                                    or annotations overlap with in-built values, the
                                    values here will override the in-built values.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations that should be added
                                        to the created ACME HTTP01 solver ingress.
                                      type: object
                                    labels:
                                      additionalProperties:
                                        type: string
                                      description: Labels that should be added to
                                        the created ACME HTTP01 solver ingress.
                                      type: object
                                  type: object
                              type: object
                            name:
                              description: The name of the ingress resource that should
                                have ACME challenge solving routes inserted into it
                                in order to solve HTTP01 challenges. This is typically
                                used in conjunction with ingress controllers like
                                ingress-gce, which maintains a 1:1 mapping between
                                external IPs and ingress resources.
                              type: string
                            podTemplate:
                              description: Optional pod template used to configure
                                the ACME challenge solver pods used for HTTP01 challenges.
                              properties:
                                metadata:
                                  description: ObjectMeta overrides for the pod used
                                    to solve HTTP01 challenges. Only the 'labels'
                                    and 'annotations' fields may be set. If labels
                                    or annotations overlap with in-built values, the
                                    values here will override the in-built values.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations that should be added
                                        to the create ACME HTTP01 solver pods.
                                      type: object
                                    labels:
                                      additionalProperties:
                                        type: string
                                      description: Labels that should be added to
                                        the created ACME HTTP01 solver pods.
                                      type: object
                                  type: object
                                spec:
                                  description: PodSpec defines overrides for the HTTP01
                                    challenge solver pod. Only the 'priorityClassName',
                                    'nodeSelector', 'affinity', 'serviceAccountName'
                                    and 'tolerations' fields are supported currently.
                                    All other fields will be ignored.
                                  properties:
                                    affinity:
                                      description: If specified, the pod's scheduling
                                        constraints
                                      properties:
                                        nodeAffinity:
                                          description: Describes node affinity scheduling
                                            rules for the pod.
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: The scheduler will prefer
                                                to schedule pods to nodes that satisfy
                                                the affinity expressions specified
                                                by this field, but it may choose a
                                                node that violates one or more of
                                                the expressions. The node that is
                                                most preferred is the one with the
                                                greatest sum of weights, i.e. for
                                                each node that meets all of the scheduling
                                                requirements (resource request, requiredDuringScheduling
                                                affinity expressions, etc.), compute
                                                a sum by iterating through the elements
                                                of this field and adding "weight"
                                                to the sum if the node matches the
                                                corresponding matchExpressions; the
                                                node(s) with the highest sum are the
                                                most preferred.
                                              items:
                                                description: An empty preferred scheduling
                                                  term matches all objects with implicit
                                                  weight 0 (i.e. it's a no-op). A
                                                  null preferred scheduling term matches
                                                  no objects (i.e. is also a no-op).
                                                properties:
                                                  preference:
                                                    description: A node selector term,
                                                      associated with the corresponding
                                                      weight.
                                                    properties:
                                                      matchExpressions:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's labels.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchFields:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's fields.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                    type: object
                                                  weight:
                                                    description: Weight associated
                                                      with matching the corresponding
                                                      nodeSelectorTerm, in the range
                                                      1-100.
                                                    format: int32
                                                    type: integer
                                                required:
                                                - preference
                                                - weight
                                                type: object
                                              type: array
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: If the affinity requirements
                                                specified by this field are not met
                                                at scheduling time, the pod will not
                                                be scheduled onto the node. If the
                                                affinity requirements specified by
                                                this field cease to be met at some
                                                point during pod execution (e.g. due
                                                to an update), the system may or may
                                                not try to eventually evict the pod
                                                from its node.
                                              properties:
                                                nodeSelectorTerms:
                                                  description: Required. A list of
                                                    node selector terms. The terms
                                                    are ORed.
                                                  items:
                                                    description: A null or empty node
                                                      selector term matches no objects.
                                                      The requirements of them are
                                                      ANDed. The TopologySelectorTerm
                                                      type implements a subset of
                                                      the NodeSelectorTerm.
                                                    properties:
                                                      matchExpressions:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's labels.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchFields:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's fields.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                    type: object
                                                  type: array
                                              required:
                                              - nodeSelectorTerms
                                              type: object
                                          type: object
                                        podAffinity:
                                          description: Describes pod affinity scheduling
                                            rules (e.g. co-locate this pod in the
                                            same node, zone, etc. as some other pod(s)).
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: The scheduler will prefer
                                                to schedule pods to nodes that satisfy
                                                the affinity expressions specified
                                                by this field, but it may choose a
                                                node that violates one or more of
                                                the expressions. The node that is
                                                most preferred is the one with the
                                                greatest sum of weights, i.e. for
                                                each node that meets all of the scheduling
                                                requirements (resource request, requiredDuringScheduling
                                                affinity expressions, etc.), compute
                                                a sum by iterating through the elements
                                                of this field and adding "weight"
                                                to the sum if the node has pods which
                                                matches the corresponding podAffinityTerm;
                                                the node(s) with the highest sum are
                                                the most preferred.
                                              items:
                                                description: The weights of all of
                                                  the matched WeightedPodAffinityTerm
                                                  fields are added per-node to find
                                                  the most preferred node(s)
                                                properties:
                                                  podAffinityTerm:
                                                    description: Required. A pod affinity
                                                      term, associated with the corresponding
                                                      weight.
                                                    properties:
                                                      labelSelector:
                                                        description: A label query
                                                          over a set of resources,
                                                          in this case pods.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaceSelector:
                                                        description: A label query
                                                          over the set of namespaces
                                                          that the term applies to.
                                                          The term is applied to the
                                                          union of the namespaces
                                                          selected by this field and
                                                          the ones listed in the namespaces
                                                          field. null selector and
                                                          null or empty namespaces
                                                          list means "this pod's namespace".
                                                          An empty selector ({}) matches
                                                          all namespaces. This field
                                                          is alpha-level and is only
                                                          honored when PodAffinityNamespaceSelector
                                                          feature is enabled.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaces:
                                                        description: namespaces specifies
                                                          a static list of namespace
                                                          names that the term applies
                                                          to. The term is applied
                                                          to the union of the namespaces
                                                          listed in this field and
                                                          the ones selected by namespaceSelector.
                                                          null or empty namespaces
                                                          list and null namespaceSelector
                                                          means "this pod's namespace"
                                                        items:
                                                          type: string
                                                        type: array
                                                      topologyKey:
                                                        description: This pod should
                                                          be co-located (affinity)
                                                          or not co-located (anti-affinity)
                                                          with the pods matching the
                                                          labelSelector in the specified
                                                          namespaces, where co-located
                                                          is defined as running on
                                                          a node whose value of the
                                                          label with key topologyKey
                                                          matches that of any node
                                                          on which any of the selected
                                                          pods is running. Empty topologyKey
                                                          is not allowed.
                                                        type: string
                                                    required:
                                                    - topologyKey
                                                    type: object
                                                  weight:
                                                    description: weight associated
                                                      with matching the corresponding
                                                      podAffinityTerm, in the range
                                                      1-100.
                                                    format: int32
                                                    type: integer
                                                required:
                                                - podAffinityTerm
                                                - weight
                                                type: object
                                              type: array
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: If the affinity requirements
                                                specified by this field are not met
                                                at scheduling time, the pod will not
                                                be scheduled onto the node. If the
                                                affinity requirements specified by
                                                this field cease to be met at some
                                                point during pod execution (e.g. due
                                                to a pod label update), the system
                                                may or may not try to eventually evict
                                                the pod from its node. When there
                                                are multiple elements, the lists of
                                                nodes corresponding to each podAffinityTerm
                                                are intersected, i.e. all terms must
                                                be satisfied.
                                              items:
                                                description: Defines a set of pods
                                                  (namely those matching the labelSelector
                                                  relative to the given namespace(s))
                                                  that this pod should be co-located
                                                  (affinity) or not co-located (anti-affinity)
                                                  with, where co-located is defined
                                                  as running on a node whose value
                                                  of the label with key <topologyKey>
                                                  matches that of any node on which
                                                  a pod of the set of pods is running
                                                properties:
                                                  labelSelector:
                                                    description: A label query over
                                                      a set of resources, in this
                                                      case pods.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaceSelector:
                                                    description: A label query over
                                                      the set of namespaces that the
                                                      term applies to. The term is
                                                      applied to the union of the
                                                      namespaces selected by this
                                                      field and the ones listed in
                                                      the namespaces field. null selector
                                                      and null or empty namespaces
                                                      list means "this pod's namespace".
                                                      An empty selector ({}) matches
                                                      all namespaces. This field is
                                                      alpha-level and is only honored
                                                      when PodAffinityNamespaceSelector
                                                      feature is enabled.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaces:
                                                    description: namespaces specifies
                                                      a static list of namespace names
                                                      that the term applies to. The
                                                      term is applied to the union
                                                      of the namespaces listed in
                                                      this field and the ones selected
                                                      by namespaceSelector. null or
                                                      empty namespaces list and null
                                                      namespaceSelector means "this
                                                      pod's namespace"
                                                    items:
                                                      type: string
                                                    type: array
                                                  topologyKey:
                                                    description: This pod should be
                                                      co-located (affinity) or not
                                                      co-located (anti-affinity) with
                                                      the pods matching the labelSelector
                                                      in the specified namespaces,
                                                      where co-located is defined
                                                      as running on a node whose value
                                                      of the label with key topologyKey
                                                      matches that of any node on
                                                      which any of the selected pods
                                                      is running. Empty topologyKey
                                                      is not allowed.
                                                    type: string
                                                required:
                                                - topologyKey
                                                type: object
                                              type: array
                                          type: object
                                        podAntiAffinity:
                                          description: Describes pod anti-affinity
                                            scheduling rules (e.g. avoid putting this
                                            pod in the same node, zone, etc. as some
                                            other pod(s)).
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: The scheduler will prefer
                                                to schedule pods to nodes that satisfy
                                                the anti-affinity expressions specified
                                                by this field, but it may choose a
                                                node that violates one or more of
                                                the expressions. The node that is
                                                most preferred is the one with the
                                                greatest sum of weights, i.e. for
                                                each node that meets all of the scheduling
                                                requirements (resource request, requiredDuringScheduling
                                                anti-affinity expressions, etc.),
                                                compute a sum by iterating through
                                                the elements of this field and adding
                                                "weight" to the sum if the node has
                                                pods which matches the corresponding
                                                podAffinityTerm; the node(s) with
                                                the highest sum are the most preferred.
                                              items:
                                                description: The weights of all of
                                                  the matched WeightedPodAffinityTerm
                                                  fields are added per-node to find
                                                  the most preferred node(s)
                                                properties:
                                                  podAffinityTerm:
                                                    description: Required. A pod affinity
                                                      term, associated with the corresponding
                                                      weight.
                                                    properties:
                                                      labelSelector:
                                                        description: A label query
                                                          over a set of resources,
                                                          in this case pods.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaceSelector:
                                                        description: A label query
                                                          over the set of namespaces
                                                          that the term applies to.
                                                          The term is applied to the
                                                          union of the namespaces
                                                          selected by this field and
                                                          the ones listed in the namespaces
                                                          field. null selector and
                                                          null or empty namespaces
                                                          list means "this pod's namespace".
                                                          An empty selector ({}) matches
                                                          all namespaces. This field
                                                          is alpha-level and is only
                                                          honored when PodAffinityNamespaceSelector
                                                          feature is enabled.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaces:
                                                        description: namespaces specifies
                                                          a static list of namespace
                                                          names that the term applies
                                                          to. The term is applied
                                                          to the union of the namespaces
                                                          listed in this field and
                                                          the ones selected by namespaceSelector.
                                                          null or empty namespaces
                                                          list and null namespaceSelector
                                                          means "this pod's namespace"
                                                        items:
                                                          type: string
                                                        type: array
                                                      topologyKey:
                                                        description: This pod should
                                                          be co-located (affinity)
                                                          or not co-located (anti-affinity)
                                                          with the pods matching the
                                                          labelSelector in the specified
                                                          namespaces, where co-located
                                                          is defined as running on
                                                          a node whose value of the
                                                          label with key topologyKey
                                                          matches that of any node
                                                          on which any of the selected
                                                          pods is running. Empty topologyKey
                                                          is not allowed.
                                                        type: string
                                                    required:
                                                    - topologyKey
                                                    type: object
                                                  weight:
                                                    description: weight associated
                                                      with matching the corresponding
                                                      podAffinityTerm, in the range
                                                      1-100.
                                                    format: int32
                                                    type: integer
                                                required:
                                                - podAffinityTerm
                                                - weight
                                                type: object
                                              type: array
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: If the anti-affinity requirements
                                                specified by this field are not met
                                                at scheduling time, the pod will not
                                                be scheduled onto the node. If the
                                                anti-affinity requirements specified
                                                by this field cease to be met at some
                                                point during pod execution (e.g. due
                                                to a pod label update), the system
                                                may or may not try to eventually evict
                                                the pod from its node. When there
                                                are multiple elements, the lists of
                                                nodes corresponding to each podAffinityTerm
                                                are intersected, i.e. all terms must
                                                be satisfied.
                                              items:
                                                description: Defines a set of pods
                                                  (namely those matching the labelSelector
                                                  relative to the given namespace(s))
                                                  that this pod should be co-located
                                                  (affinity) or not co-located (anti-affinity)
                                                  with, where co-located is defined
                                                  as running on a node whose value
                                                  of the label with key <topologyKey>
                                                  matches that of any node on which
                                                  a pod of the set of pods is running
                                                properties:
                                                  labelSelector:
                                                    description: A label query over
                                                      a set of resources, in this
                                                      case pods.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaceSelector:
                                                    description: A label query over
                                                      the set of namespaces that the
                                                      term applies to. The term is
                                                      applied to the union of the
                                                      namespaces selected by this
                                                      field and the ones listed in
                                                      the namespaces field. null selector
                                                      and null or empty namespaces
                                                      list means "this pod's namespace".
                                                      An empty selector ({}) matches
                                                      all namespaces. This field is
                                                      alpha-level and is only honored
                                                      when PodAffinityNamespaceSelector
                                                      feature is enabled.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaces:
                                                    description: namespaces specifies
                                                      a static list of namespace names
                                                      that the term applies to. The
                                                      term is applied to the union
                                                      of the namespaces listed in
                                                      this field and the ones selected
                                                      by namespaceSelector. null or
                                                      empty namespaces list and null
                                                      namespaceSelector means "this
                                                      pod's namespace"
                                                    items:
                                                      type: string
                                                    type: array
                                                  topologyKey:
                                                    description: This pod should be
                                                      co-located (affinity) or not
                                                      co-located (anti-affinity) with
                                                      the pods matching the labelSelector
                                                      in the specified namespaces,
                                                      where co-located is defined
                                                      as running on a node whose value
                                                      of the label with key topologyKey
                                                      matches that of any node on
                                                      which any of the selected pods
                                                      is running. Empty topologyKey
                                                      is not allowed.
                                                    type: string
                                                required:
                                                - topologyKey
                                                type: object
                                              type: array
                                          type: object
                                      type: object
                                    nodeSelector:
                                      additionalProperties:
                                        type: string
                                      description: 'NodeSelector is a selector which
                                        must be true for the pod to fit on a node.
                                        Selector which must match a node''s labels
                                        for the pod to be scheduled on that node.
                                        More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                      type: object
                                    priorityClassName:
                                      description: If specified, the pod's priorityClassName.
                                      type: string
                                    serviceAccountName:
                                      description: If specified, the pod's service
                                        account
                                      type: string
                                    tolerations:
                                      description: If specified, the pod's tolerations.
                                      items:
                                        description: The pod this Toleration is attached
                                          to tolerates any taint that matches the
                                          triple <key,value,effect> using the matching
                                          operator <operator>.
                                        properties:
                                          effect:
                                            description: Effect indicates the taint
                                              effect to match. Empty means match all
                                              taint effects. When specified, allowed
                                              values are NoSchedule, PreferNoSchedule
                                              and NoExecute.
                                            type: string
                                          key:
                                            description: Key is the taint key that
                                              the toleration applies to. Empty means
                                              match all taint keys. If the key is
                                              empty, operator must be Exists; this
                                              combination means to match all values
                                              and all keys.
                                            type: string
                                          operator:
                                            description: Operator represents a key's
                                              relationship to the value. Valid operators
                                              are Exists and Equal. Defaults to Equal.
                                              Exists is equivalent to wildcard for
                                              value, so that a pod can tolerate all
                                              taints of a particular category.
                                            type: string
                                          tolerationSeconds:
                                            description: TolerationSeconds represents
                                              the period of time the toleration (which
                                              must be of effect NoExecute, otherwise
                                              this field is ignored) tolerates the
                                              taint. By default, it is not set, which
                                              means tolerate the taint forever (do
                                              not evict). Zero and negative values
                                              will be treated as 0 (evict immediately)
                                              by the system.
                                            format: int64
                                            type: integer
                                          value:
                                            description: Value is the taint value
                                              the toleration matches to. If the operator
                                              is Exists, the value should be empty,
                                              otherwise just a regular string.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            serviceType:
                              description: Optional service type for Kubernetes solver
                                service. Supported values are NodePort or ClusterIP.
                                If unset, defaults to NodePort.
                              type: string
                          type: object
                      type: object
                    selector:
                      description: Selector selects a set of DNSNames on the Certificate
                        resource that should be solved using this challenge solver.
                        If not specified, the solver will be treated as the 'default'
                        solver with the lowest priority, i.e. if any other solver
                        has a more specific match, it will be used instead.
                      properties:
                        dnsNames:
                          description: List of DNSNames that this solver will be used
                            to solve. If specified and a match is found, a dnsNames
                            selector will take precedence over a dnsZones selector.
                            If multiple solvers match with the same dnsNames value,
                            the solver with the most matching labels in matchLabels
                            will be selected. If neither has more matches, the solver
                            defined earlier in the list will be selected.
                          items:
                            type: string
                          type: array
                        dnsZones:
                          description: List of DNSZones that this solver will be used
                            to solve. The most specific DNS zone match specified here
                            will take precedence over other DNS zone matches, so a
                            solver specifying sys.example.com will be selected over
                            one specifying example.com for the domain www.sys.example.com.
                            If multiple solvers match with the same dnsZones value,
                            the solver with the most matching labels in matchLabels
                            will be selected. If neither has more matches, the solver
                            defined earlier in the list will be selected.
                          items:
                            type: string
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: A label selector that is used to refine the
                            set of certificate's that this challenge solver will apply
                            to.
                          type: object
                      type: object
                  type: object
                token:
                  description: The ACME challenge token for this challenge. This is
                    the raw value returned from the ACME server.
                  type: string
                type:
                  description: The type of ACME challenge this resource represents.
                    One of "HTTP-01" or "DNS-01".
                  enum:
                  - HTTP-01
                  - DNS-01
                  type: string
                url:
                  description: The URL of the ACME Challenge resource for this challenge.
                    This can be used to lookup details about the status of this challenge.
                  type: string
                wildcard:
                  description: wildcard will be true if this challenge is for a wildcard
                    identifier, for example '*.example.com'.
                  type: boolean
              required:
              - authorizationURL
              - dnsName
              - issuerRef
              - key
              - solver
              - token
              - type
              - url
              type: object
            status:
              properties:
                presented:
                  description: presented will be set to true if the challenge values
                    for this challenge are currently 'presented'. This *does not*
                    imply the self check is passing. Only that the values have been
                    'submitted' for the appropriate challenge mechanism (i.e. the
                    DNS01 TXT record has been presented, or the HTTP01 configuration
                    has been configured).
                  type: boolean
                processing:
                  description: Used to denote whether this challenge should be processed
                    or not. This field will only be set to true by the 'scheduling'
                    component. It will only be set to false by the 'challenges' controller,
                    after the challenge has reached a final state or timed out. If
                    this field is set to false, the challenge controller will not
                    take any more action.
                  type: boolean
                reason:
                  description: Contains human readable information on why the Challenge
                    is in the current state.
                  type: string
                state:
                  description: Contains the current 'state' of the challenge. If not
                    set, the state of the challenge is unknown.
                  enum:
                  - valid
                  - ready
                  - pending
                  - processing
                  - invalid
                  - expired
                  - errored
                  type: string
              type: object
          required:
          - metadata
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - cert-manager
      - cert-manager-acme
      kind: Challenge
      listKind: ChallengeList
      plural: challenges
      singular: challenge
    conditions:
    - lastTransitionTime: "2022-04-12T18:17:07Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2022-04-12T18:17:07Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      cert-manager.io/inject-ca-from-secret: cert-manager/cert-manager-webhook-ca
    creationTimestamp: "2022-04-12T18:17:07Z"
    generation: 1
    labels:
      app: cert-manager
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.5.4
      kustomize.toolkit.fluxcd.io/name: cert-manager-kustomization
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: clusterissuers.cert-manager.io
    resourceVersion: "10089371"
    uid: 2df2aac7-31d4-4d74-8a8f-8f6fc30a3370
  spec:
    conversion:
      strategy: Webhook
      webhook:
        clientConfig:
          service:
            name: cert-manager-webhook
            namespace: cert-manager
            path: /convert
            port: 443
        conversionReviewVersions:
        - v1
        - v1beta1
    group: cert-manager.io
    names:
      categories:
      - cert-manager
      kind: ClusterIssuer
      listKind: ClusterIssuerList
      plural: clusterissuers
      singular: clusterissuer
    scope: Cluster
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: A ClusterIssuer represents a certificate issuing authority
            which can be referenced as part of `issuerRef` fields. It is similar to
            an Issuer, however it is cluster-scoped and therefore can be referenced
            by resources that exist in *any* namespace, not just the same namespace
            as the referent.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the ClusterIssuer resource.
              properties:
                acme:
                  description: ACME configures this issuer to communicate with a RFC8555
                    (ACME) server to obtain signed x509 certificates.
                  properties:
                    disableAccountKeyGeneration:
                      description: Enables or disables generating a new ACME account
                        key. If true, the Issuer resource will *not* request a new
                        account but will expect the account key to be supplied via
                        an existing secret. If false, the cert-manager system will
                        generate a new ACME account key for the Issuer. Defaults to
                        false.
                      type: boolean
                    email:
                      description: Email is the email address to be associated with
                        the ACME account. This field is optional, but it is strongly
                        recommended to be set. It will be used to contact you in case
                        of issues with your account or certificates, including expiry
                        notification emails. This field may be updated after the account
                        is initially registered.
                      type: string
                    enableDurationFeature:
                      description: Enables requesting a Not After date on certificates
                        that matches the duration of the certificate. This is not
                        supported by all ACME servers like Let's Encrypt. If set to
                        true when the ACME server does not support it it will create
                        an error on the Order. Defaults to false.
                      type: boolean
                    externalAccountBinding:
                      description: ExternalAccountBinding is a reference to a CA external
                        account of the ACME server. If set, upon registration cert-manager
                        will attempt to associate the given external account credentials
                        with the registered ACME account.
                      properties:
                        keyAlgorithm:
                          description: 'Deprecated: keyAlgorithm field exists for
                            historical compatibility reasons and should not be used.
                            The algorithm is now hardcoded to HS256 in golang/x/crypto/acme.'
                          enum:
                          - HS256
                          - HS384
                          - HS512
                          type: string
                        keyID:
                          description: keyID is the ID of the CA key that the External
                            Account is bound to.
                          type: string
                        keySecretRef:
                          description: keySecretRef is a Secret Key Selector referencing
                            a data item in a Kubernetes Secret which holds the symmetric
                            MAC key of the External Account Binding. The `key` is
                            the index string that is paired with the key data in the
                            Secret and should not be confused with the key data itself,
                            or indeed with the External Account Binding keyID above.
                            The secret key stored in the Secret **must** be un-padded,
                            base64 URL encoded data.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - keyID
                      - keySecretRef
                      type: object
                    preferredChain:
                      description: 'PreferredChain is the chain to use if the ACME
                        server outputs multiple. PreferredChain is no guarantee that
                        this one gets delivered by the ACME endpoint. For example,
                        for Let''s Encrypt''s DST crosssign you would use: "DST Root
                        CA X3" or "ISRG Root X1" for the newer Let''s Encrypt root
                        CA. This value picks the first certificate bundle in the ACME
                        alternative chains that has a certificate with this value
                        as its issuer''s CN'
                      maxLength: 64
                      type: string
                    privateKeySecretRef:
                      description: PrivateKey is the name of a Kubernetes Secret resource
                        that will be used to store the automatically generated ACME
                        account private key. Optionally, a `key` may be specified
                        to select a specific entry within the named Secret resource.
                        If `key` is not specified, a default of `tls.key` will be
                        used.
                      properties:
                        key:
                          description: The key of the entry in the Secret resource's
                            `data` field to be used. Some instances of this field
                            may be defaulted, in others it may be required.
                          type: string
                        name:
                          description: 'Name of the resource being referred to. More
                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                      required:
                      - name
                      type: object
                    server:
                      description: 'Server is the URL used to access the ACME server''s
                        ''directory'' endpoint. For example, for Let''s Encrypt''s
                        staging endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory".
                        Only ACME v2 endpoints (i.e. RFC 8555) are supported.'
                      type: string
                    skipTLSVerify:
                      description: Enables or disables validation of the ACME server
                        TLS certificate. If true, requests to the ACME server will
                        not have their TLS certificate validated (i.e. insecure connections
                        will be allowed). Only enable this option in development environments.
                        The cert-manager system installed roots will be used to verify
                        connections to the ACME server if this is false. Defaults
                        to false.
                      type: boolean
                    solvers:
                      description: 'Solvers is a list of challenge solvers that will
                        be used to solve ACME challenges for the matching domains.
                        Solver configurations must be provided in order to obtain
                        certificates from an ACME server. For more information, see:
                        https://cert-manager.io/docs/configuration/acme/'
                      items:
                        description: Configures an issuer to solve challenges using
                          the specified options. Only one of HTTP01 or DNS01 may be
                          provided.
                        properties:
                          dns01:
                            description: Configures cert-manager to attempt to complete
                              authorizations by performing the DNS01 challenge flow.
                            properties:
                              acmedns:
                                description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)
                                  API to manage DNS01 challenge records.
                                properties:
                                  accountSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  host:
                                    type: string
                                required:
                                - accountSecretRef
                                - host
                                type: object
                              akamai:
                                description: Use the Akamai DNS zone management API
                                  to manage DNS01 challenge records.
                                properties:
                                  accessTokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientSecretSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientTokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  serviceConsumerDomain:
                                    type: string
                                required:
                                - accessTokenSecretRef
                                - clientSecretSecretRef
                                - clientTokenSecretRef
                                - serviceConsumerDomain
                                type: object
                              azuredns:
                                description: Use the Microsoft Azure DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  clientID:
                                    description: if both this and ClientSecret are
                                      left unset MSI will be used
                                    type: string
                                  clientSecretSecretRef:
                                    description: if both this and ClientID are left
                                      unset MSI will be used
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  environment:
                                    enum:
                                    - AzurePublicCloud
                                    - AzureChinaCloud
                                    - AzureGermanCloud
                                    - AzureUSGovernmentCloud
                                    type: string
                                  hostedZoneName:
                                    type: string
                                  resourceGroupName:
                                    type: string
                                  subscriptionID:
                                    type: string
                                  tenantID:
                                    description: when specifying ClientID and ClientSecret
                                      then this field is also needed
                                    type: string
                                required:
                                - resourceGroupName
                                - subscriptionID
                                type: object
                              clouddns:
                                description: Use the Google Cloud DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  hostedZoneName:
                                    description: HostedZoneName is an optional field
                                      that tells cert-manager in which Cloud DNS zone
                                      the challenge record has to be created. If left
                                      empty cert-manager will automatically choose
                                      a zone.
                                    type: string
                                  project:
                                    type: string
                                  serviceAccountSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - project
                                type: object
                              cloudflare:
                                description: Use the Cloudflare API to manage DNS01
                                  challenge records.
                                properties:
                                  apiKeySecretRef:
                                    description: 'API key to use to authenticate with
                                      Cloudflare. Note: using an API token to authenticate
                                      is now the recommended method as it allows greater
                                      control of permissions.'
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  apiTokenSecretRef:
                                    description: API token used to authenticate with
                                      Cloudflare.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  email:
                                    description: Email of the account, only required
                                      when using API key based authentication.
                                    type: string
                                type: object
                              cnameStrategy:
                                description: CNAMEStrategy configures how the DNS01
                                  provider should handle CNAME records when found
                                  in DNS zones.
                                enum:
                                - None
                                - Follow
                                type: string
                              digitalocean:
                                description: Use the DigitalOcean DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  tokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - tokenSecretRef
                                type: object
                              rfc2136:
                                description: Use RFC2136 ("Dynamic Updates in the
                                  Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/)
                                  to manage DNS01 challenge records.
                                properties:
                                  nameserver:
                                    description: The IP address or hostname of an
                                      authoritative DNS server supporting RFC2136
                                      in the form host:port. If the host is an IPv6
                                      address it must be enclosed in square brackets
                                      (e.g [2001:db8::1])┬á; port is optional. This
                                      field is required.
                                    type: string
                                  tsigAlgorithm:
                                    description: 'The TSIG Algorithm configured in
                                      the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef``
                                      and ``tsigKeyName`` are defined. Supported values
                                      are (case-insensitive): ``HMACMD5`` (default),
                                      ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.'
                                    type: string
                                  tsigKeyName:
                                    description: The TSIG Key name configured in the
                                      DNS. If ``tsigSecretSecretRef`` is defined,
                                      this field is required.
                                    type: string
                                  tsigSecretSecretRef:
                                    description: The name of the secret containing
                                      the TSIG value. If ``tsigKeyName`` is defined,
                                      this field is required.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - nameserver
                                type: object
                              route53:
                                description: Use the AWS Route53 API to manage DNS01
                                  challenge records.
                                properties:
                                  accessKeyID:
                                    description: 'The AccessKeyID is used for authentication.
                                      If not set we fall-back to using env vars, shared
                                      credentials file or AWS Instance metadata see:
                                      https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                    type: string
                                  hostedZoneID:
                                    description: If set, the provider will manage
                                      only this zone in Route53 and will not do an
                                      lookup using the route53:ListHostedZonesByName
                                      api call.
                                    type: string
                                  region:
                                    description: Always set the region when using
                                      AccessKeyID and SecretAccessKey
                                    type: string
                                  role:
                                    description: Role is a Role ARN which the Route53
                                      provider will assume using either the explicit
                                      credentials AccessKeyID/SecretAccessKey or the
                                      inferred credentials from environment variables,
                                      shared credentials file or AWS Instance metadata
                                    type: string
                                  secretAccessKeySecretRef:
                                    description: The SecretAccessKey is used for authentication.
                                      If not set we fall-back to using env vars, shared
                                      credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - region
                                type: object
                              webhook:
                                description: Configure an external webhook based DNS01
                                  challenge solver to manage DNS01 challenge records.
                                properties:
                                  config:
                                    description: Additional configuration that should
                                      be passed to the webhook apiserver when challenges
                                      are processed. This can contain arbitrary JSON
                                      data. Secret values should not be specified
                                      in this stanza. If secret values are needed
                                      (e.g. credentials for a DNS service), you should
                                      use a SecretKeySelector to reference a Secret
                                      resource. For details on the schema of this
                                      field, consult the webhook provider implementation's
                                      documentation.
                                    x-kubernetes-preserve-unknown-fields: true
                                  groupName:
                                    description: The API group name that should be
                                      used when POSTing ChallengePayload resources
                                      to the webhook apiserver. This should be the
                                      same as the GroupName specified in the webhook
                                      provider implementation.
                                    type: string
                                  solverName:
                                    description: The name of the solver to use, as
                                      defined in the webhook provider implementation.
                                      This will typically be the name of the provider,
                                      e.g. 'cloudflare'.
                                    type: string
                                required:
                                - groupName
                                - solverName
                                type: object
                            type: object
                          http01:
                            description: Configures cert-manager to attempt to complete
                              authorizations by performing the HTTP01 challenge flow.
                              It is not possible to obtain certificates for wildcard
                              domain names (e.g. `*.example.com`) using the HTTP01
                              challenge mechanism.
                            properties:
                              gatewayHTTPRoute:
                                description: The Gateway API is a sig-network community
                                  API that models service networking in Kubernetes
                                  (https://gateway-api.sigs.k8s.io/). The Gateway
                                  solver will create HTTPRoutes with the specified
                                  labels in the same namespace as the challenge. This
                                  solver is experimental, and fields / behaviour may
                                  change in the future.
                                properties:
                                  labels:
                                    additionalProperties:
                                      type: string
                                    description: The labels that cert-manager will
                                      use when creating the temporary HTTPRoute needed
                                      for solving the HTTP-01 challenge. These labels
                                      must match the label selector of at least one
                                      Gateway.
                                    type: object
                                  serviceType:
                                    description: Optional service type for Kubernetes
                                      solver service. Supported values are NodePort
                                      or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                              ingress:
                                description: The ingress based HTTP01 challenge solver
                                  will solve challenges by creating or modifying Ingress
                                  resources in order to route requests for '/.well-known/acme-challenge/XYZ'
                                  to 'challenge solver' pods that are provisioned
                                  by cert-manager for each Challenge to be completed.
                                properties:
                                  class:
                                    description: The ingress class to use when creating
                                      Ingress resources to solve ACME challenges that
                                      use this challenge solver. Only one of 'class'
                                      or 'name' may be specified.
                                    type: string
                                  ingressTemplate:
                                    description: Optional ingress template used to
                                      configure the ACME challenge solver ingress
                                      used for HTTP01 challenges
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the
                                          ingress used to solve HTTP01 challenges.
                                          Only the 'labels' and 'annotations' fields
                                          may be set. If labels or annotations overlap
                                          with in-built values, the values here will
                                          override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be
                                              added to the created ACME HTTP01 solver
                                              ingress.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added
                                              to the created ACME HTTP01 solver ingress.
                                            type: object
                                        type: object
                                    type: object
                                  name:
                                    description: The name of the ingress resource
                                      that should have ACME challenge solving routes
                                      inserted into it in order to solve HTTP01 challenges.
                                      This is typically used in conjunction with ingress
                                      controllers like ingress-gce, which maintains
                                      a 1:1 mapping between external IPs and ingress
                                      resources.
                                    type: string
                                  podTemplate:
                                    description: Optional pod template used to configure
                                      the ACME challenge solver pods used for HTTP01
                                      challenges.
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the
                                          pod used to solve HTTP01 challenges. Only
                                          the 'labels' and 'annotations' fields may
                                          be set. If labels or annotations overlap
                                          with in-built values, the values here will
                                          override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be
                                              added to the create ACME HTTP01 solver
                                              pods.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added
                                              to the created ACME HTTP01 solver pods.
                                            type: object
                                        type: object
                                      spec:
                                        description: PodSpec defines overrides for
                                          the HTTP01 challenge solver pod. Only the
                                          'priorityClassName', 'nodeSelector', 'affinity',
                                          'serviceAccountName' and 'tolerations' fields
                                          are supported currently. All other fields
                                          will be ignored.
                                        properties:
                                          affinity:
                                            description: If specified, the pod's scheduling
                                              constraints
                                            properties:
                                              nodeAffinity:
                                                description: Describes node affinity
                                                  scheduling rules for the pod.
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      matches the corresponding matchExpressions;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: An empty preferred
                                                        scheduling term matches all
                                                        objects with implicit weight
                                                        0 (i.e. it's a no-op). A null
                                                        preferred scheduling term
                                                        matches no objects (i.e. is
                                                        also a no-op).
                                                      properties:
                                                        preference:
                                                          description: A node selector
                                                            term, associated with
                                                            the corresponding weight.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                        weight:
                                                          description: Weight associated
                                                            with matching the corresponding
                                                            nodeSelectorTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - preference
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to an update), the system
                                                      may or may not try to eventually
                                                      evict the pod from its node.
                                                    properties:
                                                      nodeSelectorTerms:
                                                        description: Required. A list
                                                          of node selector terms.
                                                          The terms are ORed.
                                                        items:
                                                          description: A null or empty
                                                            node selector term matches
                                                            no objects. The requirements
                                                            of them are ANDed. The
                                                            TopologySelectorTerm type
                                                            implements a subset of
                                                            the NodeSelectorTerm.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                        type: array
                                                    required:
                                                    - nodeSelectorTerms
                                                    type: object
                                                type: object
                                              podAffinity:
                                                description: Describes pod affinity
                                                  scheduling rules (e.g. co-locate
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      has pods which matches the corresponding
                                                      podAffinityTerm; the node(s)
                                                      with the highest sum are the
                                                      most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaceSelector:
                                                              description: A label
                                                                query over the set
                                                                of namespaces that
                                                                the term applies to.
                                                                The term is applied
                                                                to the union of the
                                                                namespaces selected
                                                                by this field and
                                                                the ones listed in
                                                                the namespaces field.
                                                                null selector and
                                                                null or empty namespaces
                                                                list means "this pod's
                                                                namespace". An empty
                                                                selector ({}) matches
                                                                all namespaces. This
                                                                field is alpha-level
                                                                and is only honored
                                                                when PodAffinityNamespaceSelector
                                                                feature is enabled.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaces:
                                                              description: namespaces
                                                                specifies a static
                                                                list of namespace
                                                                names that the term
                                                                applies to. The term
                                                                is applied to the
                                                                union of the namespaces
                                                                listed in this field
                                                                and the ones selected
                                                                by namespaceSelector.
                                                                null or empty namespaces
                                                                list and null namespaceSelector
                                                                means "this pod's
                                                                namespace"
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaceSelector:
                                                          description: A label query
                                                            over the set of namespaces
                                                            that the term applies
                                                            to. The term is applied
                                                            to the union of the namespaces
                                                            selected by this field
                                                            and the ones listed in
                                                            the namespaces field.
                                                            null selector and null
                                                            or empty namespaces list
                                                            means "this pod's namespace".
                                                            An empty selector ({})
                                                            matches all namespaces.
                                                            This field is alpha-level
                                                            and is only honored when
                                                            PodAffinityNamespaceSelector
                                                            feature is enabled.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces
                                                            specifies a static list
                                                            of namespace names that
                                                            the term applies to. The
                                                            term is applied to the
                                                            union of the namespaces
                                                            listed in this field and
                                                            the ones selected by namespaceSelector.
                                                            null or empty namespaces
                                                            list and null namespaceSelector
                                                            means "this pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                              podAntiAffinity:
                                                description: Describes pod anti-affinity
                                                  scheduling rules (e.g. avoid putting
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the anti-affinity
                                                      expressions specified by this
                                                      field, but it may choose a node
                                                      that violates one or more of
                                                      the expressions. The node that
                                                      is most preferred is the one
                                                      with the greatest sum of weights,
                                                      i.e. for each node that meets
                                                      all of the scheduling requirements
                                                      (resource request, requiredDuringScheduling
                                                      anti-affinity expressions, etc.),
                                                      compute a sum by iterating through
                                                      the elements of this field and
                                                      adding "weight" to the sum if
                                                      the node has pods which matches
                                                      the corresponding podAffinityTerm;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaceSelector:
                                                              description: A label
                                                                query over the set
                                                                of namespaces that
                                                                the term applies to.
                                                                The term is applied
                                                                to the union of the
                                                                namespaces selected
                                                                by this field and
                                                                the ones listed in
                                                                the namespaces field.
                                                                null selector and
                                                                null or empty namespaces
                                                                list means "this pod's
                                                                namespace". An empty
                                                                selector ({}) matches
                                                                all namespaces. This
                                                                field is alpha-level
                                                                and is only honored
                                                                when PodAffinityNamespaceSelector
                                                                feature is enabled.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaces:
                                                              description: namespaces
                                                                specifies a static
                                                                list of namespace
                                                                names that the term
                                                                applies to. The term
                                                                is applied to the
                                                                union of the namespaces
                                                                listed in this field
                                                                and the ones selected
                                                                by namespaceSelector.
                                                                null or empty namespaces
                                                                list and null namespaceSelector
                                                                means "this pod's
                                                                namespace"
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the anti-affinity
                                                      requirements specified by this
                                                      field are not met at scheduling
                                                      time, the pod will not be scheduled
                                                      onto the node. If the anti-affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaceSelector:
                                                          description: A label query
                                                            over the set of namespaces
                                                            that the term applies
                                                            to. The term is applied
                                                            to the union of the namespaces
                                                            selected by this field
                                                            and the ones listed in
                                                            the namespaces field.
                                                            null selector and null
                                                            or empty namespaces list
                                                            means "this pod's namespace".
                                                            An empty selector ({})
                                                            matches all namespaces.
                                                            This field is alpha-level
                                                            and is only honored when
                                                            PodAffinityNamespaceSelector
                                                            feature is enabled.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces
                                                            specifies a static list
                                                            of namespace names that
                                                            the term applies to. The
                                                            term is applied to the
                                                            union of the namespaces
                                                            listed in this field and
                                                            the ones selected by namespaceSelector.
                                                            null or empty namespaces
                                                            list and null namespaceSelector
                                                            means "this pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                            type: object
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: 'NodeSelector is a selector
                                              which must be true for the pod to fit
                                              on a node. Selector which must match
                                              a node''s labels for the pod to be scheduled
                                              on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                            type: object
                                          priorityClassName:
                                            description: If specified, the pod's priorityClassName.
                                            type: string
                                          serviceAccountName:
                                            description: If specified, the pod's service
                                              account
                                            type: string
                                          tolerations:
                                            description: If specified, the pod's tolerations.
                                            items:
                                              description: The pod this Toleration
                                                is attached to tolerates any taint
                                                that matches the triple <key,value,effect>
                                                using the matching operator <operator>.
                                              properties:
                                                effect:
                                                  description: Effect indicates the
                                                    taint effect to match. Empty means
                                                    match all taint effects. When
                                                    specified, allowed values are
                                                    NoSchedule, PreferNoSchedule and
                                                    NoExecute.
                                                  type: string
                                                key:
                                                  description: Key is the taint key
                                                    that the toleration applies to.
                                                    Empty means match all taint keys.
                                                    If the key is empty, operator
                                                    must be Exists; this combination
                                                    means to match all values and
                                                    all keys.
                                                  type: string
                                                operator:
                                                  description: Operator represents
                                                    a key's relationship to the value.
                                                    Valid operators are Exists and
                                                    Equal. Defaults to Equal. Exists
                                                    is equivalent to wildcard for
                                                    value, so that a pod can tolerate
                                                    all taints of a particular category.
                                                  type: string
                                                tolerationSeconds:
                                                  description: TolerationSeconds represents
                                                    the period of time the toleration
                                                    (which must be of effect NoExecute,
                                                    otherwise this field is ignored)
                                                    tolerates the taint. By default,
                                                    it is not set, which means tolerate
                                                    the taint forever (do not evict).
                                                    Zero and negative values will
                                                    be treated as 0 (evict immediately)
                                                    by the system.
                                                  format: int64
                                                  type: integer
                                                value:
                                                  description: Value is the taint
                                                    value the toleration matches to.
                                                    If the operator is Exists, the
                                                    value should be empty, otherwise
                                                    just a regular string.
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                    type: object
                                  serviceType:
                                    description: Optional service type for Kubernetes
                                      solver service. Supported values are NodePort
                                      or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                            type: object
                          selector:
                            description: Selector selects a set of DNSNames on the
                              Certificate resource that should be solved using this
                              challenge solver. If not specified, the solver will
                              be treated as the 'default' solver with the lowest priority,
                              i.e. if any other solver has a more specific match,
                              it will be used instead.
                            properties:
                              dnsNames:
                                description: List of DNSNames that this solver will
                                  be used to solve. If specified and a match is found,
                                  a dnsNames selector will take precedence over a
                                  dnsZones selector. If multiple solvers match with
                                  the same dnsNames value, the solver with the most
                                  matching labels in matchLabels will be selected.
                                  If neither has more matches, the solver defined
                                  earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              dnsZones:
                                description: List of DNSZones that this solver will
                                  be used to solve. The most specific DNS zone match
                                  specified here will take precedence over other DNS
                                  zone matches, so a solver specifying sys.example.com
                                  will be selected over one specifying example.com
                                  for the domain www.sys.example.com. If multiple
                                  solvers match with the same dnsZones value, the
                                  solver with the most matching labels in matchLabels
                                  will be selected. If neither has more matches, the
                                  solver defined earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: A label selector that is used to refine
                                  the set of certificate's that this challenge solver
                                  will apply to.
                                type: object
                            type: object
                        type: object
                      type: array
                  required:
                  - privateKeySecretRef
                  - server
                  type: object
                ca:
                  description: CA configures this issuer to sign certificates using
                    a signing CA keypair stored in a Secret resource. This is used
                    to build internal PKIs that are managed by cert-manager.
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate
                        extension which identifies the location of the CRL from which
                        the revocation of this certificate can be checked. If not
                        set, certificates will be issued without distribution points
                        set.
                      items:
                        type: string
                      type: array
                    ocspServers:
                      description: The OCSP server list is an X.509 v3 extension that
                        defines a list of URLs of OCSP responders. The OCSP responders
                        can be queried for the revocation status of an issued certificate.
                        If not set, the certificate will be issued with no OCSP servers
                        set. For example, an OCSP server URL could be "http://ocsp.int-x3.letsencrypt.org".
                      items:
                        type: string
                      type: array
                    secretName:
                      description: SecretName is the name of the secret used to sign
                        Certificates issued by this Issuer.
                      type: string
                  required:
                  - secretName
                  type: object
                selfSigned:
                  description: SelfSigned configures this issuer to 'self sign' certificates
                    using the private key used to create the CertificateRequest object.
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate
                        extension which identifies the location of the CRL from which
                        the revocation of this certificate can be checked. If not
                        set certificate will be issued without CDP. Values are strings.
                      items:
                        type: string
                      type: array
                  type: object
                vault:
                  description: Vault configures this issuer to sign certificates using
                    a HashiCorp Vault PKI backend.
                  properties:
                    auth:
                      description: Auth configures how cert-manager authenticates
                        with the Vault server.
                      properties:
                        appRole:
                          description: AppRole authenticates with Vault using the
                            App Role auth mechanism, with the role and secret stored
                            in a Kubernetes Secret resource.
                          properties:
                            path:
                              description: 'Path where the App Role authentication
                                backend is mounted in Vault, e.g: "approle"'
                              type: string
                            roleId:
                              description: RoleID configured in the App Role authentication
                                backend when setting up the authentication backend
                                in Vault.
                              type: string
                            secretRef:
                              description: Reference to a key in a Secret that contains
                                the App Role secret used to authenticate with Vault.
                                The `key` field must be specified and denotes which
                                entry within the Secret resource is used as the app
                                role secret.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - path
                          - roleId
                          - secretRef
                          type: object
                        kubernetes:
                          description: Kubernetes authenticates with Vault by passing
                            the ServiceAccount token stored in the named Secret resource
                            to the Vault server.
                          properties:
                            mountPath:
                              description: The Vault mountPath here is the mount path
                                to use when authenticating with Vault. For example,
                                setting a value to `/v1/auth/foo`, will use the path
                                `/v1/auth/foo/login` to authenticate with Vault. If
                                unspecified, the default value "/v1/auth/kubernetes"
                                will be used.
                              type: string
                            role:
                              description: A required field containing the Vault Role
                                to assume. A Role binds a Kubernetes ServiceAccount
                                with a set of Vault policies.
                              type: string
                            secretRef:
                              description: The required Secret field containing a
                                Kubernetes ServiceAccount JWT used for authenticating
                                with Vault. Use of 'ambient credentials' is not supported.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - role
                          - secretRef
                          type: object
                        tokenSecretRef:
                          description: TokenSecretRef authenticates with Vault by
                            presenting a token.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      type: object
                    caBundle:
                      description: PEM-encoded CA bundle (base64-encoded) used to
                        validate Vault server certificate. Only used if the Server
                        URL is using HTTPS protocol. This parameter is ignored for
                        plain HTTP protocol connection. If not set the system root
                        certificates are used to validate the TLS connection.
                      format: byte
                      type: string
                    namespace:
                      description: 'Name of the vault namespace. Namespaces is a set
                        of features within Vault Enterprise that allows Vault environments
                        to support Secure Multi-tenancy. e.g: "ns1" More about namespaces
                        can be found here https://www.vaultproject.io/docs/enterprise/namespaces'
                      type: string
                    path:
                      description: 'Path is the mount path of the Vault PKI backend''s
                        `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".'
                      type: string
                    server:
                      description: 'Server is the connection address for the Vault
                        server, e.g: "https://vault.example.com:8200".'
                      type: string
                  required:
                  - auth
                  - path
                  - server
                  type: object
                venafi:
                  description: Venafi configures this issuer to sign certificates
                    using a Venafi TPP or Venafi Cloud policy zone.
                  properties:
                    cloud:
                      description: Cloud specifies the Venafi cloud configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        apiTokenSecretRef:
                          description: APITokenSecretRef is a secret key selector
                            for the Venafi Cloud API token.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: URL is the base URL for Venafi Cloud. Defaults
                            to "https://api.venafi.cloud/v1".
                          type: string
                      required:
                      - apiTokenSecretRef
                      type: object
                    tpp:
                      description: TPP specifies Trust Protection Platform configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        caBundle:
                          description: CABundle is a PEM encoded TLS certificate to
                            use to verify connections to the TPP instance. If specified,
                            system roots will not be used and the issuing CA for the
                            TPP instance must be verifiable using the provided root.
                            If not specified, the connection will be verified using
                            the cert-manager system root certificates.
                          format: byte
                          type: string
                        credentialsRef:
                          description: CredentialsRef is a reference to a Secret containing
                            the username and password for the TPP server. The secret
                            must contain two keys, 'username' and 'password'.
                          properties:
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: 'URL is the base URL for the vedsdk endpoint
                            of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".'
                          type: string
                      required:
                      - credentialsRef
                      - url
                      type: object
                    zone:
                      description: Zone is the Venafi Policy Zone to use for this
                        issuer. All requests made to the Venafi platform will be restricted
                        by the named zone policy. This field is required.
                      type: string
                  required:
                  - zone
                  type: object
              type: object
            status:
              description: Status of the ClusterIssuer. This is set and managed automatically.
              properties:
                acme:
                  description: ACME specific status options. This field should only
                    be set if the Issuer is configured to use an ACME server to issue
                    certificates.
                  properties:
                    lastRegisteredEmail:
                      description: LastRegisteredEmail is the email associated with
                        the latest registered ACME account, in order to track changes
                        made to registered account associated with the  Issuer
                      type: string
                    uri:
                      description: URI is the unique account identifier, which can
                        also be used to retrieve account details from the CA
                      type: string
                  type: object
                conditions:
                  description: List of status conditions to indicate the status of
                    a CertificateRequest. Known condition types are `Ready`.
                  items:
                    description: IssuerCondition contains condition information for
                      an Issuer.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      observedGeneration:
                        description: If set, this represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.condition[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the Issuer.
                        format: int64
                        type: integer
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`,
                          `Unknown`).
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Ready`).
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha3
      schema:
        openAPIV3Schema:
          description: A ClusterIssuer represents a certificate issuing authority
            which can be referenced as part of `issuerRef` fields. It is similar to
            an Issuer, however it is cluster-scoped and therefore can be referenced
            by resources that exist in *any* namespace, not just the same namespace
            as the referent.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the ClusterIssuer resource.
              properties:
                acme:
                  description: ACME configures this issuer to communicate with a RFC8555
                    (ACME) server to obtain signed x509 certificates.
                  properties:
                    disableAccountKeyGeneration:
                      description: Enables or disables generating a new ACME account
                        key. If true, the Issuer resource will *not* request a new
                        account but will expect the account key to be supplied via
                        an existing secret. If false, the cert-manager system will
                        generate a new ACME account key for the Issuer. Defaults to
                        false.
                      type: boolean
                    email:
                      description: Email is the email address to be associated with
                        the ACME account. This field is optional, but it is strongly
                        recommended to be set. It will be used to contact you in case
                        of issues with your account or certificates, including expiry
                        notification emails. This field may be updated after the account
                        is initially registered.
                      type: string
                    enableDurationFeature:
                      description: Enables requesting a Not After date on certificates
                        that matches the duration of the certificate. This is not
                        supported by all ACME servers like Let's Encrypt. If set to
                        true when the ACME server does not support it it will create
                        an error on the Order. Defaults to false.
                      type: boolean
                    externalAccountBinding:
                      description: ExternalAccountBinding is a reference to a CA external
                        account of the ACME server. If set, upon registration cert-manager
                        will attempt to associate the given external account credentials
                        with the registered ACME account.
                      properties:
                        keyAlgorithm:
                          description: 'Deprecated: keyAlgorithm field exists for
                            historical compatibility reasons and should not be used.
                            The algorithm is now hardcoded to HS256 in golang/x/crypto/acme.'
                          enum:
                          - HS256
                          - HS384
                          - HS512
                          type: string
                        keyID:
                          description: keyID is the ID of the CA key that the External
                            Account is bound to.
                          type: string
                        keySecretRef:
                          description: keySecretRef is a Secret Key Selector referencing
                            a data item in a Kubernetes Secret which holds the symmetric
                            MAC key of the External Account Binding. The `key` is
                            the index string that is paired with the key data in the
                            Secret and should not be confused with the key data itself,
                            or indeed with the External Account Binding keyID above.
                            The secret key stored in the Secret **must** be un-padded,
                            base64 URL encoded data.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - keyID
                      - keySecretRef
                      type: object
                    preferredChain:
                      description: 'PreferredChain is the chain to use if the ACME
                        server outputs multiple. PreferredChain is no guarantee that
                        this one gets delivered by the ACME endpoint. For example,
                        for Let''s Encrypt''s DST crosssign you would use: "DST Root
                        CA X3" or "ISRG Root X1" for the newer Let''s Encrypt root
                        CA. This value picks the first certificate bundle in the ACME
                        alternative chains that has a certificate with this value
                        as its issuer''s CN'
                      maxLength: 64
                      type: string
                    privateKeySecretRef:
                      description: PrivateKey is the name of a Kubernetes Secret resource
                        that will be used to store the automatically generated ACME
                        account private key. Optionally, a `key` may be specified
                        to select a specific entry within the named Secret resource.
                        If `key` is not specified, a default of `tls.key` will be
                        used.
                      properties:
                        key:
                          description: The key of the entry in the Secret resource's
                            `data` field to be used. Some instances of this field
                            may be defaulted, in others it may be required.
                          type: string
                        name:
                          description: 'Name of the resource being referred to. More
                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                      required:
                      - name
                      type: object
                    server:
                      description: 'Server is the URL used to access the ACME server''s
                        ''directory'' endpoint. For example, for Let''s Encrypt''s
                        staging endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory".
                        Only ACME v2 endpoints (i.e. RFC 8555) are supported.'
                      type: string
                    skipTLSVerify:
                      description: Enables or disables validation of the ACME server
                        TLS certificate. If true, requests to the ACME server will
                        not have their TLS certificate validated (i.e. insecure connections
                        will be allowed). Only enable this option in development environments.
                        The cert-manager system installed roots will be used to verify
                        connections to the ACME server if this is false. Defaults
                        to false.
                      type: boolean
                    solvers:
                      description: 'Solvers is a list of challenge solvers that will
                        be used to solve ACME challenges for the matching domains.
                        Solver configurations must be provided in order to obtain
                        certificates from an ACME server. For more information, see:
                        https://cert-manager.io/docs/configuration/acme/'
                      items:
                        description: Configures an issuer to solve challenges using
                          the specified options. Only one of HTTP01 or DNS01 may be
                          provided.
                        properties:
                          dns01:
                            description: Configures cert-manager to attempt to complete
                              authorizations by performing the DNS01 challenge flow.
                            properties:
                              acmedns:
                                description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)
                                  API to manage DNS01 challenge records.
                                properties:
                                  accountSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  host:
                                    type: string
                                required:
                                - accountSecretRef
                                - host
                                type: object
                              akamai:
                                description: Use the Akamai DNS zone management API
                                  to manage DNS01 challenge records.
                                properties:
                                  accessTokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientSecretSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientTokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  serviceConsumerDomain:
                                    type: string
                                required:
                                - accessTokenSecretRef
                                - clientSecretSecretRef
                                - clientTokenSecretRef
                                - serviceConsumerDomain
                                type: object
                              azuredns:
                                description: Use the Microsoft Azure DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  clientID:
                                    description: if both this and ClientSecret are
                                      left unset MSI will be used
                                    type: string
                                  clientSecretSecretRef:
                                    description: if both this and ClientID are left
                                      unset MSI will be used
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  environment:
                                    enum:
                                    - AzurePublicCloud
                                    - AzureChinaCloud
                                    - AzureGermanCloud
                                    - AzureUSGovernmentCloud
                                    type: string
                                  hostedZoneName:
                                    type: string
                                  resourceGroupName:
                                    type: string
                                  subscriptionID:
                                    type: string
                                  tenantID:
                                    description: when specifying ClientID and ClientSecret
                                      then this field is also needed
                                    type: string
                                required:
                                - resourceGroupName
                                - subscriptionID
                                type: object
                              clouddns:
                                description: Use the Google Cloud DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  hostedZoneName:
                                    description: HostedZoneName is an optional field
                                      that tells cert-manager in which Cloud DNS zone
                                      the challenge record has to be created. If left
                                      empty cert-manager will automatically choose
                                      a zone.
                                    type: string
                                  project:
                                    type: string
                                  serviceAccountSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - project
                                type: object
                              cloudflare:
                                description: Use the Cloudflare API to manage DNS01
                                  challenge records.
                                properties:
                                  apiKeySecretRef:
                                    description: 'API key to use to authenticate with
                                      Cloudflare. Note: using an API token to authenticate
                                      is now the recommended method as it allows greater
                                      control of permissions.'
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  apiTokenSecretRef:
                                    description: API token used to authenticate with
                                      Cloudflare.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  email:
                                    description: Email of the account, only required
                                      when using API key based authentication.
                                    type: string
                                type: object
                              cnameStrategy:
                                description: CNAMEStrategy configures how the DNS01
                                  provider should handle CNAME records when found
                                  in DNS zones.
                                enum:
                                - None
                                - Follow
                                type: string
                              digitalocean:
                                description: Use the DigitalOcean DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  tokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - tokenSecretRef
                                type: object
                              rfc2136:
                                description: Use RFC2136 ("Dynamic Updates in the
                                  Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/)
                                  to manage DNS01 challenge records.
                                properties:
                                  nameserver:
                                    description: The IP address or hostname of an
                                      authoritative DNS server supporting RFC2136
                                      in the form host:port. If the host is an IPv6
                                      address it must be enclosed in square brackets
                                      (e.g [2001:db8::1])┬á; port is optional. This
                                      field is required.
                                    type: string
                                  tsigAlgorithm:
                                    description: 'The TSIG Algorithm configured in
                                      the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef``
                                      and ``tsigKeyName`` are defined. Supported values
                                      are (case-insensitive): ``HMACMD5`` (default),
                                      ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.'
                                    type: string
                                  tsigKeyName:
                                    description: The TSIG Key name configured in the
                                      DNS. If ``tsigSecretSecretRef`` is defined,
                                      this field is required.
                                    type: string
                                  tsigSecretSecretRef:
                                    description: The name of the secret containing
                                      the TSIG value. If ``tsigKeyName`` is defined,
                                      this field is required.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - nameserver
                                type: object
                              route53:
                                description: Use the AWS Route53 API to manage DNS01
                                  challenge records.
                                properties:
                                  accessKeyID:
                                    description: 'The AccessKeyID is used for authentication.
                                      If not set we fall-back to using env vars, shared
                                      credentials file or AWS Instance metadata see:
                                      https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                    type: string
                                  hostedZoneID:
                                    description: If set, the provider will manage
                                      only this zone in Route53 and will not do an
                                      lookup using the route53:ListHostedZonesByName
                                      api call.
                                    type: string
                                  region:
                                    description: Always set the region when using
                                      AccessKeyID and SecretAccessKey
                                    type: string
                                  role:
                                    description: Role is a Role ARN which the Route53
                                      provider will assume using either the explicit
                                      credentials AccessKeyID/SecretAccessKey or the
                                      inferred credentials from environment variables,
                                      shared credentials file or AWS Instance metadata
                                    type: string
                                  secretAccessKeySecretRef:
                                    description: The SecretAccessKey is used for authentication.
                                      If not set we fall-back to using env vars, shared
                                      credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - region
                                type: object
                              webhook:
                                description: Configure an external webhook based DNS01
                                  challenge solver to manage DNS01 challenge records.
                                properties:
                                  config:
                                    description: Additional configuration that should
                                      be passed to the webhook apiserver when challenges
                                      are processed. This can contain arbitrary JSON
                                      data. Secret values should not be specified
                                      in this stanza. If secret values are needed
                                      (e.g. credentials for a DNS service), you should
                                      use a SecretKeySelector to reference a Secret
                                      resource. For details on the schema of this
                                      field, consult the webhook provider implementation's
                                      documentation.
                                    x-kubernetes-preserve-unknown-fields: true
                                  groupName:
                                    description: The API group name that should be
                                      used when POSTing ChallengePayload resources
                                      to the webhook apiserver. This should be the
                                      same as the GroupName specified in the webhook
                                      provider implementation.
                                    type: string
                                  solverName:
                                    description: The name of the solver to use, as
                                      defined in the webhook provider implementation.
                                      This will typically be the name of the provider,
                                      e.g. 'cloudflare'.
                                    type: string
                                required:
                                - groupName
                                - solverName
                                type: object
                            type: object
                          http01:
                            description: Configures cert-manager to attempt to complete
                              authorizations by performing the HTTP01 challenge flow.
                              It is not possible to obtain certificates for wildcard
                              domain names (e.g. `*.example.com`) using the HTTP01
                              challenge mechanism.
                            properties:
                              gatewayHTTPRoute:
                                description: The Gateway API is a sig-network community
                                  API that models service networking in Kubernetes
                                  (https://gateway-api.sigs.k8s.io/). The Gateway
                                  solver will create HTTPRoutes with the specified
                                  labels in the same namespace as the challenge. This
                                  solver is experimental, and fields / behaviour may
                                  change in the future.
                                properties:
                                  labels:
                                    additionalProperties:
                                      type: string
                                    description: The labels that cert-manager will
                                      use when creating the temporary HTTPRoute needed
                                      for solving the HTTP-01 challenge. These labels
                                      must match the label selector of at least one
                                      Gateway.
                                    type: object
                                  serviceType:
                                    description: Optional service type for Kubernetes
                                      solver service. Supported values are NodePort
                                      or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                              ingress:
                                description: The ingress based HTTP01 challenge solver
                                  will solve challenges by creating or modifying Ingress
                                  resources in order to route requests for '/.well-known/acme-challenge/XYZ'
                                  to 'challenge solver' pods that are provisioned
                                  by cert-manager for each Challenge to be completed.
                                properties:
                                  class:
                                    description: The ingress class to use when creating
                                      Ingress resources to solve ACME challenges that
                                      use this challenge solver. Only one of 'class'
                                      or 'name' may be specified.
                                    type: string
                                  ingressTemplate:
                                    description: Optional ingress template used to
                                      configure the ACME challenge solver ingress
                                      used for HTTP01 challenges
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the
                                          ingress used to solve HTTP01 challenges.
                                          Only the 'labels' and 'annotations' fields
                                          may be set. If labels or annotations overlap
                                          with in-built values, the values here will
                                          override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be
                                              added to the created ACME HTTP01 solver
                                              ingress.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added
                                              to the created ACME HTTP01 solver ingress.
                                            type: object
                                        type: object
                                    type: object
                                  name:
                                    description: The name of the ingress resource
                                      that should have ACME challenge solving routes
                                      inserted into it in order to solve HTTP01 challenges.
                                      This is typically used in conjunction with ingress
                                      controllers like ingress-gce, which maintains
                                      a 1:1 mapping between external IPs and ingress
                                      resources.
                                    type: string
                                  podTemplate:
                                    description: Optional pod template used to configure
                                      the ACME challenge solver pods used for HTTP01
                                      challenges.
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the
                                          pod used to solve HTTP01 challenges. Only
                                          the 'labels' and 'annotations' fields may
                                          be set. If labels or annotations overlap
                                          with in-built values, the values here will
                                          override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be
                                              added to the create ACME HTTP01 solver
                                              pods.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added
                                              to the created ACME HTTP01 solver pods.
                                            type: object
                                        type: object
                                      spec:
                                        description: PodSpec defines overrides for
                                          the HTTP01 challenge solver pod. Only the
                                          'priorityClassName', 'nodeSelector', 'affinity',
                                          'serviceAccountName' and 'tolerations' fields
                                          are supported currently. All other fields
                                          will be ignored.
                                        properties:
                                          affinity:
                                            description: If specified, the pod's scheduling
                                              constraints
                                            properties:
                                              nodeAffinity:
                                                description: Describes node affinity
                                                  scheduling rules for the pod.
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      matches the corresponding matchExpressions;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: An empty preferred
                                                        scheduling term matches all
                                                        objects with implicit weight
                                                        0 (i.e. it's a no-op). A null
                                                        preferred scheduling term
                                                        matches no objects (i.e. is
                                                        also a no-op).
                                                      properties:
                                                        preference:
                                                          description: A node selector
                                                            term, associated with
                                                            the corresponding weight.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                        weight:
                                                          description: Weight associated
                                                            with matching the corresponding
                                                            nodeSelectorTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - preference
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to an update), the system
                                                      may or may not try to eventually
                                                      evict the pod from its node.
                                                    properties:
                                                      nodeSelectorTerms:
                                                        description: Required. A list
                                                          of node selector terms.
                                                          The terms are ORed.
                                                        items:
                                                          description: A null or empty
                                                            node selector term matches
                                                            no objects. The requirements
                                                            of them are ANDed. The
                                                            TopologySelectorTerm type
                                                            implements a subset of
                                                            the NodeSelectorTerm.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                        type: array
                                                    required:
                                                    - nodeSelectorTerms
                                                    type: object
                                                type: object
                                              podAffinity:
                                                description: Describes pod affinity
                                                  scheduling rules (e.g. co-locate
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      has pods which matches the corresponding
                                                      podAffinityTerm; the node(s)
                                                      with the highest sum are the
                                                      most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaceSelector:
                                                              description: A label
                                                                query over the set
                                                                of namespaces that
                                                                the term applies to.
                                                                The term is applied
                                                                to the union of the
                                                                namespaces selected
                                                                by this field and
                                                                the ones listed in
                                                                the namespaces field.
                                                                null selector and
                                                                null or empty namespaces
                                                                list means "this pod's
                                                                namespace". An empty
                                                                selector ({}) matches
                                                                all namespaces. This
                                                                field is alpha-level
                                                                and is only honored
                                                                when PodAffinityNamespaceSelector
                                                                feature is enabled.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaces:
                                                              description: namespaces
                                                                specifies a static
                                                                list of namespace
                                                                names that the term
                                                                applies to. The term
                                                                is applied to the
                                                                union of the namespaces
                                                                listed in this field
                                                                and the ones selected
                                                                by namespaceSelector.
                                                                null or empty namespaces
                                                                list and null namespaceSelector
                                                                means "this pod's
                                                                namespace"
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaceSelector:
                                                          description: A label query
                                                            over the set of namespaces
                                                            that the term applies
                                                            to. The term is applied
                                                            to the union of the namespaces
                                                            selected by this field
                                                            and the ones listed in
                                                            the namespaces field.
                                                            null selector and null
                                                            or empty namespaces list
                                                            means "this pod's namespace".
                                                            An empty selector ({})
                                                            matches all namespaces.
                                                            This field is alpha-level
                                                            and is only honored when
                                                            PodAffinityNamespaceSelector
                                                            feature is enabled.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces
                                                            specifies a static list
                                                            of namespace names that
                                                            the term applies to. The
                                                            term is applied to the
                                                            union of the namespaces
                                                            listed in this field and
                                                            the ones selected by namespaceSelector.
                                                            null or empty namespaces
                                                            list and null namespaceSelector
                                                            means "this pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                              podAntiAffinity:
                                                description: Describes pod anti-affinity
                                                  scheduling rules (e.g. avoid putting
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the anti-affinity
                                                      expressions specified by this
                                                      field, but it may choose a node
                                                      that violates one or more of
                                                      the expressions. The node that
                                                      is most preferred is the one
                                                      with the greatest sum of weights,
                                                      i.e. for each node that meets
                                                      all of the scheduling requirements
                                                      (resource request, requiredDuringScheduling
                                                      anti-affinity expressions, etc.),
                                                      compute a sum by iterating through
                                                      the elements of this field and
                                                      adding "weight" to the sum if
                                                      the node has pods which matches
                                                      the corresponding podAffinityTerm;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaceSelector:
                                                              description: A label
                                                                query over the set
                                                                of namespaces that
                                                                the term applies to.
                                                                The term is applied
                                                                to the union of the
                                                                namespaces selected
                                                                by this field and
                                                                the ones listed in
                                                                the namespaces field.
                                                                null selector and
                                                                null or empty namespaces
                                                                list means "this pod's
                                                                namespace". An empty
                                                                selector ({}) matches
                                                                all namespaces. This
                                                                field is alpha-level
                                                                and is only honored
                                                                when PodAffinityNamespaceSelector
                                                                feature is enabled.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaces:
                                                              description: namespaces
                                                                specifies a static
                                                                list of namespace
                                                                names that the term
                                                                applies to. The term
                                                                is applied to the
                                                                union of the namespaces
                                                                listed in this field
                                                                and the ones selected
                                                                by namespaceSelector.
                                                                null or empty namespaces
                                                                list and null namespaceSelector
                                                                means "this pod's
                                                                namespace"
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the anti-affinity
                                                      requirements specified by this
                                                      field are not met at scheduling
                                                      time, the pod will not be scheduled
                                                      onto the node. If the anti-affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaceSelector:
                                                          description: A label query
                                                            over the set of namespaces
                                                            that the term applies
                                                            to. The term is applied
                                                            to the union of the namespaces
                                                            selected by this field
                                                            and the ones listed in
                                                            the namespaces field.
                                                            null selector and null
                                                            or empty namespaces list
                                                            means "this pod's namespace".
                                                            An empty selector ({})
                                                            matches all namespaces.
                                                            This field is alpha-level
                                                            and is only honored when
                                                            PodAffinityNamespaceSelector
                                                            feature is enabled.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces
                                                            specifies a static list
                                                            of namespace names that
                                                            the term applies to. The
                                                            term is applied to the
                                                            union of the namespaces
                                                            listed in this field and
                                                            the ones selected by namespaceSelector.
                                                            null or empty namespaces
                                                            list and null namespaceSelector
                                                            means "this pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                            type: object
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: 'NodeSelector is a selector
                                              which must be true for the pod to fit
                                              on a node. Selector which must match
                                              a node''s labels for the pod to be scheduled
                                              on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                            type: object
                                          priorityClassName:
                                            description: If specified, the pod's priorityClassName.
                                            type: string
                                          serviceAccountName:
                                            description: If specified, the pod's service
                                              account
                                            type: string
                                          tolerations:
                                            description: If specified, the pod's tolerations.
                                            items:
                                              description: The pod this Toleration
                                                is attached to tolerates any taint
                                                that matches the triple <key,value,effect>
                                                using the matching operator <operator>.
                                              properties:
                                                effect:
                                                  description: Effect indicates the
                                                    taint effect to match. Empty means
                                                    match all taint effects. When
                                                    specified, allowed values are
                                                    NoSchedule, PreferNoSchedule and
                                                    NoExecute.
                                                  type: string
                                                key:
                                                  description: Key is the taint key
                                                    that the toleration applies to.
                                                    Empty means match all taint keys.
                                                    If the key is empty, operator
                                                    must be Exists; this combination
                                                    means to match all values and
                                                    all keys.
                                                  type: string
                                                operator:
                                                  description: Operator represents
                                                    a key's relationship to the value.
                                                    Valid operators are Exists and
                                                    Equal. Defaults to Equal. Exists
                                                    is equivalent to wildcard for
                                                    value, so that a pod can tolerate
                                                    all taints of a particular category.
                                                  type: string
                                                tolerationSeconds:
                                                  description: TolerationSeconds represents
                                                    the period of time the toleration
                                                    (which must be of effect NoExecute,
                                                    otherwise this field is ignored)
                                                    tolerates the taint. By default,
                                                    it is not set, which means tolerate
                                                    the taint forever (do not evict).
                                                    Zero and negative values will
                                                    be treated as 0 (evict immediately)
                                                    by the system.
                                                  format: int64
                                                  type: integer
                                                value:
                                                  description: Value is the taint
                                                    value the toleration matches to.
                                                    If the operator is Exists, the
                                                    value should be empty, otherwise
                                                    just a regular string.
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                    type: object
                                  serviceType:
                                    description: Optional service type for Kubernetes
                                      solver service. Supported values are NodePort
                                      or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                            type: object
                          selector:
                            description: Selector selects a set of DNSNames on the
                              Certificate resource that should be solved using this
                              challenge solver. If not specified, the solver will
                              be treated as the 'default' solver with the lowest priority,
                              i.e. if any other solver has a more specific match,
                              it will be used instead.
                            properties:
                              dnsNames:
                                description: List of DNSNames that this solver will
                                  be used to solve. If specified and a match is found,
                                  a dnsNames selector will take precedence over a
                                  dnsZones selector. If multiple solvers match with
                                  the same dnsNames value, the solver with the most
                                  matching labels in matchLabels will be selected.
                                  If neither has more matches, the solver defined
                                  earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              dnsZones:
                                description: List of DNSZones that this solver will
                                  be used to solve. The most specific DNS zone match
                                  specified here will take precedence over other DNS
                                  zone matches, so a solver specifying sys.example.com
                                  will be selected over one specifying example.com
                                  for the domain www.sys.example.com. If multiple
                                  solvers match with the same dnsZones value, the
                                  solver with the most matching labels in matchLabels
                                  will be selected. If neither has more matches, the
                                  solver defined earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: A label selector that is used to refine
                                  the set of certificate's that this challenge solver
                                  will apply to.
                                type: object
                            type: object
                        type: object
                      type: array
                  required:
                  - privateKeySecretRef
                  - server
                  type: object
                ca:
                  description: CA configures this issuer to sign certificates using
                    a signing CA keypair stored in a Secret resource. This is used
                    to build internal PKIs that are managed by cert-manager.
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate
                        extension which identifies the location of the CRL from which
                        the revocation of this certificate can be checked. If not
                        set, certificates will be issued without distribution points
                        set.
                      items:
                        type: string
                      type: array
                    ocspServers:
                      description: The OCSP server list is an X.509 v3 extension that
                        defines a list of URLs of OCSP responders. The OCSP responders
                        can be queried for the revocation status of an issued certificate.
                        If not set, the certificate will be issued with no OCSP servers
                        set. For example, an OCSP server URL could be "http://ocsp.int-x3.letsencrypt.org".
                      items:
                        type: string
                      type: array
                    secretName:
                      description: SecretName is the name of the secret used to sign
                        Certificates issued by this Issuer.
                      type: string
                  required:
                  - secretName
                  type: object
                selfSigned:
                  description: SelfSigned configures this issuer to 'self sign' certificates
                    using the private key used to create the CertificateRequest object.
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate
                        extension which identifies the location of the CRL from which
                        the revocation of this certificate can be checked. If not
                        set certificate will be issued without CDP. Values are strings.
                      items:
                        type: string
                      type: array
                  type: object
                vault:
                  description: Vault configures this issuer to sign certificates using
                    a HashiCorp Vault PKI backend.
                  properties:
                    auth:
                      description: Auth configures how cert-manager authenticates
                        with the Vault server.
                      properties:
                        appRole:
                          description: AppRole authenticates with Vault using the
                            App Role auth mechanism, with the role and secret stored
                            in a Kubernetes Secret resource.
                          properties:
                            path:
                              description: 'Path where the App Role authentication
                                backend is mounted in Vault, e.g: "approle"'
                              type: string
                            roleId:
                              description: RoleID configured in the App Role authentication
                                backend when setting up the authentication backend
                                in Vault.
                              type: string
                            secretRef:
                              description: Reference to a key in a Secret that contains
                                the App Role secret used to authenticate with Vault.
                                The `key` field must be specified and denotes which
                                entry within the Secret resource is used as the app
                                role secret.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - path
                          - roleId
                          - secretRef
                          type: object
                        kubernetes:
                          description: Kubernetes authenticates with Vault by passing
                            the ServiceAccount token stored in the named Secret resource
                            to the Vault server.
                          properties:
                            mountPath:
                              description: The Vault mountPath here is the mount path
                                to use when authenticating with Vault. For example,
                                setting a value to `/v1/auth/foo`, will use the path
                                `/v1/auth/foo/login` to authenticate with Vault. If
                                unspecified, the default value "/v1/auth/kubernetes"
                                will be used.
                              type: string
                            role:
                              description: A required field containing the Vault Role
                                to assume. A Role binds a Kubernetes ServiceAccount
                                with a set of Vault policies.
                              type: string
                            secretRef:
                              description: The required Secret field containing a
                                Kubernetes ServiceAccount JWT used for authenticating
                                with Vault. Use of 'ambient credentials' is not supported.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - role
                          - secretRef
                          type: object
                        tokenSecretRef:
                          description: TokenSecretRef authenticates with Vault by
                            presenting a token.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      type: object
                    caBundle:
                      description: PEM-encoded CA bundle (base64-encoded) used to
                        validate Vault server certificate. Only used if the Server
                        URL is using HTTPS protocol. This parameter is ignored for
                        plain HTTP protocol connection. If not set the system root
                        certificates are used to validate the TLS connection.
                      format: byte
                      type: string
                    namespace:
                      description: 'Name of the vault namespace. Namespaces is a set
                        of features within Vault Enterprise that allows Vault environments
                        to support Secure Multi-tenancy. e.g: "ns1" More about namespaces
                        can be found here https://www.vaultproject.io/docs/enterprise/namespaces'
                      type: string
                    path:
                      description: 'Path is the mount path of the Vault PKI backend''s
                        `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".'
                      type: string
                    server:
                      description: 'Server is the connection address for the Vault
                        server, e.g: "https://vault.example.com:8200".'
                      type: string
                  required:
                  - auth
                  - path
                  - server
                  type: object
                venafi:
                  description: Venafi configures this issuer to sign certificates
                    using a Venafi TPP or Venafi Cloud policy zone.
                  properties:
                    cloud:
                      description: Cloud specifies the Venafi cloud configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        apiTokenSecretRef:
                          description: APITokenSecretRef is a secret key selector
                            for the Venafi Cloud API token.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: URL is the base URL for Venafi Cloud. Defaults
                            to "https://api.venafi.cloud/v1".
                          type: string
                      required:
                      - apiTokenSecretRef
                      type: object
                    tpp:
                      description: TPP specifies Trust Protection Platform configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        caBundle:
                          description: CABundle is a PEM encoded TLS certificate to
                            use to verify connections to the TPP instance. If specified,
                            system roots will not be used and the issuing CA for the
                            TPP instance must be verifiable using the provided root.
                            If not specified, the connection will be verified using
                            the cert-manager system root certificates.
                          format: byte
                          type: string
                        credentialsRef:
                          description: CredentialsRef is a reference to a Secret containing
                            the username and password for the TPP server. The secret
                            must contain two keys, 'username' and 'password'.
                          properties:
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: 'URL is the base URL for the vedsdk endpoint
                            of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".'
                          type: string
                      required:
                      - credentialsRef
                      - url
                      type: object
                    zone:
                      description: Zone is the Venafi Policy Zone to use for this
                        issuer. All requests made to the Venafi platform will be restricted
                        by the named zone policy. This field is required.
                      type: string
                  required:
                  - zone
                  type: object
              type: object
            status:
              description: Status of the ClusterIssuer. This is set and managed automatically.
              properties:
                acme:
                  description: ACME specific status options. This field should only
                    be set if the Issuer is configured to use an ACME server to issue
                    certificates.
                  properties:
                    lastRegisteredEmail:
                      description: LastRegisteredEmail is the email associated with
                        the latest registered ACME account, in order to track changes
                        made to registered account associated with the  Issuer
                      type: string
                    uri:
                      description: URI is the unique account identifier, which can
                        also be used to retrieve account details from the CA
                      type: string
                  type: object
                conditions:
                  description: List of status conditions to indicate the status of
                    a CertificateRequest. Known condition types are `Ready`.
                  items:
                    description: IssuerCondition contains condition information for
                      an Issuer.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      observedGeneration:
                        description: If set, this represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.condition[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the Issuer.
                        format: int64
                        type: integer
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`,
                          `Unknown`).
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Ready`).
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: A ClusterIssuer represents a certificate issuing authority
            which can be referenced as part of `issuerRef` fields. It is similar to
            an Issuer, however it is cluster-scoped and therefore can be referenced
            by resources that exist in *any* namespace, not just the same namespace
            as the referent.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the ClusterIssuer resource.
              properties:
                acme:
                  description: ACME configures this issuer to communicate with a RFC8555
                    (ACME) server to obtain signed x509 certificates.
                  properties:
                    disableAccountKeyGeneration:
                      description: Enables or disables generating a new ACME account
                        key. If true, the Issuer resource will *not* request a new
                        account but will expect the account key to be supplied via
                        an existing secret. If false, the cert-manager system will
                        generate a new ACME account key for the Issuer. Defaults to
                        false.
                      type: boolean
                    email:
                      description: Email is the email address to be associated with
                        the ACME account. This field is optional, but it is strongly
                        recommended to be set. It will be used to contact you in case
                        of issues with your account or certificates, including expiry
                        notification emails. This field may be updated after the account
                        is initially registered.
                      type: string
                    enableDurationFeature:
                      description: Enables requesting a Not After date on certificates
                        that matches the duration of the certificate. This is not
                        supported by all ACME servers like Let's Encrypt. If set to
                        true when the ACME server does not support it it will create
                        an error on the Order. Defaults to false.
                      type: boolean
                    externalAccountBinding:
                      description: ExternalAccountBinding is a reference to a CA external
                        account of the ACME server. If set, upon registration cert-manager
                        will attempt to associate the given external account credentials
                        with the registered ACME account.
                      properties:
                        keyAlgorithm:
                          description: 'Deprecated: keyAlgorithm field exists for
                            historical compatibility reasons and should not be used.
                            The algorithm is now hardcoded to HS256 in golang/x/crypto/acme.'
                          enum:
                          - HS256
                          - HS384
                          - HS512
                          type: string
                        keyID:
                          description: keyID is the ID of the CA key that the External
                            Account is bound to.
                          type: string
                        keySecretRef:
                          description: keySecretRef is a Secret Key Selector referencing
                            a data item in a Kubernetes Secret which holds the symmetric
                            MAC key of the External Account Binding. The `key` is
                            the index string that is paired with the key data in the
                            Secret and should not be confused with the key data itself,
                            or indeed with the External Account Binding keyID above.
                            The secret key stored in the Secret **must** be un-padded,
                            base64 URL encoded data.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - keyID
                      - keySecretRef
                      type: object
                    preferredChain:
                      description: 'PreferredChain is the chain to use if the ACME
                        server outputs multiple. PreferredChain is no guarantee that
                        this one gets delivered by the ACME endpoint. For example,
                        for Let''s Encrypt''s DST crosssign you would use: "DST Root
                        CA X3" or "ISRG Root X1" for the newer Let''s Encrypt root
                        CA. This value picks the first certificate bundle in the ACME
                        alternative chains that has a certificate with this value
                        as its issuer''s CN'
                      maxLength: 64
                      type: string
                    privateKeySecretRef:
                      description: PrivateKey is the name of a Kubernetes Secret resource
                        that will be used to store the automatically generated ACME
                        account private key. Optionally, a `key` may be specified
                        to select a specific entry within the named Secret resource.
                        If `key` is not specified, a default of `tls.key` will be
                        used.
                      properties:
                        key:
                          description: The key of the entry in the Secret resource's
                            `data` field to be used. Some instances of this field
                            may be defaulted, in others it may be required.
                          type: string
                        name:
                          description: 'Name of the resource being referred to. More
                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                      required:
                      - name
                      type: object
                    server:
                      description: 'Server is the URL used to access the ACME server''s
                        ''directory'' endpoint. For example, for Let''s Encrypt''s
                        staging endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory".
                        Only ACME v2 endpoints (i.e. RFC 8555) are supported.'
                      type: string
                    skipTLSVerify:
                      description: Enables or disables validation of the ACME server
                        TLS certificate. If true, requests to the ACME server will
                        not have their TLS certificate validated (i.e. insecure connections
                        will be allowed). Only enable this option in development environments.
                        The cert-manager system installed roots will be used to verify
                        connections to the ACME server if this is false. Defaults
                        to false.
                      type: boolean
                    solvers:
                      description: 'Solvers is a list of challenge solvers that will
                        be used to solve ACME challenges for the matching domains.
                        Solver configurations must be provided in order to obtain
                        certificates from an ACME server. For more information, see:
                        https://cert-manager.io/docs/configuration/acme/'
                      items:
                        description: Configures an issuer to solve challenges using
                          the specified options. Only one of HTTP01 or DNS01 may be
                          provided.
                        properties:
                          dns01:
                            description: Configures cert-manager to attempt to complete
                              authorizations by performing the DNS01 challenge flow.
                            properties:
                              acmeDNS:
                                description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)
                                  API to manage DNS01 challenge records.
                                properties:
                                  accountSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  host:
                                    type: string
                                required:
                                - accountSecretRef
                                - host
                                type: object
                              akamai:
                                description: Use the Akamai DNS zone management API
                                  to manage DNS01 challenge records.
                                properties:
                                  accessTokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientSecretSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientTokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  serviceConsumerDomain:
                                    type: string
                                required:
                                - accessTokenSecretRef
                                - clientSecretSecretRef
                                - clientTokenSecretRef
                                - serviceConsumerDomain
                                type: object
                              azureDNS:
                                description: Use the Microsoft Azure DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  clientID:
                                    description: if both this and ClientSecret are
                                      left unset MSI will be used
                                    type: string
                                  clientSecretSecretRef:
                                    description: if both this and ClientID are left
                                      unset MSI will be used
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  environment:
                                    enum:
                                    - AzurePublicCloud
                                    - AzureChinaCloud
                                    - AzureGermanCloud
                                    - AzureUSGovernmentCloud
                                    type: string
                                  hostedZoneName:
                                    type: string
                                  resourceGroupName:
                                    type: string
                                  subscriptionID:
                                    type: string
                                  tenantID:
                                    description: when specifying ClientID and ClientSecret
                                      then this field is also needed
                                    type: string
                                required:
                                - resourceGroupName
                                - subscriptionID
                                type: object
                              cloudDNS:
                                description: Use the Google Cloud DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  hostedZoneName:
                                    description: HostedZoneName is an optional field
                                      that tells cert-manager in which Cloud DNS zone
                                      the challenge record has to be created. If left
                                      empty cert-manager will automatically choose
                                      a zone.
                                    type: string
                                  project:
                                    type: string
                                  serviceAccountSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - project
                                type: object
                              cloudflare:
                                description: Use the Cloudflare API to manage DNS01
                                  challenge records.
                                properties:
                                  apiKeySecretRef:
                                    description: 'API key to use to authenticate with
                                      Cloudflare. Note: using an API token to authenticate
                                      is now the recommended method as it allows greater
                                      control of permissions.'
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  apiTokenSecretRef:
                                    description: API token used to authenticate with
                                      Cloudflare.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  email:
                                    description: Email of the account, only required
                                      when using API key based authentication.
                                    type: string
                                type: object
                              cnameStrategy:
                                description: CNAMEStrategy configures how the DNS01
                                  provider should handle CNAME records when found
                                  in DNS zones.
                                enum:
                                - None
                                - Follow
                                type: string
                              digitalocean:
                                description: Use the DigitalOcean DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  tokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - tokenSecretRef
                                type: object
                              rfc2136:
                                description: Use RFC2136 ("Dynamic Updates in the
                                  Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/)
                                  to manage DNS01 challenge records.
                                properties:
                                  nameserver:
                                    description: The IP address or hostname of an
                                      authoritative DNS server supporting RFC2136
                                      in the form host:port. If the host is an IPv6
                                      address it must be enclosed in square brackets
                                      (e.g [2001:db8::1])┬á; port is optional. This
                                      field is required.
                                    type: string
                                  tsigAlgorithm:
                                    description: 'The TSIG Algorithm configured in
                                      the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef``
                                      and ``tsigKeyName`` are defined. Supported values
                                      are (case-insensitive): ``HMACMD5`` (default),
                                      ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.'
                                    type: string
                                  tsigKeyName:
                                    description: The TSIG Key name configured in the
                                      DNS. If ``tsigSecretSecretRef`` is defined,
                                      this field is required.
                                    type: string
                                  tsigSecretSecretRef:
                                    description: The name of the secret containing
                                      the TSIG value. If ``tsigKeyName`` is defined,
                                      this field is required.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - nameserver
                                type: object
                              route53:
                                description: Use the AWS Route53 API to manage DNS01
                                  challenge records.
                                properties:
                                  accessKeyID:
                                    description: 'The AccessKeyID is used for authentication.
                                      If not set we fall-back to using env vars, shared
                                      credentials file or AWS Instance metadata see:
                                      https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                    type: string
                                  hostedZoneID:
                                    description: If set, the provider will manage
                                      only this zone in Route53 and will not do an
                                      lookup using the route53:ListHostedZonesByName
                                      api call.
                                    type: string
                                  region:
                                    description: Always set the region when using
                                      AccessKeyID and SecretAccessKey
                                    type: string
                                  role:
                                    description: Role is a Role ARN which the Route53
                                      provider will assume using either the explicit
                                      credentials AccessKeyID/SecretAccessKey or the
                                      inferred credentials from environment variables,
                                      shared credentials file or AWS Instance metadata
                                    type: string
                                  secretAccessKeySecretRef:
                                    description: The SecretAccessKey is used for authentication.
                                      If not set we fall-back to using env vars, shared
                                      credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - region
                                type: object
                              webhook:
                                description: Configure an external webhook based DNS01
                                  challenge solver to manage DNS01 challenge records.
                                properties:
                                  config:
                                    description: Additional configuration that should
                                      be passed to the webhook apiserver when challenges
                                      are processed. This can contain arbitrary JSON
                                      data. Secret values should not be specified
                                      in this stanza. If secret values are needed
                                      (e.g. credentials for a DNS service), you should
                                      use a SecretKeySelector to reference a Secret
                                      resource. For details on the schema of this
                                      field, consult the webhook provider implementation's
                                      documentation.
                                    x-kubernetes-preserve-unknown-fields: true
                                  groupName:
                                    description: The API group name that should be
                                      used when POSTing ChallengePayload resources
                                      to the webhook apiserver. This should be the
                                      same as the GroupName specified in the webhook
                                      provider implementation.
                                    type: string
                                  solverName:
                                    description: The name of the solver to use, as
                                      defined in the webhook provider implementation.
                                      This will typically be the name of the provider,
                                      e.g. 'cloudflare'.
                                    type: string
                                required:
                                - groupName
                                - solverName
                                type: object
                            type: object
                          http01:
                            description: Configures cert-manager to attempt to complete
                              authorizations by performing the HTTP01 challenge flow.
                              It is not possible to obtain certificates for wildcard
                              domain names (e.g. `*.example.com`) using the HTTP01
                              challenge mechanism.
                            properties:
                              gatewayHTTPRoute:
                                description: The Gateway API is a sig-network community
                                  API that models service networking in Kubernetes
                                  (https://gateway-api.sigs.k8s.io/). The Gateway
                                  solver will create HTTPRoutes with the specified
                                  labels in the same namespace as the challenge. This
                                  solver is experimental, and fields / behaviour may
                                  change in the future.
                                properties:
                                  labels:
                                    additionalProperties:
                                      type: string
                                    description: The labels that cert-manager will
                                      use when creating the temporary HTTPRoute needed
                                      for solving the HTTP-01 challenge. These labels
                                      must match the label selector of at least one
                                      Gateway.
                                    type: object
                                  serviceType:
                                    description: Optional service type for Kubernetes
                                      solver service. Supported values are NodePort
                                      or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                              ingress:
                                description: The ingress based HTTP01 challenge solver
                                  will solve challenges by creating or modifying Ingress
                                  resources in order to route requests for '/.well-known/acme-challenge/XYZ'
                                  to 'challenge solver' pods that are provisioned
                                  by cert-manager for each Challenge to be completed.
                                properties:
                                  class:
                                    description: The ingress class to use when creating
                                      Ingress resources to solve ACME challenges that
                                      use this challenge solver. Only one of 'class'
                                      or 'name' may be specified.
                                    type: string
                                  ingressTemplate:
                                    description: Optional ingress template used to
                                      configure the ACME challenge solver ingress
                                      used for HTTP01 challenges.
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the
                                          ingress used to solve HTTP01 challenges.
                                          Only the 'labels' and 'annotations' fields
                                          may be set. If labels or annotations overlap
                                          with in-built values, the values here will
                                          override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be
                                              added to the created ACME HTTP01 solver
                                              ingress.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added
                                              to the created ACME HTTP01 solver ingress.
                                            type: object
                                        type: object
                                    type: object
                                  name:
                                    description: The name of the ingress resource
                                      that should have ACME challenge solving routes
                                      inserted into it in order to solve HTTP01 challenges.
                                      This is typically used in conjunction with ingress
                                      controllers like ingress-gce, which maintains
                                      a 1:1 mapping between external IPs and ingress
                                      resources.
                                    type: string
                                  podTemplate:
                                    description: Optional pod template used to configure
                                      the ACME challenge solver pods used for HTTP01
                                      challenges
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the
                                          pod used to solve HTTP01 challenges. Only
                                          the 'labels' and 'annotations' fields may
                                          be set. If labels or annotations overlap
                                          with in-built values, the values here will
                                          override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be
                                              added to the create ACME HTTP01 solver
                                              pods.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added
                                              to the created ACME HTTP01 solver pods.
                                            type: object
                                        type: object
                                      spec:
                                        description: PodSpec defines overrides for
                                          the HTTP01 challenge solver pod. Only the
                                          'priorityClassName', 'nodeSelector', 'affinity',
                                          'serviceAccountName' and 'tolerations' fields
                                          are supported currently. All other fields
                                          will be ignored.
                                        properties:
                                          affinity:
                                            description: If specified, the pod's scheduling
                                              constraints
                                            properties:
                                              nodeAffinity:
                                                description: Describes node affinity
                                                  scheduling rules for the pod.
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      matches the corresponding matchExpressions;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: An empty preferred
                                                        scheduling term matches all
                                                        objects with implicit weight
                                                        0 (i.e. it's a no-op). A null
                                                        preferred scheduling term
                                                        matches no objects (i.e. is
                                                        also a no-op).
                                                      properties:
                                                        preference:
                                                          description: A node selector
                                                            term, associated with
                                                            the corresponding weight.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                        weight:
                                                          description: Weight associated
                                                            with matching the corresponding
                                                            nodeSelectorTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - preference
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to an update), the system
                                                      may or may not try to eventually
                                                      evict the pod from its node.
                                                    properties:
                                                      nodeSelectorTerms:
                                                        description: Required. A list
                                                          of node selector terms.
                                                          The terms are ORed.
                                                        items:
                                                          description: A null or empty
                                                            node selector term matches
                                                            no objects. The requirements
                                                            of them are ANDed. The
                                                            TopologySelectorTerm type
                                                            implements a subset of
                                                            the NodeSelectorTerm.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                        type: array
                                                    required:
                                                    - nodeSelectorTerms
                                                    type: object
                                                type: object
                                              podAffinity:
                                                description: Describes pod affinity
                                                  scheduling rules (e.g. co-locate
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      has pods which matches the corresponding
                                                      podAffinityTerm; the node(s)
                                                      with the highest sum are the
                                                      most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaceSelector:
                                                              description: A label
                                                                query over the set
                                                                of namespaces that
                                                                the term applies to.
                                                                The term is applied
                                                                to the union of the
                                                                namespaces selected
                                                                by this field and
                                                                the ones listed in
                                                                the namespaces field.
                                                                null selector and
                                                                null or empty namespaces
                                                                list means "this pod's
                                                                namespace". An empty
                                                                selector ({}) matches
                                                                all namespaces. This
                                                                field is alpha-level
                                                                and is only honored
                                                                when PodAffinityNamespaceSelector
                                                                feature is enabled.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaces:
                                                              description: namespaces
                                                                specifies a static
                                                                list of namespace
                                                                names that the term
                                                                applies to. The term
                                                                is applied to the
                                                                union of the namespaces
                                                                listed in this field
                                                                and the ones selected
                                                                by namespaceSelector.
                                                                null or empty namespaces
                                                                list and null namespaceSelector
                                                                means "this pod's
                                                                namespace"
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaceSelector:
                                                          description: A label query
                                                            over the set of namespaces
                                                            that the term applies
                                                            to. The term is applied
                                                            to the union of the namespaces
                                                            selected by this field
                                                            and the ones listed in
                                                            the namespaces field.
                                                            null selector and null
                                                            or empty namespaces list
                                                            means "this pod's namespace".
                                                            An empty selector ({})
                                                            matches all namespaces.
                                                            This field is alpha-level
                                                            and is only honored when
                                                            PodAffinityNamespaceSelector
                                                            feature is enabled.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces
                                                            specifies a static list
                                                            of namespace names that
                                                            the term applies to. The
                                                            term is applied to the
                                                            union of the namespaces
                                                            listed in this field and
                                                            the ones selected by namespaceSelector.
                                                            null or empty namespaces
                                                            list and null namespaceSelector
                                                            means "this pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                              podAntiAffinity:
                                                description: Describes pod anti-affinity
                                                  scheduling rules (e.g. avoid putting
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the anti-affinity
                                                      expressions specified by this
                                                      field, but it may choose a node
                                                      that violates one or more of
                                                      the expressions. The node that
                                                      is most preferred is the one
                                                      with the greatest sum of weights,
                                                      i.e. for each node that meets
                                                      all of the scheduling requirements
                                                      (resource request, requiredDuringScheduling
                                                      anti-affinity expressions, etc.),
                                                      compute a sum by iterating through
                                                      the elements of this field and
                                                      adding "weight" to the sum if
                                                      the node has pods which matches
                                                      the corresponding podAffinityTerm;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaceSelector:
                                                              description: A label
                                                                query over the set
                                                                of namespaces that
                                                                the term applies to.
                                                                The term is applied
                                                                to the union of the
                                                                namespaces selected
                                                                by this field and
                                                                the ones listed in
                                                                the namespaces field.
                                                                null selector and
                                                                null or empty namespaces
                                                                list means "this pod's
                                                                namespace". An empty
                                                                selector ({}) matches
                                                                all namespaces. This
                                                                field is alpha-level
                                                                and is only honored
                                                                when PodAffinityNamespaceSelector
                                                                feature is enabled.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaces:
                                                              description: namespaces
                                                                specifies a static
                                                                list of namespace
                                                                names that the term
                                                                applies to. The term
                                                                is applied to the
                                                                union of the namespaces
                                                                listed in this field
                                                                and the ones selected
                                                                by namespaceSelector.
                                                                null or empty namespaces
                                                                list and null namespaceSelector
                                                                means "this pod's
                                                                namespace"
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the anti-affinity
                                                      requirements specified by this
                                                      field are not met at scheduling
                                                      time, the pod will not be scheduled
                                                      onto the node. If the anti-affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaceSelector:
                                                          description: A label query
                                                            over the set of namespaces
                                                            that the term applies
                                                            to. The term is applied
                                                            to the union of the namespaces
                                                            selected by this field
                                                            and the ones listed in
                                                            the namespaces field.
                                                            null selector and null
                                                            or empty namespaces list
                                                            means "this pod's namespace".
                                                            An empty selector ({})
                                                            matches all namespaces.
                                                            This field is alpha-level
                                                            and is only honored when
                                                            PodAffinityNamespaceSelector
                                                            feature is enabled.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces
                                                            specifies a static list
                                                            of namespace names that
                                                            the term applies to. The
                                                            term is applied to the
                                                            union of the namespaces
                                                            listed in this field and
                                                            the ones selected by namespaceSelector.
                                                            null or empty namespaces
                                                            list and null namespaceSelector
                                                            means "this pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                            type: object
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: 'NodeSelector is a selector
                                              which must be true for the pod to fit
                                              on a node. Selector which must match
                                              a node''s labels for the pod to be scheduled
                                              on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                            type: object
                                          priorityClassName:
                                            description: If specified, the pod's priorityClassName.
                                            type: string
                                          serviceAccountName:
                                            description: If specified, the pod's service
                                              account
                                            type: string
                                          tolerations:
                                            description: If specified, the pod's tolerations.
                                            items:
                                              description: The pod this Toleration
                                                is attached to tolerates any taint
                                                that matches the triple <key,value,effect>
                                                using the matching operator <operator>.
                                              properties:
                                                effect:
                                                  description: Effect indicates the
                                                    taint effect to match. Empty means
                                                    match all taint effects. When
                                                    specified, allowed values are
                                                    NoSchedule, PreferNoSchedule and
                                                    NoExecute.
                                                  type: string
                                                key:
                                                  description: Key is the taint key
                                                    that the toleration applies to.
                                                    Empty means match all taint keys.
                                                    If the key is empty, operator
                                                    must be Exists; this combination
                                                    means to match all values and
                                                    all keys.
                                                  type: string
                                                operator:
                                                  description: Operator represents
                                                    a key's relationship to the value.
                                                    Valid operators are Exists and
                                                    Equal. Defaults to Equal. Exists
                                                    is equivalent to wildcard for
                                                    value, so that a pod can tolerate
                                                    all taints of a particular category.
                                                  type: string
                                                tolerationSeconds:
                                                  description: TolerationSeconds represents
                                                    the period of time the toleration
                                                    (which must be of effect NoExecute,
                                                    otherwise this field is ignored)
                                                    tolerates the taint. By default,
                                                    it is not set, which means tolerate
                                                    the taint forever (do not evict).
                                                    Zero and negative values will
                                                    be treated as 0 (evict immediately)
                                                    by the system.
                                                  format: int64
                                                  type: integer
                                                value:
                                                  description: Value is the taint
                                                    value the toleration matches to.
                                                    If the operator is Exists, the
                                                    value should be empty, otherwise
                                                    just a regular string.
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                    type: object
                                  serviceType:
                                    description: Optional service type for Kubernetes
                                      solver service. Supported values are NodePort
                                      or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                            type: object
                          selector:
                            description: Selector selects a set of DNSNames on the
                              Certificate resource that should be solved using this
                              challenge solver. If not specified, the solver will
                              be treated as the 'default' solver with the lowest priority,
                              i.e. if any other solver has a more specific match,
                              it will be used instead.
                            properties:
                              dnsNames:
                                description: List of DNSNames that this solver will
                                  be used to solve. If specified and a match is found,
                                  a dnsNames selector will take precedence over a
                                  dnsZones selector. If multiple solvers match with
                                  the same dnsNames value, the solver with the most
                                  matching labels in matchLabels will be selected.
                                  If neither has more matches, the solver defined
                                  earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              dnsZones:
                                description: List of DNSZones that this solver will
                                  be used to solve. The most specific DNS zone match
                                  specified here will take precedence over other DNS
                                  zone matches, so a solver specifying sys.example.com
                                  will be selected over one specifying example.com
                                  for the domain www.sys.example.com. If multiple
                                  solvers match with the same dnsZones value, the
                                  solver with the most matching labels in matchLabels
                                  will be selected. If neither has more matches, the
                                  solver defined earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: A label selector that is used to refine
                                  the set of certificate's that this challenge solver
                                  will apply to.
                                type: object
                            type: object
                        type: object
                      type: array
                  required:
                  - privateKeySecretRef
                  - server
                  type: object
                ca:
                  description: CA configures this issuer to sign certificates using
                    a signing CA keypair stored in a Secret resource. This is used
                    to build internal PKIs that are managed by cert-manager.
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate
                        extension which identifies the location of the CRL from which
                        the revocation of this certificate can be checked. If not
                        set, certificates will be issued without distribution points
                        set.
                      items:
                        type: string
                      type: array
                    ocspServers:
                      description: The OCSP server list is an X.509 v3 extension that
                        defines a list of URLs of OCSP responders. The OCSP responders
                        can be queried for the revocation status of an issued certificate.
                        If not set, the certificate will be issued with no OCSP servers
                        set. For example, an OCSP server URL could be "http://ocsp.int-x3.letsencrypt.org".
                      items:
                        type: string
                      type: array
                    secretName:
                      description: SecretName is the name of the secret used to sign
                        Certificates issued by this Issuer.
                      type: string
                  required:
                  - secretName
                  type: object
                selfSigned:
                  description: SelfSigned configures this issuer to 'self sign' certificates
                    using the private key used to create the CertificateRequest object.
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate
                        extension which identifies the location of the CRL from which
                        the revocation of this certificate can be checked. If not
                        set certificate will be issued without CDP. Values are strings.
                      items:
                        type: string
                      type: array
                  type: object
                vault:
                  description: Vault configures this issuer to sign certificates using
                    a HashiCorp Vault PKI backend.
                  properties:
                    auth:
                      description: Auth configures how cert-manager authenticates
                        with the Vault server.
                      properties:
                        appRole:
                          description: AppRole authenticates with Vault using the
                            App Role auth mechanism, with the role and secret stored
                            in a Kubernetes Secret resource.
                          properties:
                            path:
                              description: 'Path where the App Role authentication
                                backend is mounted in Vault, e.g: "approle"'
                              type: string
                            roleId:
                              description: RoleID configured in the App Role authentication
                                backend when setting up the authentication backend
                                in Vault.
                              type: string
                            secretRef:
                              description: Reference to a key in a Secret that contains
                                the App Role secret used to authenticate with Vault.
                                The `key` field must be specified and denotes which
                                entry within the Secret resource is used as the app
                                role secret.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - path
                          - roleId
                          - secretRef
                          type: object
                        kubernetes:
                          description: Kubernetes authenticates with Vault by passing
                            the ServiceAccount token stored in the named Secret resource
                            to the Vault server.
                          properties:
                            mountPath:
                              description: The Vault mountPath here is the mount path
                                to use when authenticating with Vault. For example,
                                setting a value to `/v1/auth/foo`, will use the path
                                `/v1/auth/foo/login` to authenticate with Vault. If
                                unspecified, the default value "/v1/auth/kubernetes"
                                will be used.
                              type: string
                            role:
                              description: A required field containing the Vault Role
                                to assume. A Role binds a Kubernetes ServiceAccount
                                with a set of Vault policies.
                              type: string
                            secretRef:
                              description: The required Secret field containing a
                                Kubernetes ServiceAccount JWT used for authenticating
                                with Vault. Use of 'ambient credentials' is not supported.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - role
                          - secretRef
                          type: object
                        tokenSecretRef:
                          description: TokenSecretRef authenticates with Vault by
                            presenting a token.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      type: object
                    caBundle:
                      description: PEM-encoded CA bundle (base64-encoded) used to
                        validate Vault server certificate. Only used if the Server
                        URL is using HTTPS protocol. This parameter is ignored for
                        plain HTTP protocol connection. If not set the system root
                        certificates are used to validate the TLS connection.
                      format: byte
                      type: string
                    namespace:
                      description: 'Name of the vault namespace. Namespaces is a set
                        of features within Vault Enterprise that allows Vault environments
                        to support Secure Multi-tenancy. e.g: "ns1" More about namespaces
                        can be found here https://www.vaultproject.io/docs/enterprise/namespaces'
                      type: string
                    path:
                      description: 'Path is the mount path of the Vault PKI backend''s
                        `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".'
                      type: string
                    server:
                      description: 'Server is the connection address for the Vault
                        server, e.g: "https://vault.example.com:8200".'
                      type: string
                  required:
                  - auth
                  - path
                  - server
                  type: object
                venafi:
                  description: Venafi configures this issuer to sign certificates
                    using a Venafi TPP or Venafi Cloud policy zone.
                  properties:
                    cloud:
                      description: Cloud specifies the Venafi cloud configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        apiTokenSecretRef:
                          description: APITokenSecretRef is a secret key selector
                            for the Venafi Cloud API token.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: URL is the base URL for Venafi Cloud. Defaults
                            to "https://api.venafi.cloud/v1".
                          type: string
                      required:
                      - apiTokenSecretRef
                      type: object
                    tpp:
                      description: TPP specifies Trust Protection Platform configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        caBundle:
                          description: CABundle is a PEM encoded TLS certificate to
                            use to verify connections to the TPP instance. If specified,
                            system roots will not be used and the issuing CA for the
                            TPP instance must be verifiable using the provided root.
                            If not specified, the connection will be verified using
                            the cert-manager system root certificates.
                          format: byte
                          type: string
                        credentialsRef:
                          description: CredentialsRef is a reference to a Secret containing
                            the username and password for the TPP server. The secret
                            must contain two keys, 'username' and 'password'.
                          properties:
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: 'URL is the base URL for the vedsdk endpoint
                            of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".'
                          type: string
                      required:
                      - credentialsRef
                      - url
                      type: object
                    zone:
                      description: Zone is the Venafi Policy Zone to use for this
                        issuer. All requests made to the Venafi platform will be restricted
                        by the named zone policy. This field is required.
                      type: string
                  required:
                  - zone
                  type: object
              type: object
            status:
              description: Status of the ClusterIssuer. This is set and managed automatically.
              properties:
                acme:
                  description: ACME specific status options. This field should only
                    be set if the Issuer is configured to use an ACME server to issue
                    certificates.
                  properties:
                    lastRegisteredEmail:
                      description: LastRegisteredEmail is the email associated with
                        the latest registered ACME account, in order to track changes
                        made to registered account associated with the  Issuer
                      type: string
                    uri:
                      description: URI is the unique account identifier, which can
                        also be used to retrieve account details from the CA
                      type: string
                  type: object
                conditions:
                  description: List of status conditions to indicate the status of
                    a CertificateRequest. Known condition types are `Ready`.
                  items:
                    description: IssuerCondition contains condition information for
                      an Issuer.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      observedGeneration:
                        description: If set, this represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.condition[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the Issuer.
                        format: int64
                        type: integer
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`,
                          `Unknown`).
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Ready`).
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
              type: object
          required:
          - spec
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: A ClusterIssuer represents a certificate issuing authority
            which can be referenced as part of `issuerRef` fields. It is similar to
            an Issuer, however it is cluster-scoped and therefore can be referenced
            by resources that exist in *any* namespace, not just the same namespace
            as the referent.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the ClusterIssuer resource.
              properties:
                acme:
                  description: ACME configures this issuer to communicate with a RFC8555
                    (ACME) server to obtain signed x509 certificates.
                  properties:
                    disableAccountKeyGeneration:
                      description: Enables or disables generating a new ACME account
                        key. If true, the Issuer resource will *not* request a new
                        account but will expect the account key to be supplied via
                        an existing secret. If false, the cert-manager system will
                        generate a new ACME account key for the Issuer. Defaults to
                        false.
                      type: boolean
                    email:
                      description: Email is the email address to be associated with
                        the ACME account. This field is optional, but it is strongly
                        recommended to be set. It will be used to contact you in case
                        of issues with your account or certificates, including expiry
                        notification emails. This field may be updated after the account
                        is initially registered.
                      type: string
                    enableDurationFeature:
                      description: Enables requesting a Not After date on certificates
                        that matches the duration of the certificate. This is not
                        supported by all ACME servers like Let's Encrypt. If set to
                        true when the ACME server does not support it it will create
                        an error on the Order. Defaults to false.
                      type: boolean
                    externalAccountBinding:
                      description: ExternalAccountBinding is a reference to a CA external
                        account of the ACME server. If set, upon registration cert-manager
                        will attempt to associate the given external account credentials
                        with the registered ACME account.
                      properties:
                        keyAlgorithm:
                          description: 'Deprecated: keyAlgorithm field exists for
                            historical compatibility reasons and should not be used.
                            The algorithm is now hardcoded to HS256 in golang/x/crypto/acme.'
                          enum:
                          - HS256
                          - HS384
                          - HS512
                          type: string
                        keyID:
                          description: keyID is the ID of the CA key that the External
                            Account is bound to.
                          type: string
                        keySecretRef:
                          description: keySecretRef is a Secret Key Selector referencing
                            a data item in a Kubernetes Secret which holds the symmetric
                            MAC key of the External Account Binding. The `key` is
                            the index string that is paired with the key data in the
                            Secret and should not be confused with the key data itself,
                            or indeed with the External Account Binding keyID above.
                            The secret key stored in the Secret **must** be un-padded,
                            base64 URL encoded data.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - keyID
                      - keySecretRef
                      type: object
                    preferredChain:
                      description: 'PreferredChain is the chain to use if the ACME
                        server outputs multiple. PreferredChain is no guarantee that
                        this one gets delivered by the ACME endpoint. For example,
                        for Let''s Encrypt''s DST crosssign you would use: "DST Root
                        CA X3" or "ISRG Root X1" for the newer Let''s Encrypt root
                        CA. This value picks the first certificate bundle in the ACME
                        alternative chains that has a certificate with this value
                        as its issuer''s CN'
                      maxLength: 64
                      type: string
                    privateKeySecretRef:
                      description: PrivateKey is the name of a Kubernetes Secret resource
                        that will be used to store the automatically generated ACME
                        account private key. Optionally, a `key` may be specified
                        to select a specific entry within the named Secret resource.
                        If `key` is not specified, a default of `tls.key` will be
                        used.
                      properties:
                        key:
                          description: The key of the entry in the Secret resource's
                            `data` field to be used. Some instances of this field
                            may be defaulted, in others it may be required.
                          type: string
                        name:
                          description: 'Name of the resource being referred to. More
                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                      required:
                      - name
                      type: object
                    server:
                      description: 'Server is the URL used to access the ACME server''s
                        ''directory'' endpoint. For example, for Let''s Encrypt''s
                        staging endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory".
                        Only ACME v2 endpoints (i.e. RFC 8555) are supported.'
                      type: string
                    skipTLSVerify:
                      description: Enables or disables validation of the ACME server
                        TLS certificate. If true, requests to the ACME server will
                        not have their TLS certificate validated (i.e. insecure connections
                        will be allowed). Only enable this option in development environments.
                        The cert-manager system installed roots will be used to verify
                        connections to the ACME server if this is false. Defaults
                        to false.
                      type: boolean
                    solvers:
                      description: 'Solvers is a list of challenge solvers that will
                        be used to solve ACME challenges for the matching domains.
                        Solver configurations must be provided in order to obtain
                        certificates from an ACME server. For more information, see:
                        https://cert-manager.io/docs/configuration/acme/'
                      items:
                        description: An ACMEChallengeSolver describes how to solve
                          ACME challenges for the issuer it is part of. A selector
                          may be provided to use different solving strategies for
                          different DNS names. Only one of HTTP01 or DNS01 must be
                          provided.
                        properties:
                          dns01:
                            description: Configures cert-manager to attempt to complete
                              authorizations by performing the DNS01 challenge flow.
                            properties:
                              acmeDNS:
                                description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)
                                  API to manage DNS01 challenge records.
                                properties:
                                  accountSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  host:
                                    type: string
                                required:
                                - accountSecretRef
                                - host
                                type: object
                              akamai:
                                description: Use the Akamai DNS zone management API
                                  to manage DNS01 challenge records.
                                properties:
                                  accessTokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientSecretSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientTokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  serviceConsumerDomain:
                                    type: string
                                required:
                                - accessTokenSecretRef
                                - clientSecretSecretRef
                                - clientTokenSecretRef
                                - serviceConsumerDomain
                                type: object
                              azureDNS:
                                description: Use the Microsoft Azure DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  clientID:
                                    description: if both this and ClientSecret are
                                      left unset MSI will be used
                                    type: string
                                  clientSecretSecretRef:
                                    description: if both this and ClientID are left
                                      unset MSI will be used
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  environment:
                                    enum:
                                    - AzurePublicCloud
                                    - AzureChinaCloud
                                    - AzureGermanCloud
                                    - AzureUSGovernmentCloud
                                    type: string
                                  hostedZoneName:
                                    type: string
                                  resourceGroupName:
                                    type: string
                                  subscriptionID:
                                    type: string
                                  tenantID:
                                    description: when specifying ClientID and ClientSecret
                                      then this field is also needed
                                    type: string
                                required:
                                - resourceGroupName
                                - subscriptionID
                                type: object
                              cloudDNS:
                                description: Use the Google Cloud DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  hostedZoneName:
                                    description: HostedZoneName is an optional field
                                      that tells cert-manager in which Cloud DNS zone
                                      the challenge record has to be created. If left
                                      empty cert-manager will automatically choose
                                      a zone.
                                    type: string
                                  project:
                                    type: string
                                  serviceAccountSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - project
                                type: object
                              cloudflare:
                                description: Use the Cloudflare API to manage DNS01
                                  challenge records.
                                properties:
                                  apiKeySecretRef:
                                    description: 'API key to use to authenticate with
                                      Cloudflare. Note: using an API token to authenticate
                                      is now the recommended method as it allows greater
                                      control of permissions.'
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  apiTokenSecretRef:
                                    description: API token used to authenticate with
                                      Cloudflare.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  email:
                                    description: Email of the account, only required
                                      when using API key based authentication.
                                    type: string
                                type: object
                              cnameStrategy:
                                description: CNAMEStrategy configures how the DNS01
                                  provider should handle CNAME records when found
                                  in DNS zones.
                                enum:
                                - None
                                - Follow
                                type: string
                              digitalocean:
                                description: Use the DigitalOcean DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  tokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - tokenSecretRef
                                type: object
                              rfc2136:
                                description: Use RFC2136 ("Dynamic Updates in the
                                  Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/)
                                  to manage DNS01 challenge records.
                                properties:
                                  nameserver:
                                    description: The IP address or hostname of an
                                      authoritative DNS server supporting RFC2136
                                      in the form host:port. If the host is an IPv6
                                      address it must be enclosed in square brackets
                                      (e.g [2001:db8::1])┬á; port is optional. This
                                      field is required.
                                    type: string
                                  tsigAlgorithm:
                                    description: 'The TSIG Algorithm configured in
                                      the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef``
                                      and ``tsigKeyName`` are defined. Supported values
                                      are (case-insensitive): ``HMACMD5`` (default),
                                      ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.'
                                    type: string
                                  tsigKeyName:
                                    description: The TSIG Key name configured in the
                                      DNS. If ``tsigSecretSecretRef`` is defined,
                                      this field is required.
                                    type: string
                                  tsigSecretSecretRef:
                                    description: The name of the secret containing
                                      the TSIG value. If ``tsigKeyName`` is defined,
                                      this field is required.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - nameserver
                                type: object
                              route53:
                                description: Use the AWS Route53 API to manage DNS01
                                  challenge records.
                                properties:
                                  accessKeyID:
                                    description: 'The AccessKeyID is used for authentication.
                                      If not set we fall-back to using env vars, shared
                                      credentials file or AWS Instance metadata see:
                                      https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                    type: string
                                  hostedZoneID:
                                    description: If set, the provider will manage
                                      only this zone in Route53 and will not do an
                                      lookup using the route53:ListHostedZonesByName
                                      api call.
                                    type: string
                                  region:
                                    description: Always set the region when using
                                      AccessKeyID and SecretAccessKey
                                    type: string
                                  role:
                                    description: Role is a Role ARN which the Route53
                                      provider will assume using either the explicit
                                      credentials AccessKeyID/SecretAccessKey or the
                                      inferred credentials from environment variables,
                                      shared credentials file or AWS Instance metadata
                                    type: string
                                  secretAccessKeySecretRef:
                                    description: The SecretAccessKey is used for authentication.
                                      If not set we fall-back to using env vars, shared
                                      credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - region
                                type: object
                              webhook:
                                description: Configure an external webhook based DNS01
                                  challenge solver to manage DNS01 challenge records.
                                properties:
                                  config:
                                    description: Additional configuration that should
                                      be passed to the webhook apiserver when challenges
                                      are processed. This can contain arbitrary JSON
                                      data. Secret values should not be specified
                                      in this stanza. If secret values are needed
                                      (e.g. credentials for a DNS service), you should
                                      use a SecretKeySelector to reference a Secret
                                      resource. For details on the schema of this
                                      field, consult the webhook provider implementation's
                                      documentation.
                                    x-kubernetes-preserve-unknown-fields: true
                                  groupName:
                                    description: The API group name that should be
                                      used when POSTing ChallengePayload resources
                                      to the webhook apiserver. This should be the
                                      same as the GroupName specified in the webhook
                                      provider implementation.
                                    type: string
                                  solverName:
                                    description: The name of the solver to use, as
                                      defined in the webhook provider implementation.
                                      This will typically be the name of the provider,
                                      e.g. 'cloudflare'.
                                    type: string
                                required:
                                - groupName
                                - solverName
                                type: object
                            type: object
                          http01:
                            description: Configures cert-manager to attempt to complete
                              authorizations by performing the HTTP01 challenge flow.
                              It is not possible to obtain certificates for wildcard
                              domain names (e.g. `*.example.com`) using the HTTP01
                              challenge mechanism.
                            properties:
                              gatewayHTTPRoute:
                                description: The Gateway API is a sig-network community
                                  API that models service networking in Kubernetes
                                  (https://gateway-api.sigs.k8s.io/). The Gateway
                                  solver will create HTTPRoutes with the specified
                                  labels in the same namespace as the challenge. This
                                  solver is experimental, and fields / behaviour may
                                  change in the future.
                                properties:
                                  labels:
                                    additionalProperties:
                                      type: string
                                    description: The labels that cert-manager will
                                      use when creating the temporary HTTPRoute needed
                                      for solving the HTTP-01 challenge. These labels
                                      must match the label selector of at least one
                                      Gateway.
                                    type: object
                                  serviceType:
                                    description: Optional service type for Kubernetes
                                      solver service. Supported values are NodePort
                                      or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                              ingress:
                                description: The ingress based HTTP01 challenge solver
                                  will solve challenges by creating or modifying Ingress
                                  resources in order to route requests for '/.well-known/acme-challenge/XYZ'
                                  to 'challenge solver' pods that are provisioned
                                  by cert-manager for each Challenge to be completed.
                                properties:
                                  class:
                                    description: The ingress class to use when creating
                                      Ingress resources to solve ACME challenges that
                                      use this challenge solver. Only one of 'class'
                                      or 'name' may be specified.
                                    type: string
                                  ingressTemplate:
                                    description: Optional ingress template used to
                                      configure the ACME challenge solver ingress
                                      used for HTTP01 challenges.
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the
                                          ingress used to solve HTTP01 challenges.
                                          Only the 'labels' and 'annotations' fields
                                          may be set. If labels or annotations overlap
                                          with in-built values, the values here will
                                          override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be
                                              added to the created ACME HTTP01 solver
                                              ingress.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added
                                              to the created ACME HTTP01 solver ingress.
                                            type: object
                                        type: object
                                    type: object
                                  name:
                                    description: The name of the ingress resource
                                      that should have ACME challenge solving routes
                                      inserted into it in order to solve HTTP01 challenges.
                                      This is typically used in conjunction with ingress
                                      controllers like ingress-gce, which maintains
                                      a 1:1 mapping between external IPs and ingress
                                      resources.
                                    type: string
                                  podTemplate:
                                    description: Optional pod template used to configure
                                      the ACME challenge solver pods used for HTTP01
                                      challenges.
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the
                                          pod used to solve HTTP01 challenges. Only
                                          the 'labels' and 'annotations' fields may
                                          be set. If labels or annotations overlap
                                          with in-built values, the values here will
                                          override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be
                                              added to the create ACME HTTP01 solver
                                              pods.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added
                                              to the created ACME HTTP01 solver pods.
                                            type: object
                                        type: object
                                      spec:
                                        description: PodSpec defines overrides for
                                          the HTTP01 challenge solver pod. Only the
                                          'priorityClassName', 'nodeSelector', 'affinity',
                                          'serviceAccountName' and 'tolerations' fields
                                          are supported currently. All other fields
                                          will be ignored.
                                        properties:
                                          affinity:
                                            description: If specified, the pod's scheduling
                                              constraints
                                            properties:
                                              nodeAffinity:
                                                description: Describes node affinity
                                                  scheduling rules for the pod.
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      matches the corresponding matchExpressions;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: An empty preferred
                                                        scheduling term matches all
                                                        objects with implicit weight
                                                        0 (i.e. it's a no-op). A null
                                                        preferred scheduling term
                                                        matches no objects (i.e. is
                                                        also a no-op).
                                                      properties:
                                                        preference:
                                                          description: A node selector
                                                            term, associated with
                                                            the corresponding weight.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                        weight:
                                                          description: Weight associated
                                                            with matching the corresponding
                                                            nodeSelectorTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - preference
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to an update), the system
                                                      may or may not try to eventually
                                                      evict the pod from its node.
                                                    properties:
                                                      nodeSelectorTerms:
                                                        description: Required. A list
                                                          of node selector terms.
                                                          The terms are ORed.
                                                        items:
                                                          description: A null or empty
                                                            node selector term matches
                                                            no objects. The requirements
                                                            of them are ANDed. The
                                                            TopologySelectorTerm type
                                                            implements a subset of
                                                            the NodeSelectorTerm.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                        type: array
                                                    required:
                                                    - nodeSelectorTerms
                                                    type: object
                                                type: object
                                              podAffinity:
                                                description: Describes pod affinity
                                                  scheduling rules (e.g. co-locate
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      has pods which matches the corresponding
                                                      podAffinityTerm; the node(s)
                                                      with the highest sum are the
                                                      most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaceSelector:
                                                              description: A label
                                                                query over the set
                                                                of namespaces that
                                                                the term applies to.
                                                                The term is applied
                                                                to the union of the
                                                                namespaces selected
                                                                by this field and
                                                                the ones listed in
                                                                the namespaces field.
                                                                null selector and
                                                                null or empty namespaces
                                                                list means "this pod's
                                                                namespace". An empty
                                                                selector ({}) matches
                                                                all namespaces. This
                                                                field is alpha-level
                                                                and is only honored
                                                                when PodAffinityNamespaceSelector
                                                                feature is enabled.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaces:
                                                              description: namespaces
                                                                specifies a static
                                                                list of namespace
                                                                names that the term
                                                                applies to. The term
                                                                is applied to the
                                                                union of the namespaces
                                                                listed in this field
                                                                and the ones selected
                                                                by namespaceSelector.
                                                                null or empty namespaces
                                                                list and null namespaceSelector
                                                                means "this pod's
                                                                namespace"
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaceSelector:
                                                          description: A label query
                                                            over the set of namespaces
                                                            that the term applies
                                                            to. The term is applied
                                                            to the union of the namespaces
                                                            selected by this field
                                                            and the ones listed in
                                                            the namespaces field.
                                                            null selector and null
                                                            or empty namespaces list
                                                            means "this pod's namespace".
                                                            An empty selector ({})
                                                            matches all namespaces.
                                                            This field is alpha-level
                                                            and is only honored when
                                                            PodAffinityNamespaceSelector
                                                            feature is enabled.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces
                                                            specifies a static list
                                                            of namespace names that
                                                            the term applies to. The
                                                            term is applied to the
                                                            union of the namespaces
                                                            listed in this field and
                                                            the ones selected by namespaceSelector.
                                                            null or empty namespaces
                                                            list and null namespaceSelector
                                                            means "this pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                              podAntiAffinity:
                                                description: Describes pod anti-affinity
                                                  scheduling rules (e.g. avoid putting
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the anti-affinity
                                                      expressions specified by this
                                                      field, but it may choose a node
                                                      that violates one or more of
                                                      the expressions. The node that
                                                      is most preferred is the one
                                                      with the greatest sum of weights,
                                                      i.e. for each node that meets
                                                      all of the scheduling requirements
                                                      (resource request, requiredDuringScheduling
                                                      anti-affinity expressions, etc.),
                                                      compute a sum by iterating through
                                                      the elements of this field and
                                                      adding "weight" to the sum if
                                                      the node has pods which matches
                                                      the corresponding podAffinityTerm;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaceSelector:
                                                              description: A label
                                                                query over the set
                                                                of namespaces that
                                                                the term applies to.
                                                                The term is applied
                                                                to the union of the
                                                                namespaces selected
                                                                by this field and
                                                                the ones listed in
                                                                the namespaces field.
                                                                null selector and
                                                                null or empty namespaces
                                                                list means "this pod's
                                                                namespace". An empty
                                                                selector ({}) matches
                                                                all namespaces. This
                                                                field is alpha-level
                                                                and is only honored
                                                                when PodAffinityNamespaceSelector
                                                                feature is enabled.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaces:
                                                              description: namespaces
                                                                specifies a static
                                                                list of namespace
                                                                names that the term
                                                                applies to. The term
                                                                is applied to the
                                                                union of the namespaces
                                                                listed in this field
                                                                and the ones selected
                                                                by namespaceSelector.
                                                                null or empty namespaces
                                                                list and null namespaceSelector
                                                                means "this pod's
                                                                namespace"
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the anti-affinity
                                                      requirements specified by this
                                                      field are not met at scheduling
                                                      time, the pod will not be scheduled
                                                      onto the node. If the anti-affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaceSelector:
                                                          description: A label query
                                                            over the set of namespaces
                                                            that the term applies
                                                            to. The term is applied
                                                            to the union of the namespaces
                                                            selected by this field
                                                            and the ones listed in
                                                            the namespaces field.
                                                            null selector and null
                                                            or empty namespaces list
                                                            means "this pod's namespace".
                                                            An empty selector ({})
                                                            matches all namespaces.
                                                            This field is alpha-level
                                                            and is only honored when
                                                            PodAffinityNamespaceSelector
                                                            feature is enabled.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces
                                                            specifies a static list
                                                            of namespace names that
                                                            the term applies to. The
                                                            term is applied to the
                                                            union of the namespaces
                                                            listed in this field and
                                                            the ones selected by namespaceSelector.
                                                            null or empty namespaces
                                                            list and null namespaceSelector
                                                            means "this pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                            type: object
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: 'NodeSelector is a selector
                                              which must be true for the pod to fit
                                              on a node. Selector which must match
                                              a node''s labels for the pod to be scheduled
                                              on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                            type: object
                                          priorityClassName:
                                            description: If specified, the pod's priorityClassName.
                                            type: string
                                          serviceAccountName:
                                            description: If specified, the pod's service
                                              account
                                            type: string
                                          tolerations:
                                            description: If specified, the pod's tolerations.
                                            items:
                                              description: The pod this Toleration
                                                is attached to tolerates any taint
                                                that matches the triple <key,value,effect>
                                                using the matching operator <operator>.
                                              properties:
                                                effect:
                                                  description: Effect indicates the
                                                    taint effect to match. Empty means
                                                    match all taint effects. When
                                                    specified, allowed values are
                                                    NoSchedule, PreferNoSchedule and
                                                    NoExecute.
                                                  type: string
                                                key:
                                                  description: Key is the taint key
                                                    that the toleration applies to.
                                                    Empty means match all taint keys.
                                                    If the key is empty, operator
                                                    must be Exists; this combination
                                                    means to match all values and
                                                    all keys.
                                                  type: string
                                                operator:
                                                  description: Operator represents
                                                    a key's relationship to the value.
                                                    Valid operators are Exists and
                                                    Equal. Defaults to Equal. Exists
                                                    is equivalent to wildcard for
                                                    value, so that a pod can tolerate
                                                    all taints of a particular category.
                                                  type: string
                                                tolerationSeconds:
                                                  description: TolerationSeconds represents
                                                    the period of time the toleration
                                                    (which must be of effect NoExecute,
                                                    otherwise this field is ignored)
                                                    tolerates the taint. By default,
                                                    it is not set, which means tolerate
                                                    the taint forever (do not evict).
                                                    Zero and negative values will
                                                    be treated as 0 (evict immediately)
                                                    by the system.
                                                  format: int64
                                                  type: integer
                                                value:
                                                  description: Value is the taint
                                                    value the toleration matches to.
                                                    If the operator is Exists, the
                                                    value should be empty, otherwise
                                                    just a regular string.
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                    type: object
                                  serviceType:
                                    description: Optional service type for Kubernetes
                                      solver service. Supported values are NodePort
                                      or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                            type: object
                          selector:
                            description: Selector selects a set of DNSNames on the
                              Certificate resource that should be solved using this
                              challenge solver. If not specified, the solver will
                              be treated as the 'default' solver with the lowest priority,
                              i.e. if any other solver has a more specific match,
                              it will be used instead.
                            properties:
                              dnsNames:
                                description: List of DNSNames that this solver will
                                  be used to solve. If specified and a match is found,
                                  a dnsNames selector will take precedence over a
                                  dnsZones selector. If multiple solvers match with
                                  the same dnsNames value, the solver with the most
                                  matching labels in matchLabels will be selected.
                                  If neither has more matches, the solver defined
                                  earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              dnsZones:
                                description: List of DNSZones that this solver will
                                  be used to solve. The most specific DNS zone match
                                  specified here will take precedence over other DNS
                                  zone matches, so a solver specifying sys.example.com
                                  will be selected over one specifying example.com
                                  for the domain www.sys.example.com. If multiple
                                  solvers match with the same dnsZones value, the
                                  solver with the most matching labels in matchLabels
                                  will be selected. If neither has more matches, the
                                  solver defined earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: A label selector that is used to refine
                                  the set of certificate's that this challenge solver
                                  will apply to.
                                type: object
                            type: object
                        type: object
                      type: array
                  required:
                  - privateKeySecretRef
                  - server
                  type: object
                ca:
                  description: CA configures this issuer to sign certificates using
                    a signing CA keypair stored in a Secret resource. This is used
                    to build internal PKIs that are managed by cert-manager.
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate
                        extension which identifies the location of the CRL from which
                        the revocation of this certificate can be checked. If not
                        set, certificates will be issued without distribution points
                        set.
                      items:
                        type: string
                      type: array
                    ocspServers:
                      description: The OCSP server list is an X.509 v3 extension that
                        defines a list of URLs of OCSP responders. The OCSP responders
                        can be queried for the revocation status of an issued certificate.
                        If not set, the certificate will be issued with no OCSP servers
                        set. For example, an OCSP server URL could be "http://ocsp.int-x3.letsencrypt.org".
                      items:
                        type: string
                      type: array
                    secretName:
                      description: SecretName is the name of the secret used to sign
                        Certificates issued by this Issuer.
                      type: string
                  required:
                  - secretName
                  type: object
                selfSigned:
                  description: SelfSigned configures this issuer to 'self sign' certificates
                    using the private key used to create the CertificateRequest object.
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate
                        extension which identifies the location of the CRL from which
                        the revocation of this certificate can be checked. If not
                        set certificate will be issued without CDP. Values are strings.
                      items:
                        type: string
                      type: array
                  type: object
                vault:
                  description: Vault configures this issuer to sign certificates using
                    a HashiCorp Vault PKI backend.
                  properties:
                    auth:
                      description: Auth configures how cert-manager authenticates
                        with the Vault server.
                      properties:
                        appRole:
                          description: AppRole authenticates with Vault using the
                            App Role auth mechanism, with the role and secret stored
                            in a Kubernetes Secret resource.
                          properties:
                            path:
                              description: 'Path where the App Role authentication
                                backend is mounted in Vault, e.g: "approle"'
                              type: string
                            roleId:
                              description: RoleID configured in the App Role authentication
                                backend when setting up the authentication backend
                                in Vault.
                              type: string
                            secretRef:
                              description: Reference to a key in a Secret that contains
                                the App Role secret used to authenticate with Vault.
                                The `key` field must be specified and denotes which
                                entry within the Secret resource is used as the app
                                role secret.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - path
                          - roleId
                          - secretRef
                          type: object
                        kubernetes:
                          description: Kubernetes authenticates with Vault by passing
                            the ServiceAccount token stored in the named Secret resource
                            to the Vault server.
                          properties:
                            mountPath:
                              description: The Vault mountPath here is the mount path
                                to use when authenticating with Vault. For example,
                                setting a value to `/v1/auth/foo`, will use the path
                                `/v1/auth/foo/login` to authenticate with Vault. If
                                unspecified, the default value "/v1/auth/kubernetes"
                                will be used.
                              type: string
                            role:
                              description: A required field containing the Vault Role
                                to assume. A Role binds a Kubernetes ServiceAccount
                                with a set of Vault policies.
                              type: string
                            secretRef:
                              description: The required Secret field containing a
                                Kubernetes ServiceAccount JWT used for authenticating
                                with Vault. Use of 'ambient credentials' is not supported.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - role
                          - secretRef
                          type: object
                        tokenSecretRef:
                          description: TokenSecretRef authenticates with Vault by
                            presenting a token.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      type: object
                    caBundle:
                      description: PEM-encoded CA bundle (base64-encoded) used to
                        validate Vault server certificate. Only used if the Server
                        URL is using HTTPS protocol. This parameter is ignored for
                        plain HTTP protocol connection. If not set the system root
                        certificates are used to validate the TLS connection.
                      format: byte
                      type: string
                    namespace:
                      description: 'Name of the vault namespace. Namespaces is a set
                        of features within Vault Enterprise that allows Vault environments
                        to support Secure Multi-tenancy. e.g: "ns1" More about namespaces
                        can be found here https://www.vaultproject.io/docs/enterprise/namespaces'
                      type: string
                    path:
                      description: 'Path is the mount path of the Vault PKI backend''s
                        `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".'
                      type: string
                    server:
                      description: 'Server is the connection address for the Vault
                        server, e.g: "https://vault.example.com:8200".'
                      type: string
                  required:
                  - auth
                  - path
                  - server
                  type: object
                venafi:
                  description: Venafi configures this issuer to sign certificates
                    using a Venafi TPP or Venafi Cloud policy zone.
                  properties:
                    cloud:
                      description: Cloud specifies the Venafi cloud configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        apiTokenSecretRef:
                          description: APITokenSecretRef is a secret key selector
                            for the Venafi Cloud API token.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: URL is the base URL for Venafi Cloud. Defaults
                            to "https://api.venafi.cloud/v1".
                          type: string
                      required:
                      - apiTokenSecretRef
                      type: object
                    tpp:
                      description: TPP specifies Trust Protection Platform configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        caBundle:
                          description: CABundle is a PEM encoded TLS certificate to
                            use to verify connections to the TPP instance. If specified,
                            system roots will not be used and the issuing CA for the
                            TPP instance must be verifiable using the provided root.
                            If not specified, the connection will be verified using
                            the cert-manager system root certificates.
                          format: byte
                          type: string
                        credentialsRef:
                          description: CredentialsRef is a reference to a Secret containing
                            the username and password for the TPP server. The secret
                            must contain two keys, 'username' and 'password'.
                          properties:
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: 'URL is the base URL for the vedsdk endpoint
                            of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".'
                          type: string
                      required:
                      - credentialsRef
                      - url
                      type: object
                    zone:
                      description: Zone is the Venafi Policy Zone to use for this
                        issuer. All requests made to the Venafi platform will be restricted
                        by the named zone policy. This field is required.
                      type: string
                  required:
                  - zone
                  type: object
              type: object
            status:
              description: Status of the ClusterIssuer. This is set and managed automatically.
              properties:
                acme:
                  description: ACME specific status options. This field should only
                    be set if the Issuer is configured to use an ACME server to issue
                    certificates.
                  properties:
                    lastRegisteredEmail:
                      description: LastRegisteredEmail is the email associated with
                        the latest registered ACME account, in order to track changes
                        made to registered account associated with the  Issuer
                      type: string
                    uri:
                      description: URI is the unique account identifier, which can
                        also be used to retrieve account details from the CA
                      type: string
                  type: object
                conditions:
                  description: List of status conditions to indicate the status of
                    a CertificateRequest. Known condition types are `Ready`.
                  items:
                    description: IssuerCondition contains condition information for
                      an Issuer.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      observedGeneration:
                        description: If set, this represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.condition[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the Issuer.
                        format: int64
                        type: integer
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`,
                          `Unknown`).
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Ready`).
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - cert-manager
      kind: ClusterIssuer
      listKind: ClusterIssuerList
      plural: clusterissuers
      singular: clusterissuer
    conditions:
    - lastTransitionTime: "2022-04-12T18:17:07Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2022-04-12T18:17:08Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.7.0
    creationTimestamp: "2022-04-12T18:16:19Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v0.28.5
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: gitrepositories.source.toolkit.fluxcd.io
    resourceVersion: "10089203"
    uid: dec6ac76-9325-4356-bff4-ad99879f8c92
  spec:
    conversion:
      strategy: None
    group: source.toolkit.fluxcd.io
    names:
      kind: GitRepository
      listKind: GitRepositoryList
      plural: gitrepositories
      shortNames:
      - gitrepo
      singular: gitrepository
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .spec.url
        name: URL
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: GitRepository is the Schema for the gitrepositories API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: GitRepositorySpec defines the desired state of a Git repository.
              properties:
                accessFrom:
                  description: AccessFrom defines an Access Control List for allowing
                    cross-namespace references to this object.
                  properties:
                    namespaceSelectors:
                      description: NamespaceSelectors is the list of namespace selectors
                        to which this ACL applies. Items in this list are evaluated
                        using a logical OR operation.
                      items:
                        description: NamespaceSelector selects the namespaces to which
                          this ACL applies. An empty map of MatchLabels matches all
                          namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                  - namespaceSelectors
                  type: object
                gitImplementation:
                  default: go-git
                  description: Determines which git client library to use. Defaults
                    to go-git, valid values are ('go-git', 'libgit2').
                  enum:
                  - go-git
                  - libgit2
                  type: string
                ignore:
                  description: Ignore overrides the set of excluded patterns in the
                    .sourceignore format (which is the same as .gitignore). If not
                    provided, a default will be used, consult the documentation for
                    your version to find out what those are.
                  type: string
                include:
                  description: Extra git repositories to map into the repository
                  items:
                    description: GitRepositoryInclude defines a source with a from
                      and to path.
                    properties:
                      fromPath:
                        description: The path to copy contents from, defaults to the
                          root directory.
                        type: string
                      repository:
                        description: Reference to a GitRepository to include.
                        properties:
                          name:
                            description: Name of the referent.
                            type: string
                        required:
                        - name
                        type: object
                      toPath:
                        description: The path to copy contents to, defaults to the
                          name of the source ref.
                        type: string
                    required:
                    - repository
                    type: object
                  type: array
                interval:
                  description: The interval at which to check for repository updates.
                  type: string
                recurseSubmodules:
                  description: When enabled, after the clone is created, initializes
                    all submodules within, using their default settings. This option
                    is available only when using the 'go-git' GitImplementation.
                  type: boolean
                ref:
                  description: The Git reference to checkout and monitor for changes,
                    defaults to master branch.
                  properties:
                    branch:
                      description: The Git branch to checkout, defaults to master.
                      type: string
                    commit:
                      description: The Git commit SHA to checkout, if specified Tag
                        filters will be ignored.
                      type: string
                    semver:
                      description: The Git tag semver expression, takes precedence
                        over Tag.
                      type: string
                    tag:
                      description: The Git tag to checkout, takes precedence over
                        Branch.
                      type: string
                  type: object
                secretRef:
                  description: The secret name containing the Git credentials. For
                    HTTPS repositories the secret must contain username and password
                    fields. For SSH repositories the secret must contain identity,
                    identity.pub and known_hosts fields.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                  - name
                  type: object
                suspend:
                  description: This flag tells the controller to suspend the reconciliation
                    of this source.
                  type: boolean
                timeout:
                  default: 60s
                  description: The timeout for remote Git operations like cloning,
                    defaults to 60s.
                  type: string
                url:
                  description: The repository URL, can be a HTTP/S or SSH address.
                  pattern: ^(http|https|ssh)://
                  type: string
                verify:
                  description: Verify OpenPGP signature for the Git commit HEAD points
                    to.
                  properties:
                    mode:
                      description: Mode describes what git object should be verified,
                        currently ('head').
                      enum:
                      - head
                      type: string
                    secretRef:
                      description: The secret name containing the public keys of all
                        trusted Git authors.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - mode
                  type: object
              required:
              - interval
              - url
              type: object
            status:
              default:
                observedGeneration: -1
              description: GitRepositoryStatus defines the observed state of a Git
                repository.
              properties:
                artifact:
                  description: Artifact represents the output of the last successful
                    repository sync.
                  properties:
                    checksum:
                      description: Checksum is the SHA256 checksum of the artifact.
                      type: string
                    lastUpdateTime:
                      description: LastUpdateTime is the timestamp corresponding to
                        the last update of this artifact.
                      format: date-time
                      type: string
                    path:
                      description: Path is the relative file path of this artifact.
                      type: string
                    revision:
                      description: Revision is a human readable identifier traceable
                        in the origin source system. It can be a Git commit SHA, Git
                        tag, a Helm index timestamp, a Helm chart version, etc.
                      type: string
                    url:
                      description: URL is the HTTP address of this artifact.
                      type: string
                  required:
                  - path
                  - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the GitRepository.
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, type FooStatus struct{     // Represents the
                      observations of a foo's current state.     // Known .status.conditions.type
                      are: \"Available\", \"Progressing\", and \"Degraded\"     //
                      +patchMergeKey=type     // +patchStrategy=merge     // +listType=map
                      \    // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                includedArtifacts:
                  description: IncludedArtifacts represents the included artifacts
                    from the last successful repository sync.
                  items:
                    description: Artifact represents the output of a source synchronisation.
                    properties:
                      checksum:
                        description: Checksum is the SHA256 checksum of the artifact.
                        type: string
                      lastUpdateTime:
                        description: LastUpdateTime is the timestamp corresponding
                          to the last update of this artifact.
                        format: date-time
                        type: string
                      path:
                        description: Path is the relative file path of this artifact.
                        type: string
                      revision:
                        description: Revision is a human readable identifier traceable
                          in the origin source system. It can be a Git commit SHA,
                          Git tag, a Helm index timestamp, a Helm chart version, etc.
                        type: string
                      url:
                        description: URL is the HTTP address of this artifact.
                        type: string
                    required:
                    - path
                    - url
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: LastHandledReconcileAt holds the value of the most
                    recent reconcile request value, so a change of the annotation
                    value can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
                url:
                  description: URL is the download link for the artifact output of
                    the last repository sync.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .spec.url
        name: URL
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: GitRepository is the Schema for the gitrepositories API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: GitRepositorySpec specifies the required configuration
                to produce an Artifact for a Git repository.
              properties:
                accessFrom:
                  description: 'AccessFrom specifies an Access Control List for allowing
                    cross-namespace references to this object. NOTE: Not implemented,
                    provisional as of https://github.com/fluxcd/flux2/pull/2092'
                  properties:
                    namespaceSelectors:
                      description: NamespaceSelectors is the list of namespace selectors
                        to which this ACL applies. Items in this list are evaluated
                        using a logical OR operation.
                      items:
                        description: NamespaceSelector selects the namespaces to which
                          this ACL applies. An empty map of MatchLabels matches all
                          namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                  - namespaceSelectors
                  type: object
                gitImplementation:
                  default: go-git
                  description: GitImplementation specifies which Git client library
                    implementation to use. Defaults to 'go-git', valid values are
                    ('go-git', 'libgit2').
                  enum:
                  - go-git
                  - libgit2
                  type: string
                ignore:
                  description: Ignore overrides the set of excluded patterns in the
                    .sourceignore format (which is the same as .gitignore). If not
                    provided, a default will be used, consult the documentation for
                    your version to find out what those are.
                  type: string
                include:
                  description: Include specifies a list of GitRepository resources
                    which Artifacts should be included in the Artifact produced for
                    this GitRepository.
                  items:
                    description: GitRepositoryInclude specifies a local reference
                      to a GitRepository which Artifact (sub-)contents must be included,
                      and where they should be placed.
                    properties:
                      fromPath:
                        description: FromPath specifies the path to copy contents
                          from, defaults to the root of the Artifact.
                        type: string
                      repository:
                        description: GitRepositoryRef specifies the GitRepository
                          which Artifact contents must be included.
                        properties:
                          name:
                            description: Name of the referent.
                            type: string
                        required:
                        - name
                        type: object
                      toPath:
                        description: ToPath specifies the path to copy contents to,
                          defaults to the name of the GitRepositoryRef.
                        type: string
                    required:
                    - repository
                    type: object
                  type: array
                interval:
                  description: Interval at which to check the GitRepository for updates.
                  type: string
                recurseSubmodules:
                  description: RecurseSubmodules enables the initialization of all
                    submodules within the GitRepository as cloned from the URL, using
                    their default settings. This option is available only when using
                    the 'go-git' GitImplementation.
                  type: boolean
                ref:
                  description: Reference specifies the Git reference to resolve and
                    monitor for changes, defaults to the 'master' branch.
                  properties:
                    branch:
                      description: "Branch to check out, defaults to 'master' if no
                        other field is defined. \n When GitRepositorySpec.GitImplementation
                        is set to 'go-git', a shallow clone of the specified branch
                        is performed."
                      type: string
                    commit:
                      description: "Commit SHA to check out, takes precedence over
                        all reference fields. \n When GitRepositorySpec.GitImplementation
                        is set to 'go-git', this can be combined with Branch to shallow
                        clone the branch, in which the commit is expected to exist."
                      type: string
                    semver:
                      description: SemVer tag expression to check out, takes precedence
                        over Tag.
                      type: string
                    tag:
                      description: Tag to check out, takes precedence over Branch.
                      type: string
                  type: object
                secretRef:
                  description: SecretRef specifies the Secret containing authentication
                    credentials for the GitRepository. For HTTPS repositories the
                    Secret must contain 'username' and 'password' fields. For SSH
                    repositories the Secret must contain 'identity', 'identity.pub'
                    and 'known_hosts' fields.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                  - name
                  type: object
                suspend:
                  description: Suspend tells the controller to suspend the reconciliation
                    of this GitRepository.
                  type: boolean
                timeout:
                  default: 60s
                  description: Timeout for Git operations like cloning, defaults to
                    60s.
                  type: string
                url:
                  description: URL specifies the Git repository URL, it can be an
                    HTTP/S or SSH address.
                  pattern: ^(http|https|ssh)://
                  type: string
                verify:
                  description: Verification specifies the configuration to verify
                    the Git commit signature(s).
                  properties:
                    mode:
                      description: Mode specifies what Git object should be verified,
                        currently ('head').
                      enum:
                      - head
                      type: string
                    secretRef:
                      description: SecretRef specifies the Secret containing the public
                        keys of trusted Git authors.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - mode
                  type: object
              required:
              - interval
              - url
              type: object
            status:
              default:
                observedGeneration: -1
              description: GitRepositoryStatus records the observed state of a Git
                repository.
              properties:
                artifact:
                  description: Artifact represents the last successful GitRepository
                    reconciliation.
                  properties:
                    checksum:
                      description: Checksum is the SHA256 checksum of the Artifact
                        file.
                      type: string
                    lastUpdateTime:
                      description: LastUpdateTime is the timestamp corresponding to
                        the last update of the Artifact.
                      format: date-time
                      type: string
                    path:
                      description: Path is the relative file path of the Artifact.
                        It can be used to locate the file in the root of the Artifact
                        storage on the local file system of the controller managing
                        the Source.
                      type: string
                    revision:
                      description: Revision is a human-readable identifier traceable
                        in the origin source system. It can be a Git commit SHA, Git
                        tag, a Helm chart version, etc.
                      type: string
                    size:
                      description: Size is the number of bytes in the file.
                      format: int64
                      type: integer
                    url:
                      description: URL is the HTTP address of the Artifact as exposed
                        by the controller managing the Source. It can be used to retrieve
                        the Artifact for consumption, e.g. by another controller applying
                        the Artifact contents.
                      type: string
                  required:
                  - path
                  - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the GitRepository.
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, type FooStatus struct{     // Represents the
                      observations of a foo's current state.     // Known .status.conditions.type
                      are: \"Available\", \"Progressing\", and \"Degraded\"     //
                      +patchMergeKey=type     // +patchStrategy=merge     // +listType=map
                      \    // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                includedArtifacts:
                  description: IncludedArtifacts contains a list of the last successfully
                    included Artifacts as instructed by GitRepositorySpec.Include.
                  items:
                    description: Artifact represents the output of a Source reconciliation.
                    properties:
                      checksum:
                        description: Checksum is the SHA256 checksum of the Artifact
                          file.
                        type: string
                      lastUpdateTime:
                        description: LastUpdateTime is the timestamp corresponding
                          to the last update of the Artifact.
                        format: date-time
                        type: string
                      path:
                        description: Path is the relative file path of the Artifact.
                          It can be used to locate the file in the root of the Artifact
                          storage on the local file system of the controller managing
                          the Source.
                        type: string
                      revision:
                        description: Revision is a human-readable identifier traceable
                          in the origin source system. It can be a Git commit SHA,
                          Git tag, a Helm chart version, etc.
                        type: string
                      size:
                        description: Size is the number of bytes in the file.
                        format: int64
                        type: integer
                      url:
                        description: URL is the HTTP address of the Artifact as exposed
                          by the controller managing the Source. It can be used to
                          retrieve the Artifact for consumption, e.g. by another controller
                          applying the Artifact contents.
                        type: string
                    required:
                    - path
                    - url
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: LastHandledReconcileAt holds the value of the most
                    recent reconcile request value, so a change of the annotation
                    value can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation
                    of the GitRepository object.
                  format: int64
                  type: integer
                url:
                  description: URL is the dynamic fetch link for the latest Artifact.
                    It is provided on a "best effort" basis, and using the precise
                    GitRepositoryStatus.Artifact data is recommended.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: GitRepository
      listKind: GitRepositoryList
      plural: gitrepositories
      shortNames:
      - gitrepo
      singular: gitrepository
    conditions:
    - lastTransitionTime: "2022-04-12T18:16:19Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2022-04-12T18:16:19Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta2
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.7.0
    creationTimestamp: "2022-04-12T18:16:22Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v0.28.5
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: helmcharts.source.toolkit.fluxcd.io
    resourceVersion: "10089204"
    uid: cdb1b857-b051-43e0-8bf0-5dba1389fdc5
  spec:
    conversion:
      strategy: None
    group: source.toolkit.fluxcd.io
    names:
      kind: HelmChart
      listKind: HelmChartList
      plural: helmcharts
      shortNames:
      - hc
      singular: helmchart
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .spec.chart
        name: Chart
        type: string
      - jsonPath: .spec.version
        name: Version
        type: string
      - jsonPath: .spec.sourceRef.kind
        name: Source Kind
        type: string
      - jsonPath: .spec.sourceRef.name
        name: Source Name
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: HelmChart is the Schema for the helmcharts API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: HelmChartSpec defines the desired state of a Helm chart.
              properties:
                accessFrom:
                  description: AccessFrom defines an Access Control List for allowing
                    cross-namespace references to this object.
                  properties:
                    namespaceSelectors:
                      description: NamespaceSelectors is the list of namespace selectors
                        to which this ACL applies. Items in this list are evaluated
                        using a logical OR operation.
                      items:
                        description: NamespaceSelector selects the namespaces to which
                          this ACL applies. An empty map of MatchLabels matches all
                          namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                  - namespaceSelectors
                  type: object
                chart:
                  description: The name or path the Helm chart is available at in
                    the SourceRef.
                  type: string
                interval:
                  description: The interval at which to check the Source for updates.
                  type: string
                reconcileStrategy:
                  default: ChartVersion
                  description: Determines what enables the creation of a new artifact.
                    Valid values are ('ChartVersion', 'Revision'). See the documentation
                    of the values for an explanation on their behavior. Defaults to
                    ChartVersion when omitted.
                  enum:
                  - ChartVersion
                  - Revision
                  type: string
                sourceRef:
                  description: The reference to the Source the chart is available
                    at.
                  properties:
                    apiVersion:
                      description: APIVersion of the referent.
                      type: string
                    kind:
                      description: Kind of the referent, valid values are ('HelmRepository',
                        'GitRepository', 'Bucket').
                      enum:
                      - HelmRepository
                      - GitRepository
                      - Bucket
                      type: string
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                suspend:
                  description: This flag tells the controller to suspend the reconciliation
                    of this source.
                  type: boolean
                valuesFile:
                  description: Alternative values file to use as the default chart
                    values, expected to be a relative path in the SourceRef. Deprecated
                    in favor of ValuesFiles, for backwards compatibility the file
                    defined here is merged before the ValuesFiles items. Ignored when
                    omitted.
                  type: string
                valuesFiles:
                  description: Alternative list of values files to use as the chart
                    values (values.yaml is not included by default), expected to be
                    a relative path in the SourceRef. Values files are merged in the
                    order of this list with the last file overriding the first. Ignored
                    when omitted.
                  items:
                    type: string
                  type: array
                version:
                  default: '*'
                  description: The chart version semver expression, ignored for charts
                    from GitRepository and Bucket sources. Defaults to latest when
                    omitted.
                  type: string
              required:
              - chart
              - interval
              - sourceRef
              type: object
            status:
              default:
                observedGeneration: -1
              description: HelmChartStatus defines the observed state of the HelmChart.
              properties:
                artifact:
                  description: Artifact represents the output of the last successful
                    chart sync.
                  properties:
                    checksum:
                      description: Checksum is the SHA256 checksum of the artifact.
                      type: string
                    lastUpdateTime:
                      description: LastUpdateTime is the timestamp corresponding to
                        the last update of this artifact.
                      format: date-time
                      type: string
                    path:
                      description: Path is the relative file path of this artifact.
                      type: string
                    revision:
                      description: Revision is a human readable identifier traceable
                        in the origin source system. It can be a Git commit SHA, Git
                        tag, a Helm index timestamp, a Helm chart version, etc.
                      type: string
                    url:
                      description: URL is the HTTP address of this artifact.
                      type: string
                  required:
                  - path
                  - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the HelmChart.
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, type FooStatus struct{     // Represents the
                      observations of a foo's current state.     // Known .status.conditions.type
                      are: \"Available\", \"Progressing\", and \"Degraded\"     //
                      +patchMergeKey=type     // +patchStrategy=merge     // +listType=map
                      \    // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: LastHandledReconcileAt holds the value of the most
                    recent reconcile request value, so a change of the annotation
                    value can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
                url:
                  description: URL is the download link for the last chart pulled.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .spec.chart
        name: Chart
        type: string
      - jsonPath: .spec.version
        name: Version
        type: string
      - jsonPath: .spec.sourceRef.kind
        name: Source Kind
        type: string
      - jsonPath: .spec.sourceRef.name
        name: Source Name
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: HelmChart is the Schema for the helmcharts API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: HelmChartSpec specifies the desired state of a Helm chart.
              properties:
                accessFrom:
                  description: 'AccessFrom specifies an Access Control List for allowing
                    cross-namespace references to this object. NOTE: Not implemented,
                    provisional as of https://github.com/fluxcd/flux2/pull/2092'
                  properties:
                    namespaceSelectors:
                      description: NamespaceSelectors is the list of namespace selectors
                        to which this ACL applies. Items in this list are evaluated
                        using a logical OR operation.
                      items:
                        description: NamespaceSelector selects the namespaces to which
                          this ACL applies. An empty map of MatchLabels matches all
                          namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                  - namespaceSelectors
                  type: object
                chart:
                  description: Chart is the name or path the Helm chart is available
                    at in the SourceRef.
                  type: string
                interval:
                  description: Interval is the interval at which to check the Source
                    for updates.
                  type: string
                reconcileStrategy:
                  default: ChartVersion
                  description: ReconcileStrategy determines what enables the creation
                    of a new artifact. Valid values are ('ChartVersion', 'Revision').
                    See the documentation of the values for an explanation on their
                    behavior. Defaults to ChartVersion when omitted.
                  enum:
                  - ChartVersion
                  - Revision
                  type: string
                sourceRef:
                  description: SourceRef is the reference to the Source the chart
                    is available at.
                  properties:
                    apiVersion:
                      description: APIVersion of the referent.
                      type: string
                    kind:
                      description: Kind of the referent, valid values are ('HelmRepository',
                        'GitRepository', 'Bucket').
                      enum:
                      - HelmRepository
                      - GitRepository
                      - Bucket
                      type: string
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                suspend:
                  description: Suspend tells the controller to suspend the reconciliation
                    of this source.
                  type: boolean
                valuesFile:
                  description: ValuesFile is an alternative values file to use as
                    the default chart values, expected to be a relative path in the
                    SourceRef. Deprecated in favor of ValuesFiles, for backwards compatibility
                    the file specified here is merged before the ValuesFiles items.
                    Ignored when omitted.
                  type: string
                valuesFiles:
                  description: ValuesFiles is an alternative list of values files
                    to use as the chart values (values.yaml is not included by default),
                    expected to be a relative path in the SourceRef. Values files
                    are merged in the order of this list with the last file overriding
                    the first. Ignored when omitted.
                  items:
                    type: string
                  type: array
                version:
                  default: '*'
                  description: Version is the chart version semver expression, ignored
                    for charts from GitRepository and Bucket sources. Defaults to
                    latest when omitted.
                  type: string
              required:
              - chart
              - interval
              - sourceRef
              type: object
            status:
              default:
                observedGeneration: -1
              description: HelmChartStatus records the observed state of the HelmChart.
              properties:
                artifact:
                  description: Artifact represents the output of the last successful
                    reconciliation.
                  properties:
                    checksum:
                      description: Checksum is the SHA256 checksum of the Artifact
                        file.
                      type: string
                    lastUpdateTime:
                      description: LastUpdateTime is the timestamp corresponding to
                        the last update of the Artifact.
                      format: date-time
                      type: string
                    path:
                      description: Path is the relative file path of the Artifact.
                        It can be used to locate the file in the root of the Artifact
                        storage on the local file system of the controller managing
                        the Source.
                      type: string
                    revision:
                      description: Revision is a human-readable identifier traceable
                        in the origin source system. It can be a Git commit SHA, Git
                        tag, a Helm chart version, etc.
                      type: string
                    size:
                      description: Size is the number of bytes in the file.
                      format: int64
                      type: integer
                    url:
                      description: URL is the HTTP address of the Artifact as exposed
                        by the controller managing the Source. It can be used to retrieve
                        the Artifact for consumption, e.g. by another controller applying
                        the Artifact contents.
                      type: string
                  required:
                  - path
                  - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the HelmChart.
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, type FooStatus struct{     // Represents the
                      observations of a foo's current state.     // Known .status.conditions.type
                      are: \"Available\", \"Progressing\", and \"Degraded\"     //
                      +patchMergeKey=type     // +patchStrategy=merge     // +listType=map
                      \    // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: LastHandledReconcileAt holds the value of the most
                    recent reconcile request value, so a change of the annotation
                    value can be detected.
                  type: string
                observedChartName:
                  description: ObservedChartName is the last observed chart name as
                    specified by the resolved chart reference.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation
                    of the HelmChart object.
                  format: int64
                  type: integer
                observedSourceArtifactRevision:
                  description: ObservedSourceArtifactRevision is the last observed
                    Artifact.Revision of the HelmChartSpec.SourceRef.
                  type: string
                url:
                  description: URL is the dynamic fetch link for the latest Artifact.
                    It is provided on a "best effort" basis, and using the precise
                    BucketStatus.Artifact data is recommended.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: HelmChart
      listKind: HelmChartList
      plural: helmcharts
      shortNames:
      - hc
      singular: helmchart
    conditions:
    - lastTransitionTime: "2022-04-12T18:16:22Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2022-04-12T18:16:22Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta2
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.7.0
    creationTimestamp: "2022-04-12T18:16:22Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v0.28.5
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: helmreleases.helm.toolkit.fluxcd.io
    resourceVersion: "10089205"
    uid: 79c2382e-6bca-4310-ad2e-fad00e3aac20
  spec:
    conversion:
      strategy: None
    group: helm.toolkit.fluxcd.io
    names:
      kind: HelmRelease
      listKind: HelmReleaseList
      plural: helmreleases
      shortNames:
      - hr
      singular: helmrelease
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        type: string
      name: v2beta1
      schema:
        openAPIV3Schema:
          description: HelmRelease is the Schema for the helmreleases API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: HelmReleaseSpec defines the desired state of a Helm release.
              properties:
                chart:
                  description: Chart defines the template of the v1beta2.HelmChart
                    that should be created for this HelmRelease.
                  properties:
                    spec:
                      description: Spec holds the template for the v1beta2.HelmChartSpec
                        for this HelmRelease.
                      properties:
                        chart:
                          description: The name or path the Helm chart is available
                            at in the SourceRef.
                          type: string
                        interval:
                          description: Interval at which to check the v1beta2.Source
                            for updates. Defaults to 'HelmReleaseSpec.Interval'.
                          type: string
                        reconcileStrategy:
                          default: ChartVersion
                          description: Determines what enables the creation of a new
                            artifact. Valid values are ('ChartVersion', 'Revision').
                            See the documentation of the values for an explanation
                            on their behavior. Defaults to ChartVersion when omitted.
                          enum:
                          - ChartVersion
                          - Revision
                          type: string
                        sourceRef:
                          description: The name and namespace of the v1beta2.Source
                            the chart is available at.
                          properties:
                            apiVersion:
                              description: APIVersion of the referent.
                              type: string
                            kind:
                              description: Kind of the referent.
                              enum:
                              - HelmRepository
                              - GitRepository
                              - Bucket
                              type: string
                            name:
                              description: Name of the referent.
                              maxLength: 253
                              minLength: 1
                              type: string
                            namespace:
                              description: Namespace of the referent.
                              maxLength: 63
                              minLength: 1
                              type: string
                          required:
                          - name
                          type: object
                        valuesFile:
                          description: Alternative values file to use as the default
                            chart values, expected to be a relative path in the SourceRef.
                            Deprecated in favor of ValuesFiles, for backwards compatibility
                            the file defined here is merged before the ValuesFiles
                            items. Ignored when omitted.
                          type: string
                        valuesFiles:
                          description: Alternative list of values files to use as
                            the chart values (values.yaml is not included by default),
                            expected to be a relative path in the SourceRef. Values
                            files are merged in the order of this list with the last
                            file overriding the first. Ignored when omitted.
                          items:
                            type: string
                          type: array
                        version:
                          default: '*'
                          description: Version semver expression, ignored for charts
                            from v1beta2.GitRepository and v1beta2.Bucket sources.
                            Defaults to latest when omitted.
                          type: string
                      required:
                      - chart
                      - sourceRef
                      type: object
                  required:
                  - spec
                  type: object
                dependsOn:
                  description: DependsOn may contain a meta.NamespacedObjectReference
                    slice with references to HelmRelease resources that must be ready
                    before this HelmRelease can be reconciled.
                  items:
                    description: NamespacedObjectReference contains enough information
                      to locate the referenced Kubernetes resource object in any namespace.
                    properties:
                      name:
                        description: Name of the referent.
                        type: string
                      namespace:
                        description: Namespace of the referent, when not specified
                          it acts as LocalObjectReference.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                install:
                  description: Install holds the configuration for Helm install actions
                    for this HelmRelease.
                  properties:
                    crds:
                      description: "CRDs upgrade CRDs from the Helm Chart's crds directory
                        according to the CRD upgrade policy provided here. Valid values
                        are `Skip`, `Create` or `CreateReplace`. Default is `Create`
                        and if omitted CRDs are installed but not updated. \n Skip:
                        do neither install nor replace (update) any CRDs. \n Create:
                        new CRDs are created, existing CRDs are neither updated nor
                        deleted. \n CreateReplace: new CRDs are created, existing
                        CRDs are updated (replaced) but not deleted. \n By default,
                        CRDs are applied (installed) during Helm install action. With
                        this option users can opt-in to CRD replace existing CRDs
                        on Helm install actions, which is not (yet) natively supported
                        by Helm. https://helm.sh/docs/chart_best_practices/custom_resource_definitions."
                      enum:
                      - Skip
                      - Create
                      - CreateReplace
                      type: string
                    createNamespace:
                      description: CreateNamespace tells the Helm install action to
                        create the HelmReleaseSpec.TargetNamespace if it does not
                        exist yet. On uninstall, the namespace will not be garbage
                        collected.
                      type: boolean
                    disableHooks:
                      description: DisableHooks prevents hooks from running during
                        the Helm install action.
                      type: boolean
                    disableOpenAPIValidation:
                      description: DisableOpenAPIValidation prevents the Helm install
                        action from validating rendered templates against the Kubernetes
                        OpenAPI Schema.
                      type: boolean
                    disableWait:
                      description: DisableWait disables the waiting for resources
                        to be ready after a Helm install has been performed.
                      type: boolean
                    disableWaitForJobs:
                      description: DisableWaitForJobs disables waiting for jobs to
                        complete after a Helm install has been performed.
                      type: boolean
                    remediation:
                      description: Remediation holds the remediation configuration
                        for when the Helm install action for the HelmRelease fails.
                        The default is to not perform any action.
                      properties:
                        ignoreTestFailures:
                          description: IgnoreTestFailures tells the controller to
                            skip remediation when the Helm tests are run after an
                            install action but fail. Defaults to 'Test.IgnoreFailures'.
                          type: boolean
                        remediateLastFailure:
                          description: RemediateLastFailure tells the controller to
                            remediate the last failure, when no retries remain. Defaults
                            to 'false'.
                          type: boolean
                        retries:
                          description: Retries is the number of retries that should
                            be attempted on failures before bailing. Remediation,
                            using an uninstall, is performed between each attempt.
                            Defaults to '0', a negative integer equals to unlimited
                            retries.
                          type: integer
                      type: object
                    replace:
                      description: Replace tells the Helm install action to re-use
                        the 'ReleaseName', but only if that name is a deleted release
                        which remains in the history.
                      type: boolean
                    skipCRDs:
                      description: "SkipCRDs tells the Helm install action to not
                        install any CRDs. By default, CRDs are installed if not already
                        present. \n Deprecated use CRD policy (`crds`) attribute with
                        value `Skip` instead."
                      type: boolean
                    timeout:
                      description: Timeout is the time to wait for any individual
                        Kubernetes operation (like Jobs for hooks) during the performance
                        of a Helm install action. Defaults to 'HelmReleaseSpec.Timeout'.
                      type: string
                  type: object
                interval:
                  description: Interval at which to reconcile the Helm release.
                  type: string
                kubeConfig:
                  description: KubeConfig for reconciling the HelmRelease on a remote
                    cluster. When specified, KubeConfig takes precedence over ServiceAccountName.
                  properties:
                    secretRef:
                      description: SecretRef holds the name to a secret that contains
                        a 'value' key with the kubeconfig file as the value. It must
                        be in the same namespace as the HelmRelease. It is recommended
                        that the kubeconfig is self-contained, and the secret is regularly
                        updated if credentials such as a cloud-access-token expire.
                        Cloud specific `cmd-path` auth helpers will not function without
                        adding binaries and credentials to the Pod that is responsible
                        for reconciling the HelmRelease.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                      - name
                      type: object
                  type: object
                maxHistory:
                  description: MaxHistory is the number of revisions saved by Helm
                    for this HelmRelease. Use '0' for an unlimited number of revisions;
                    defaults to '10'.
                  type: integer
                postRenderers:
                  description: PostRenderers holds an array of Helm PostRenderers,
                    which will be applied in order of their definition.
                  items:
                    description: PostRenderer contains a Helm PostRenderer specification.
                    properties:
                      kustomize:
                        description: Kustomization to apply as PostRenderer.
                        properties:
                          images:
                            description: Images is a list of (image name, new name,
                              new tag or digest) for changing image names, tags or
                              digests. This can also be achieved with a patch, but
                              this operator is simpler to specify.
                            items:
                              description: Image contains an image name, a new name,
                                a new tag or digest, which will replace the original
                                name and tag.
                              properties:
                                digest:
                                  description: Digest is the value used to replace
                                    the original image tag. If digest is present NewTag
                                    value is ignored.
                                  type: string
                                name:
                                  description: Name is a tag-less image name.
                                  type: string
                                newName:
                                  description: NewName is the value used to replace
                                    the original name.
                                  type: string
                                newTag:
                                  description: NewTag is the value used to replace
                                    the original tag.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                          patches:
                            description: Strategic merge and JSON patches, defined
                              as inline YAML objects, capable of targeting objects
                              based on kind, label and annotation selectors.
                            items:
                              description: Patch contains an inline StrategicMerge
                                or JSON6902 patch, and the target the patch should
                                be applied to.
                              properties:
                                patch:
                                  description: Patch contains an inline StrategicMerge
                                    patch or an inline JSON6902 patch with an array
                                    of operation objects.
                                  type: string
                                target:
                                  description: Target points to the resources that
                                    the patch document should be applied to.
                                  properties:
                                    annotationSelector:
                                      description: AnnotationSelector is a string
                                        that follows the label selection expression
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                        It matches with the resource annotations.
                                      type: string
                                    group:
                                      description: Group is the API group to select
                                        resources from. Together with Version and
                                        Kind it is capable of unambiguously identifying
                                        and/or selecting resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                    kind:
                                      description: Kind of the API Group to select
                                        resources from. Together with Group and Version
                                        it is capable of unambiguously identifying
                                        and/or selecting resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                    labelSelector:
                                      description: LabelSelector is a string that
                                        follows the label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                        It matches with the resource labels.
                                      type: string
                                    name:
                                      description: Name to match resources with.
                                      type: string
                                    namespace:
                                      description: Namespace to select resources from.
                                      type: string
                                    version:
                                      description: Version of the API Group to select
                                        resources from. Together with Group and Kind
                                        it is capable of unambiguously identifying
                                        and/or selecting resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                  type: object
                              type: object
                            type: array
                          patchesJson6902:
                            description: JSON 6902 patches, defined as inline YAML
                              objects.
                            items:
                              description: JSON6902Patch contains a JSON6902 patch
                                and the target the patch should be applied to.
                              properties:
                                patch:
                                  description: Patch contains the JSON6902 patch document
                                    with an array of operation objects.
                                  items:
                                    description: JSON6902 is a JSON6902 operation
                                      object. https://datatracker.ietf.org/doc/html/rfc6902#section-4
                                    properties:
                                      from:
                                        description: From contains a JSON-pointer
                                          value that references a location within
                                          the target document where the operation
                                          is performed. The meaning of the value depends
                                          on the value of Op, and is NOT taken into
                                          account by all operations.
                                        type: string
                                      op:
                                        description: Op indicates the operation to
                                          perform. Its value MUST be one of "add",
                                          "remove", "replace", "move", "copy", or
                                          "test". https://datatracker.ietf.org/doc/html/rfc6902#section-4
                                        enum:
                                        - test
                                        - remove
                                        - add
                                        - replace
                                        - move
                                        - copy
                                        type: string
                                      path:
                                        description: Path contains the JSON-pointer
                                          value that references a location within
                                          the target document where the operation
                                          is performed. The meaning of the value depends
                                          on the value of Op.
                                        type: string
                                      value:
                                        description: Value contains a valid JSON structure.
                                          The meaning of the value depends on the
                                          value of Op, and is NOT taken into account
                                          by all operations.
                                        x-kubernetes-preserve-unknown-fields: true
                                    required:
                                    - op
                                    - path
                                    type: object
                                  type: array
                                target:
                                  description: Target points to the resources that
                                    the patch document should be applied to.
                                  properties:
                                    annotationSelector:
                                      description: AnnotationSelector is a string
                                        that follows the label selection expression
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                        It matches with the resource annotations.
                                      type: string
                                    group:
                                      description: Group is the API group to select
                                        resources from. Together with Version and
                                        Kind it is capable of unambiguously identifying
                                        and/or selecting resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                    kind:
                                      description: Kind of the API Group to select
                                        resources from. Together with Group and Version
                                        it is capable of unambiguously identifying
                                        and/or selecting resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                    labelSelector:
                                      description: LabelSelector is a string that
                                        follows the label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                        It matches with the resource labels.
                                      type: string
                                    name:
                                      description: Name to match resources with.
                                      type: string
                                    namespace:
                                      description: Namespace to select resources from.
                                      type: string
                                    version:
                                      description: Version of the API Group to select
                                        resources from. Together with Group and Kind
                                        it is capable of unambiguously identifying
                                        and/or selecting resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                  type: object
                              required:
                              - patch
                              - target
                              type: object
                            type: array
                          patchesStrategicMerge:
                            description: Strategic merge patches, defined as inline
                              YAML objects.
                            items:
                              x-kubernetes-preserve-unknown-fields: true
                            type: array
                        type: object
                    type: object
                  type: array
                releaseName:
                  description: ReleaseName used for the Helm release. Defaults to
                    a composition of '[TargetNamespace-]Name'.
                  maxLength: 53
                  minLength: 1
                  type: string
                rollback:
                  description: Rollback holds the configuration for Helm rollback
                    actions for this HelmRelease.
                  properties:
                    cleanupOnFail:
                      description: CleanupOnFail allows deletion of new resources
                        created during the Helm rollback action when it fails.
                      type: boolean
                    disableHooks:
                      description: DisableHooks prevents hooks from running during
                        the Helm rollback action.
                      type: boolean
                    disableWait:
                      description: DisableWait disables the waiting for resources
                        to be ready after a Helm rollback has been performed.
                      type: boolean
                    disableWaitForJobs:
                      description: DisableWaitForJobs disables waiting for jobs to
                        complete after a Helm rollback has been performed.
                      type: boolean
                    force:
                      description: Force forces resource updates through a replacement
                        strategy.
                      type: boolean
                    recreate:
                      description: Recreate performs pod restarts for the resource
                        if applicable.
                      type: boolean
                    timeout:
                      description: Timeout is the time to wait for any individual
                        Kubernetes operation (like Jobs for hooks) during the performance
                        of a Helm rollback action. Defaults to 'HelmReleaseSpec.Timeout'.
                      type: string
                  type: object
                serviceAccountName:
                  description: The name of the Kubernetes service account to impersonate
                    when reconciling this HelmRelease.
                  type: string
                storageNamespace:
                  description: StorageNamespace used for the Helm storage. Defaults
                    to the namespace of the HelmRelease.
                  maxLength: 63
                  minLength: 1
                  type: string
                suspend:
                  description: Suspend tells the controller to suspend reconciliation
                    for this HelmRelease, it does not apply to already started reconciliations.
                    Defaults to false.
                  type: boolean
                targetNamespace:
                  description: TargetNamespace to target when performing operations
                    for the HelmRelease. Defaults to the namespace of the HelmRelease.
                  maxLength: 63
                  minLength: 1
                  type: string
                test:
                  description: Test holds the configuration for Helm test actions
                    for this HelmRelease.
                  properties:
                    enable:
                      description: Enable enables Helm test actions for this HelmRelease
                        after an Helm install or upgrade action has been performed.
                      type: boolean
                    ignoreFailures:
                      description: IgnoreFailures tells the controller to skip remediation
                        when the Helm tests are run but fail. Can be overwritten for
                        tests run after install or upgrade actions in 'Install.IgnoreTestFailures'
                        and 'Upgrade.IgnoreTestFailures'.
                      type: boolean
                    timeout:
                      description: Timeout is the time to wait for any individual
                        Kubernetes operation during the performance of a Helm test
                        action. Defaults to 'HelmReleaseSpec.Timeout'.
                      type: string
                  type: object
                timeout:
                  description: Timeout is the time to wait for any individual Kubernetes
                    operation (like Jobs for hooks) during the performance of a Helm
                    action. Defaults to '5m0s'.
                  type: string
                uninstall:
                  description: Uninstall holds the configuration for Helm uninstall
                    actions for this HelmRelease.
                  properties:
                    disableHooks:
                      description: DisableHooks prevents hooks from running during
                        the Helm rollback action.
                      type: boolean
                    disableWait:
                      description: DisableWait disables waiting for all the resources
                        to be deleted after a Helm uninstall is performed.
                      type: boolean
                    keepHistory:
                      description: KeepHistory tells Helm to remove all associated
                        resources and mark the release as deleted, but retain the
                        release history.
                      type: boolean
                    timeout:
                      description: Timeout is the time to wait for any individual
                        Kubernetes operation (like Jobs for hooks) during the performance
                        of a Helm uninstall action. Defaults to 'HelmReleaseSpec.Timeout'.
                      type: string
                  type: object
                upgrade:
                  description: Upgrade holds the configuration for Helm upgrade actions
                    for this HelmRelease.
                  properties:
                    cleanupOnFail:
                      description: CleanupOnFail allows deletion of new resources
                        created during the Helm upgrade action when it fails.
                      type: boolean
                    crds:
                      description: "CRDs upgrade CRDs from the Helm Chart's crds directory
                        according to the CRD upgrade policy provided here. Valid values
                        are `Skip`, `Create` or `CreateReplace`. Default is `Skip`
                        and if omitted CRDs are neither installed nor upgraded. \n
                        Skip: do neither install nor replace (update) any CRDs. \n
                        Create: new CRDs are created, existing CRDs are neither updated
                        nor deleted. \n CreateReplace: new CRDs are created, existing
                        CRDs are updated (replaced) but not deleted. \n By default,
                        CRDs are not applied during Helm upgrade action. With this
                        option users can opt-in to CRD upgrade, which is not (yet)
                        natively supported by Helm. https://helm.sh/docs/chart_best_practices/custom_resource_definitions."
                      enum:
                      - Skip
                      - Create
                      - CreateReplace
                      type: string
                    disableHooks:
                      description: DisableHooks prevents hooks from running during
                        the Helm upgrade action.
                      type: boolean
                    disableOpenAPIValidation:
                      description: DisableOpenAPIValidation prevents the Helm upgrade
                        action from validating rendered templates against the Kubernetes
                        OpenAPI Schema.
                      type: boolean
                    disableWait:
                      description: DisableWait disables the waiting for resources
                        to be ready after a Helm upgrade has been performed.
                      type: boolean
                    disableWaitForJobs:
                      description: DisableWaitForJobs disables waiting for jobs to
                        complete after a Helm upgrade has been performed.
                      type: boolean
                    force:
                      description: Force forces resource updates through a replacement
                        strategy.
                      type: boolean
                    preserveValues:
                      description: PreserveValues will make Helm reuse the last release's
                        values and merge in overrides from 'Values'. Setting this
                        flag makes the HelmRelease non-declarative.
                      type: boolean
                    remediation:
                      description: Remediation holds the remediation configuration
                        for when the Helm upgrade action for the HelmRelease fails.
                        The default is to not perform any action.
                      properties:
                        ignoreTestFailures:
                          description: IgnoreTestFailures tells the controller to
                            skip remediation when the Helm tests are run after an
                            upgrade action but fail. Defaults to 'Test.IgnoreFailures'.
                          type: boolean
                        remediateLastFailure:
                          description: RemediateLastFailure tells the controller to
                            remediate the last failure, when no retries remain. Defaults
                            to 'false' unless 'Retries' is greater than 0.
                          type: boolean
                        retries:
                          description: Retries is the number of retries that should
                            be attempted on failures before bailing. Remediation,
                            using 'Strategy', is performed between each attempt. Defaults
                            to '0', a negative integer equals to unlimited retries.
                          type: integer
                        strategy:
                          description: Strategy to use for failure remediation. Defaults
                            to 'rollback'.
                          enum:
                          - rollback
                          - uninstall
                          type: string
                      type: object
                    timeout:
                      description: Timeout is the time to wait for any individual
                        Kubernetes operation (like Jobs for hooks) during the performance
                        of a Helm upgrade action. Defaults to 'HelmReleaseSpec.Timeout'.
                      type: string
                  type: object
                values:
                  description: Values holds the values for this Helm release.
                  x-kubernetes-preserve-unknown-fields: true
                valuesFrom:
                  description: ValuesFrom holds references to resources containing
                    Helm values for this HelmRelease, and information about how they
                    should be merged.
                  items:
                    description: ValuesReference contains a reference to a resource
                      containing Helm values, and optionally the key they can be found
                      at.
                    properties:
                      kind:
                        description: Kind of the values referent, valid values are
                          ('Secret', 'ConfigMap').
                        enum:
                        - Secret
                        - ConfigMap
                        type: string
                      name:
                        description: Name of the values referent. Should reside in
                          the same namespace as the referring resource.
                        maxLength: 253
                        minLength: 1
                        type: string
                      optional:
                        description: Optional marks this ValuesReference as optional.
                          When set, a not found error for the values reference is
                          ignored, but any ValuesKey, TargetPath or transient error
                          will still result in a reconciliation failure.
                        type: boolean
                      targetPath:
                        description: TargetPath is the YAML dot notation path the
                          value should be merged at. When set, the ValuesKey is expected
                          to be a single flat value. Defaults to 'None', which results
                          in the values getting merged at the root.
                        type: string
                      valuesKey:
                        description: ValuesKey is the data key where the values.yaml
                          or a specific value can be found at. Defaults to 'values.yaml'.
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                  type: array
              required:
              - chart
              - interval
              type: object
            status:
              default:
                observedGeneration: -1
              description: HelmReleaseStatus defines the observed state of a HelmRelease.
              properties:
                conditions:
                  description: Conditions holds the conditions for the HelmRelease.
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, type FooStatus struct{     // Represents the
                      observations of a foo's current state.     // Known .status.conditions.type
                      are: \"Available\", \"Progressing\", and \"Degraded\"     //
                      +patchMergeKey=type     // +patchStrategy=merge     // +listType=map
                      \    // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                failures:
                  description: Failures is the reconciliation failure count against
                    the latest desired state. It is reset after a successful reconciliation.
                  format: int64
                  type: integer
                helmChart:
                  description: HelmChart is the namespaced name of the HelmChart resource
                    created by the controller for the HelmRelease.
                  type: string
                installFailures:
                  description: InstallFailures is the install failure count against
                    the latest desired state. It is reset after a successful reconciliation.
                  format: int64
                  type: integer
                lastAppliedRevision:
                  description: LastAppliedRevision is the revision of the last successfully
                    applied source.
                  type: string
                lastAttemptedRevision:
                  description: LastAttemptedRevision is the revision of the last reconciliation
                    attempt.
                  type: string
                lastAttemptedValuesChecksum:
                  description: LastAttemptedValuesChecksum is the SHA1 checksum of
                    the values of the last reconciliation attempt.
                  type: string
                lastHandledReconcileAt:
                  description: LastHandledReconcileAt holds the value of the most
                    recent reconcile request value, so a change of the annotation
                    value can be detected.
                  type: string
                lastReleaseRevision:
                  description: LastReleaseRevision is the revision of the last successful
                    Helm release.
                  type: integer
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
                upgradeFailures:
                  description: UpgradeFailures is the upgrade failure count against
                    the latest desired state. It is reset after a successful reconciliation.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: HelmRelease
      listKind: HelmReleaseList
      plural: helmreleases
      shortNames:
      - hr
      singular: helmrelease
    conditions:
    - lastTransitionTime: "2022-04-12T18:16:22Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2022-04-12T18:16:22Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v2beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.7.0
    creationTimestamp: "2022-04-12T18:16:18Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v0.28.5
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: helmrepositories.source.toolkit.fluxcd.io
    resourceVersion: "10089208"
    uid: 810b7611-8ea4-48d0-977f-b5f552cffc76
  spec:
    conversion:
      strategy: None
    group: source.toolkit.fluxcd.io
    names:
      kind: HelmRepository
      listKind: HelmRepositoryList
      plural: helmrepositories
      shortNames:
      - helmrepo
      singular: helmrepository
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .spec.url
        name: URL
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: HelmRepository is the Schema for the helmrepositories API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: HelmRepositorySpec defines the reference to a Helm repository.
              properties:
                accessFrom:
                  description: AccessFrom defines an Access Control List for allowing
                    cross-namespace references to this object.
                  properties:
                    namespaceSelectors:
                      description: NamespaceSelectors is the list of namespace selectors
                        to which this ACL applies. Items in this list are evaluated
                        using a logical OR operation.
                      items:
                        description: NamespaceSelector selects the namespaces to which
                          this ACL applies. An empty map of MatchLabels matches all
                          namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                  - namespaceSelectors
                  type: object
                interval:
                  description: The interval at which to check the upstream for updates.
                  type: string
                passCredentials:
                  description: PassCredentials allows the credentials from the SecretRef
                    to be passed on to a host that does not match the host as defined
                    in URL. This may be required if the host of the advertised chart
                    URLs in the index differ from the defined URL. Enabling this should
                    be done with caution, as it can potentially result in credentials
                    getting stolen in a MITM-attack.
                  type: boolean
                secretRef:
                  description: The name of the secret containing authentication credentials
                    for the Helm repository. For HTTP/S basic auth the secret must
                    contain username and password fields. For TLS the secret must
                    contain a certFile and keyFile, and/or caCert fields.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                  - name
                  type: object
                suspend:
                  description: This flag tells the controller to suspend the reconciliation
                    of this source.
                  type: boolean
                timeout:
                  default: 60s
                  description: The timeout of index downloading, defaults to 60s.
                  type: string
                url:
                  description: The Helm repository URL, a valid URL contains at least
                    a protocol and host.
                  type: string
              required:
              - interval
              - url
              type: object
            status:
              default:
                observedGeneration: -1
              description: HelmRepositoryStatus defines the observed state of the
                HelmRepository.
              properties:
                artifact:
                  description: Artifact represents the output of the last successful
                    repository sync.
                  properties:
                    checksum:
                      description: Checksum is the SHA256 checksum of the artifact.
                      type: string
                    lastUpdateTime:
                      description: LastUpdateTime is the timestamp corresponding to
                        the last update of this artifact.
                      format: date-time
                      type: string
                    path:
                      description: Path is the relative file path of this artifact.
                      type: string
                    revision:
                      description: Revision is a human readable identifier traceable
                        in the origin source system. It can be a Git commit SHA, Git
                        tag, a Helm index timestamp, a Helm chart version, etc.
                      type: string
                    url:
                      description: URL is the HTTP address of this artifact.
                      type: string
                  required:
                  - path
                  - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the HelmRepository.
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, type FooStatus struct{     // Represents the
                      observations of a foo's current state.     // Known .status.conditions.type
                      are: \"Available\", \"Progressing\", and \"Degraded\"     //
                      +patchMergeKey=type     // +patchStrategy=merge     // +listType=map
                      \    // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: LastHandledReconcileAt holds the value of the most
                    recent reconcile request value, so a change of the annotation
                    value can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
                url:
                  description: URL is the download link for the last index fetched.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .spec.url
        name: URL
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: HelmRepository is the Schema for the helmrepositories API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: HelmRepositorySpec specifies the required configuration
                to produce an Artifact for a Helm repository index YAML.
              properties:
                accessFrom:
                  description: 'AccessFrom specifies an Access Control List for allowing
                    cross-namespace references to this object. NOTE: Not implemented,
                    provisional as of https://github.com/fluxcd/flux2/pull/2092'
                  properties:
                    namespaceSelectors:
                      description: NamespaceSelectors is the list of namespace selectors
                        to which this ACL applies. Items in this list are evaluated
                        using a logical OR operation.
                      items:
                        description: NamespaceSelector selects the namespaces to which
                          this ACL applies. An empty map of MatchLabels matches all
                          namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                  - namespaceSelectors
                  type: object
                interval:
                  description: Interval at which to check the URL for updates.
                  type: string
                passCredentials:
                  description: PassCredentials allows the credentials from the SecretRef
                    to be passed on to a host that does not match the host as defined
                    in URL. This may be required if the host of the advertised chart
                    URLs in the index differ from the defined URL. Enabling this should
                    be done with caution, as it can potentially result in credentials
                    getting stolen in a MITM-attack.
                  type: boolean
                secretRef:
                  description: SecretRef specifies the Secret containing authentication
                    credentials for the HelmRepository. For HTTP/S basic auth the
                    secret must contain 'username' and 'password' fields. For TLS
                    the secret must contain a 'certFile' and 'keyFile', and/or 'caCert'
                    fields.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                  - name
                  type: object
                suspend:
                  description: Suspend tells the controller to suspend the reconciliation
                    of this HelmRepository.
                  type: boolean
                timeout:
                  default: 60s
                  description: Timeout of the index fetch operation, defaults to 60s.
                  type: string
                url:
                  description: URL of the Helm repository, a valid URL contains at
                    least a protocol and host.
                  type: string
              required:
              - interval
              - url
              type: object
            status:
              default:
                observedGeneration: -1
              description: HelmRepositoryStatus records the observed state of the
                HelmRepository.
              properties:
                artifact:
                  description: Artifact represents the last successful HelmRepository
                    reconciliation.
                  properties:
                    checksum:
                      description: Checksum is the SHA256 checksum of the Artifact
                        file.
                      type: string
                    lastUpdateTime:
                      description: LastUpdateTime is the timestamp corresponding to
                        the last update of the Artifact.
                      format: date-time
                      type: string
                    path:
                      description: Path is the relative file path of the Artifact.
                        It can be used to locate the file in the root of the Artifact
                        storage on the local file system of the controller managing
                        the Source.
                      type: string
                    revision:
                      description: Revision is a human-readable identifier traceable
                        in the origin source system. It can be a Git commit SHA, Git
                        tag, a Helm chart version, etc.
                      type: string
                    size:
                      description: Size is the number of bytes in the file.
                      format: int64
                      type: integer
                    url:
                      description: URL is the HTTP address of the Artifact as exposed
                        by the controller managing the Source. It can be used to retrieve
                        the Artifact for consumption, e.g. by another controller applying
                        the Artifact contents.
                      type: string
                  required:
                  - path
                  - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the HelmRepository.
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, type FooStatus struct{     // Represents the
                      observations of a foo's current state.     // Known .status.conditions.type
                      are: \"Available\", \"Progressing\", and \"Degraded\"     //
                      +patchMergeKey=type     // +patchStrategy=merge     // +listType=map
                      \    // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: LastHandledReconcileAt holds the value of the most
                    recent reconcile request value, so a change of the annotation
                    value can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation
                    of the HelmRepository object.
                  format: int64
                  type: integer
                url:
                  description: URL is the dynamic fetch link for the latest Artifact.
                    It is provided on a "best effort" basis, and using the precise
                    HelmRepositoryStatus.Artifact data is recommended.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: HelmRepository
      listKind: HelmRepositoryList
      plural: helmrepositories
      shortNames:
      - helmrepo
      singular: helmrepository
    conditions:
    - lastTransitionTime: "2022-04-12T18:16:18Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2022-04-12T18:16:18Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta2
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.7.0
    creationTimestamp: "2022-04-12T18:16:19Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v0.28.5
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: imagepolicies.image.toolkit.fluxcd.io
    resourceVersion: "10089209"
    uid: 5265e8f9-ca8e-4dfd-a181-8f0d6a373518
  spec:
    conversion:
      strategy: None
    group: image.toolkit.fluxcd.io
    names:
      kind: ImagePolicy
      listKind: ImagePolicyList
      plural: imagepolicies
      singular: imagepolicy
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.latestImage
        name: LatestImage
        type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ImagePolicy is the Schema for the imagepolicies API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ImagePolicySpec defines the parameters for calculating
                the ImagePolicy
              properties:
                filterTags:
                  description: FilterTags enables filtering for only a subset of tags
                    based on a set of rules. If no rules are provided, all the tags
                    from the repository will be ordered and compared.
                  properties:
                    extract:
                      description: Extract allows a capture group to be extracted
                        from the specified regular expression pattern, useful before
                        tag evaluation.
                      type: string
                    pattern:
                      description: Pattern specifies a regular expression pattern
                        used to filter for image tags.
                      type: string
                  type: object
                imageRepositoryRef:
                  description: ImageRepositoryRef points at the object specifying
                    the image being scanned
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                  - name
                  type: object
                policy:
                  description: Policy gives the particulars of the policy to be followed
                    in selecting the most recent image
                  properties:
                    alphabetical:
                      description: Alphabetical set of rules to use for alphabetical
                        ordering of the tags.
                      properties:
                        order:
                          default: asc
                          description: Order specifies the sorting order of the tags.
                            Given the letters of the alphabet as tags, ascending order
                            would select Z, and descending order would select A.
                          enum:
                          - asc
                          - desc
                          type: string
                      type: object
                    numerical:
                      description: Numerical set of rules to use for numerical ordering
                        of the tags.
                      properties:
                        order:
                          default: asc
                          description: Order specifies the sorting order of the tags.
                            Given the integer values from 0 to 9 as tags, ascending
                            order would select 9, and descending order would select
                            0.
                          enum:
                          - asc
                          - desc
                          type: string
                      type: object
                    semver:
                      description: SemVer gives a semantic version range to check
                        against the tags available.
                      properties:
                        range:
                          description: Range gives a semver range for the image tag;
                            the highest version within the range that's a tag yields
                            the latest image.
                          type: string
                      required:
                      - range
                      type: object
                  type: object
              required:
              - imageRepositoryRef
              - policy
              type: object
            status:
              description: ImagePolicyStatus defines the observed state of ImagePolicy
              properties:
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, type FooStatus struct{     // Represents the
                      observations of a foo's current state.     // Known .status.conditions.type
                      are: \"Available\", \"Progressing\", and \"Degraded\"     //
                      +patchMergeKey=type     // +patchStrategy=merge     // +listType=map
                      \    // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                latestImage:
                  description: LatestImage gives the first in the list of images scanned
                    by the image repository, when filtered and ordered according to
                    the policy.
                  type: string
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.latestImage
        name: LatestImage
        type: string
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: ImagePolicy is the Schema for the imagepolicies API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ImagePolicySpec defines the parameters for calculating
                the ImagePolicy
              properties:
                filterTags:
                  description: FilterTags enables filtering for only a subset of tags
                    based on a set of rules. If no rules are provided, all the tags
                    from the repository will be ordered and compared.
                  properties:
                    extract:
                      description: Extract allows a capture group to be extracted
                        from the specified regular expression pattern, useful before
                        tag evaluation.
                      type: string
                    pattern:
                      description: Pattern specifies a regular expression pattern
                        used to filter for image tags.
                      type: string
                  type: object
                imageRepositoryRef:
                  description: ImageRepositoryRef points at the object specifying
                    the image being scanned
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                  - name
                  type: object
                policy:
                  description: Policy gives the particulars of the policy to be followed
                    in selecting the most recent image
                  properties:
                    alphabetical:
                      description: Alphabetical set of rules to use for alphabetical
                        ordering of the tags.
                      properties:
                        order:
                          default: asc
                          description: Order specifies the sorting order of the tags.
                            Given the letters of the alphabet as tags, ascending order
                            would select Z, and descending order would select A.
                          enum:
                          - asc
                          - desc
                          type: string
                      type: object
                    numerical:
                      description: Numerical set of rules to use for numerical ordering
                        of the tags.
                      properties:
                        order:
                          default: asc
                          description: Order specifies the sorting order of the tags.
                            Given the integer values from 0 to 9 as tags, ascending
                            order would select 9, and descending order would select
                            0.
                          enum:
                          - asc
                          - desc
                          type: string
                      type: object
                    semver:
                      description: SemVer gives a semantic version range to check
                        against the tags available.
                      properties:
                        range:
                          description: Range gives a semver range for the image tag;
                            the highest version within the range that's a tag yields
                            the latest image.
                          type: string
                      required:
                      - range
                      type: object
                  type: object
              required:
              - imageRepositoryRef
              - policy
              type: object
            status:
              description: ImagePolicyStatus defines the observed state of ImagePolicy
              properties:
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, type FooStatus struct{     // Represents the
                      observations of a foo's current state.     // Known .status.conditions.type
                      are: \"Available\", \"Progressing\", and \"Degraded\"     //
                      +patchMergeKey=type     // +patchStrategy=merge     // +listType=map
                      \    // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                latestImage:
                  description: LatestImage gives the first in the list of images scanned
                    by the image repository, when filtered and ordered according to
                    the policy.
                  type: string
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.latestImage
        name: LatestImage
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: ImagePolicy is the Schema for the imagepolicies API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ImagePolicySpec defines the parameters for calculating
                the ImagePolicy
              properties:
                filterTags:
                  description: FilterTags enables filtering for only a subset of tags
                    based on a set of rules. If no rules are provided, all the tags
                    from the repository will be ordered and compared.
                  properties:
                    extract:
                      description: Extract allows a capture group to be extracted
                        from the specified regular expression pattern, useful before
                        tag evaluation.
                      type: string
                    pattern:
                      description: Pattern specifies a regular expression pattern
                        used to filter for image tags.
                      type: string
                  type: object
                imageRepositoryRef:
                  description: ImageRepositoryRef points at the object specifying
                    the image being scanned
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                    namespace:
                      description: Namespace of the referent, when not specified it
                        acts as LocalObjectReference.
                      type: string
                  required:
                  - name
                  type: object
                policy:
                  description: Policy gives the particulars of the policy to be followed
                    in selecting the most recent image
                  properties:
                    alphabetical:
                      description: Alphabetical set of rules to use for alphabetical
                        ordering of the tags.
                      properties:
                        order:
                          default: asc
                          description: Order specifies the sorting order of the tags.
                            Given the letters of the alphabet as tags, ascending order
                            would select Z, and descending order would select A.
                          enum:
                          - asc
                          - desc
                          type: string
                      type: object
                    numerical:
                      description: Numerical set of rules to use for numerical ordering
                        of the tags.
                      properties:
                        order:
                          default: asc
                          description: Order specifies the sorting order of the tags.
                            Given the integer values from 0 to 9 as tags, ascending
                            order would select 9, and descending order would select
                            0.
                          enum:
                          - asc
                          - desc
                          type: string
                      type: object
                    semver:
                      description: SemVer gives a semantic version range to check
                        against the tags available.
                      properties:
                        range:
                          description: Range gives a semver range for the image tag;
                            the highest version within the range that's a tag yields
                            the latest image.
                          type: string
                      required:
                      - range
                      type: object
                  type: object
              required:
              - imageRepositoryRef
              - policy
              type: object
            status:
              default:
                observedGeneration: -1
              description: ImagePolicyStatus defines the observed state of ImagePolicy
              properties:
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, type FooStatus struct{     // Represents the
                      observations of a foo's current state.     // Known .status.conditions.type
                      are: \"Available\", \"Progressing\", and \"Degraded\"     //
                      +patchMergeKey=type     // +patchStrategy=merge     // +listType=map
                      \    // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                latestImage:
                  description: LatestImage gives the first in the list of images scanned
                    by the image repository, when filtered and ordered according to
                    the policy.
                  type: string
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ImagePolicy
      listKind: ImagePolicyList
      plural: imagepolicies
      singular: imagepolicy
    conditions:
    - lastTransitionTime: "2022-04-12T18:16:19Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2022-04-12T18:16:19Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.7.0
    creationTimestamp: "2022-04-12T18:16:20Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v0.28.5
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: imagerepositories.image.toolkit.fluxcd.io
    resourceVersion: "10089210"
    uid: a756014e-6c9d-4a76-8652-8362b5187ff7
  spec:
    conversion:
      strategy: None
    group: image.toolkit.fluxcd.io
    names:
      kind: ImageRepository
      listKind: ImageRepositoryList
      plural: imagerepositories
      singular: imagerepository
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.lastScanResult.scanTime
        name: Last scan
        type: string
      - jsonPath: .status.lastScanResult.tagCount
        name: Tags
        type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ImageRepository is the Schema for the imagerepositories API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ImageRepositorySpec defines the parameters for scanning
                an image repository, e.g., `fluxcd/flux`.
              properties:
                certSecretRef:
                  description: "CertSecretRef can be given the name of a secret containing
                    either or both of \n  - a PEM-encoded client certificate (`certFile`)
                    and private  key (`keyFile`);  - a PEM-encoded CA certificate
                    (`caFile`) \n  and whichever are supplied, will be used for connecting
                    to the  registry. The client cert and key are useful if you are
                    \ authenticating with a certificate; the CA cert is useful if
                    \ you are using a self-signed server certificate."
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                  - name
                  type: object
                image:
                  description: Image is the name of the image repository
                  type: string
                interval:
                  description: Interval is the length of time to wait between scans
                    of the image repository.
                  type: string
                secretRef:
                  description: SecretRef can be given the name of a secret containing
                    credentials to use for the image registry. The secret should be
                    created with `kubectl create secret docker-registry`, or the equivalent.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                  - name
                  type: object
                suspend:
                  description: This flag tells the controller to suspend subsequent
                    image scans. It does not apply to already started scans. Defaults
                    to false.
                  type: boolean
                timeout:
                  description: Timeout for image scanning. Defaults to 'Interval'
                    duration.
                  type: string
              type: object
            status:
              description: ImageRepositoryStatus defines the observed state of ImageRepository
              properties:
                canonicalImageName:
                  description: CanonicalName is the name of the image repository with
                    all the implied bits made explicit; e.g., `docker.io/library/alpine`
                    rather than `alpine`.
                  type: string
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, type FooStatus struct{     // Represents the
                      observations of a foo's current state.     // Known .status.conditions.type
                      are: \"Available\", \"Progressing\", and \"Degraded\"     //
                      +patchMergeKey=type     // +patchStrategy=merge     // +listType=map
                      \    // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: LastHandledReconcileAt holds the value of the most
                    recent reconcile request value, so a change of the annotation
                    value can be detected.
                  type: string
                lastScanResult:
                  description: LastScanResult contains the number of fetched tags.
                  properties:
                    scanTime:
                      format: date-time
                      type: string
                    tagCount:
                      type: integer
                  required:
                  - tagCount
                  type: object
                observedGeneration:
                  description: ObservedGeneration is the last reconciled generation.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.lastScanResult.scanTime
        name: Last scan
        type: string
      - jsonPath: .status.lastScanResult.tagCount
        name: Tags
        type: string
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: ImageRepository is the Schema for the imagerepositories API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ImageRepositorySpec defines the parameters for scanning
                an image repository, e.g., `fluxcd/flux`.
              properties:
                certSecretRef:
                  description: "CertSecretRef can be given the name of a secret containing
                    either or both of \n  - a PEM-encoded client certificate (`certFile`)
                    and private  key (`keyFile`);  - a PEM-encoded CA certificate
                    (`caFile`) \n  and whichever are supplied, will be used for connecting
                    to the  registry. The client cert and key are useful if you are
                    \ authenticating with a certificate; the CA cert is useful if
                    \ you are using a self-signed server certificate."
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                  - name
                  type: object
                image:
                  description: Image is the name of the image repository
                  type: string
                interval:
                  description: Interval is the length of time to wait between scans
                    of the image repository.
                  type: string
                secretRef:
                  description: SecretRef can be given the name of a secret containing
                    credentials to use for the image registry. The secret should be
                    created with `kubectl create secret docker-registry`, or the equivalent.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                  - name
                  type: object
                suspend:
                  description: This flag tells the controller to suspend subsequent
                    image scans. It does not apply to already started scans. Defaults
                    to false.
                  type: boolean
                timeout:
                  description: Timeout for image scanning. Defaults to 'Interval'
                    duration.
                  type: string
              type: object
            status:
              description: ImageRepositoryStatus defines the observed state of ImageRepository
              properties:
                canonicalImageName:
                  description: CanonicalName is the name of the image repository with
                    all the implied bits made explicit; e.g., `docker.io/library/alpine`
                    rather than `alpine`.
                  type: string
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, type FooStatus struct{     // Represents the
                      observations of a foo's current state.     // Known .status.conditions.type
                      are: \"Available\", \"Progressing\", and \"Degraded\"     //
                      +patchMergeKey=type     // +patchStrategy=merge     // +listType=map
                      \    // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: LastHandledReconcileAt holds the value of the most
                    recent reconcile request value, so a change of the annotation
                    value can be detected.
                  type: string
                lastScanResult:
                  description: LastScanResult contains the number of fetched tags.
                  properties:
                    scanTime:
                      format: date-time
                      type: string
                    tagCount:
                      type: integer
                  required:
                  - tagCount
                  type: object
                observedGeneration:
                  description: ObservedGeneration is the last reconciled generation.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.lastScanResult.scanTime
        name: Last scan
        type: string
      - jsonPath: .status.lastScanResult.tagCount
        name: Tags
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: ImageRepository is the Schema for the imagerepositories API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ImageRepositorySpec defines the parameters for scanning
                an image repository, e.g., `fluxcd/flux`.
              properties:
                accessFrom:
                  description: AccessFrom defines an ACL for allowing cross-namespace
                    references to the ImageRepository object based on the caller's
                    namespace labels.
                  properties:
                    namespaceSelectors:
                      description: NamespaceSelectors is the list of namespace selectors
                        to which this ACL applies. Items in this list are evaluated
                        using a logical OR operation.
                      items:
                        description: NamespaceSelector selects the namespaces to which
                          this ACL applies. An empty map of MatchLabels matches all
                          namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                  - namespaceSelectors
                  type: object
                certSecretRef:
                  description: "CertSecretRef can be given the name of a secret containing
                    either or both of \n  - a PEM-encoded client certificate (`certFile`)
                    and private  key (`keyFile`);  - a PEM-encoded CA certificate
                    (`caFile`) \n  and whichever are supplied, will be used for connecting
                    to the  registry. The client cert and key are useful if you are
                    \ authenticating with a certificate; the CA cert is useful if
                    \ you are using a self-signed server certificate."
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                  - name
                  type: object
                image:
                  description: Image is the name of the image repository
                  type: string
                interval:
                  description: Interval is the length of time to wait between scans
                    of the image repository.
                  type: string
                secretRef:
                  description: SecretRef can be given the name of a secret containing
                    credentials to use for the image registry. The secret should be
                    created with `kubectl create secret docker-registry`, or the equivalent.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                  - name
                  type: object
                suspend:
                  description: This flag tells the controller to suspend subsequent
                    image scans. It does not apply to already started scans. Defaults
                    to false.
                  type: boolean
                timeout:
                  description: Timeout for image scanning. Defaults to 'Interval'
                    duration.
                  type: string
              type: object
            status:
              default:
                observedGeneration: -1
              description: ImageRepositoryStatus defines the observed state of ImageRepository
              properties:
                canonicalImageName:
                  description: CanonicalName is the name of the image repository with
                    all the implied bits made explicit; e.g., `docker.io/library/alpine`
                    rather than `alpine`.
                  type: string
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, type FooStatus struct{     // Represents the
                      observations of a foo's current state.     // Known .status.conditions.type
                      are: \"Available\", \"Progressing\", and \"Degraded\"     //
                      +patchMergeKey=type     // +patchStrategy=merge     // +listType=map
                      \    // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: LastHandledReconcileAt holds the value of the most
                    recent reconcile request value, so a change of the annotation
                    value can be detected.
                  type: string
                lastScanResult:
                  description: LastScanResult contains the number of fetched tags.
                  properties:
                    scanTime:
                      format: date-time
                      type: string
                    tagCount:
                      type: integer
                  required:
                  - tagCount
                  type: object
                observedGeneration:
                  description: ObservedGeneration is the last reconciled generation.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ImageRepository
      listKind: ImageRepositoryList
      plural: imagerepositories
      singular: imagerepository
    conditions:
    - lastTransitionTime: "2022-04-12T18:16:20Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2022-04-12T18:16:20Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.7.0
    creationTimestamp: "2022-04-12T18:16:18Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v0.28.5
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: imageupdateautomations.image.toolkit.fluxcd.io
    resourceVersion: "10089211"
    uid: f85a5a3b-a851-4980-941a-5fb9d0e3b396
  spec:
    conversion:
      strategy: None
    group: image.toolkit.fluxcd.io
    names:
      kind: ImageUpdateAutomation
      listKind: ImageUpdateAutomationList
      plural: imageupdateautomations
      singular: imageupdateautomation
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.lastAutomationRunTime
        name: Last run
        type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ImageUpdateAutomation is the Schema for the imageupdateautomations
            API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ImageUpdateAutomationSpec defines the desired state of
                ImageUpdateAutomation
              properties:
                checkout:
                  description: Checkout gives the parameters for cloning the git repository,
                    ready to make changes.
                  properties:
                    branch:
                      description: Branch gives the branch to clone from the git repository.
                        If `.spec.push` is not supplied, commits will also be pushed
                        to this branch.
                      type: string
                    gitRepositoryRef:
                      description: GitRepositoryRef refers to the resource giving
                        access details to a git repository to update files in.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - branch
                  - gitRepositoryRef
                  type: object
                commit:
                  description: Commit specifies how to commit to the git repository.
                  properties:
                    authorEmail:
                      description: AuthorEmail gives the email to provide when making
                        a commit
                      type: string
                    authorName:
                      description: AuthorName gives the name to provide when making
                        a commit
                      type: string
                    messageTemplate:
                      description: MessageTemplate provides a template for the commit
                        message, into which will be interpolated the details of the
                        change made.
                      type: string
                    signingKey:
                      description: SigningKey provides the option to sign commits
                        with a GPG key
                      properties:
                        secretRef:
                          description: SecretRef holds the name to a secret that contains
                            a 'git.asc' key corresponding to the ASCII Armored file
                            containing the GPG signing keypair as the value. It must
                            be in the same namespace as the ImageUpdateAutomation.
                          properties:
                            name:
                              description: Name of the referent.
                              type: string
                          required:
                          - name
                          type: object
                      type: object
                  required:
                  - authorEmail
                  - authorName
                  type: object
                interval:
                  description: Interval gives an lower bound for how often the automation
                    run should be attempted.
                  type: string
                push:
                  description: Push specifies how and where to push commits made by
                    the automation. If missing, commits are pushed (back) to `.spec.checkout.branch`.
                  properties:
                    branch:
                      description: Branch specifies that commits should be pushed
                        to the branch named. The branch is created using `.spec.checkout.branch`
                        as the starting point, if it doesn't already exist.
                      type: string
                  required:
                  - branch
                  type: object
                suspend:
                  description: Suspend tells the controller to not run this automation,
                    until it is unset (or set to false). Defaults to false.
                  type: boolean
                update:
                  default:
                    strategy: Setters
                  description: Update gives the specification for how to update the
                    files in the repository. This can be left empty, to use the default
                    value.
                  properties:
                    path:
                      description: Path to the directory containing the manifests
                        to be updated. Defaults to 'None', which translates to the
                        root path of the GitRepositoryRef.
                      type: string
                    strategy:
                      default: Setters
                      description: Strategy names the strategy to be used.
                      enum:
                      - Setters
                      type: string
                  required:
                  - strategy
                  type: object
              required:
              - checkout
              - commit
              - interval
              type: object
            status:
              description: ImageUpdateAutomationStatus defines the observed state
                of ImageUpdateAutomation
              properties:
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, type FooStatus struct{     // Represents the
                      observations of a foo's current state.     // Known .status.conditions.type
                      are: \"Available\", \"Progressing\", and \"Degraded\"     //
                      +patchMergeKey=type     // +patchStrategy=merge     // +listType=map
                      \    // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                lastAutomationRunTime:
                  description: LastAutomationRunTime records the last time the controller
                    ran this automation through to completion (even if no updates
                    were made).
                  format: date-time
                  type: string
                lastHandledReconcileAt:
                  description: LastHandledReconcileAt holds the value of the most
                    recent reconcile request value, so a change of the annotation
                    value can be detected.
                  type: string
                lastPushCommit:
                  description: LastPushCommit records the SHA1 of the last commit
                    made by the controller, for this automation object
                  type: string
                lastPushTime:
                  description: LastPushTime records the time of the last pushed change.
                  format: date-time
                  type: string
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.lastAutomationRunTime
        name: Last run
        type: string
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: ImageUpdateAutomation is the Schema for the imageupdateautomations
            API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ImageUpdateAutomationSpec defines the desired state of
                ImageUpdateAutomation
              properties:
                git:
                  description: GitSpec contains all the git-specific definitions.
                    This is technically optional, but in practice mandatory until
                    there are other kinds of source allowed.
                  properties:
                    checkout:
                      description: Checkout gives the parameters for cloning the git
                        repository, ready to make changes. If not present, the `spec.ref`
                        field from the referenced `GitRepository` or its default will
                        be used.
                      properties:
                        ref:
                          description: Reference gives a branch, tag or commit to
                            clone from the Git repository.
                          properties:
                            branch:
                              description: The Git branch to checkout, defaults to
                                master.
                              type: string
                            commit:
                              description: The Git commit SHA to checkout, if specified
                                Tag filters will be ignored.
                              type: string
                            semver:
                              description: The Git tag semver expression, takes precedence
                                over Tag.
                              type: string
                            tag:
                              description: The Git tag to checkout, takes precedence
                                over Branch.
                              type: string
                          type: object
                      required:
                      - ref
                      type: object
                    commit:
                      description: Commit specifies how to commit to the git repository.
                      properties:
                        author:
                          description: Author gives the email and optionally the name
                            to use as the author of commits.
                          properties:
                            email:
                              description: Email gives the email to provide when making
                                a commit.
                              type: string
                            name:
                              description: Name gives the name to provide when making
                                a commit.
                              type: string
                          required:
                          - email
                          type: object
                        messageTemplate:
                          description: MessageTemplate provides a template for the
                            commit message, into which will be interpolated the details
                            of the change made.
                          type: string
                        signingKey:
                          description: SigningKey provides the option to sign commits
                            with a GPG key
                          properties:
                            secretRef:
                              description: SecretRef holds the name to a secret that
                                contains a 'git.asc' key corresponding to the ASCII
                                Armored file containing the GPG signing keypair as
                                the value. It must be in the same namespace as the
                                ImageUpdateAutomation.
                              properties:
                                name:
                                  description: Name of the referent.
                                  type: string
                              required:
                              - name
                              type: object
                          type: object
                      required:
                      - author
                      type: object
                    push:
                      description: Push specifies how and where to push commits made
                        by the automation. If missing, commits are pushed (back) to
                        `.spec.checkout.branch` or its default.
                      properties:
                        branch:
                          description: Branch specifies that commits should be pushed
                            to the branch named. The branch is created using `.spec.checkout.branch`
                            as the starting point, if it doesn't already exist.
                          type: string
                      required:
                      - branch
                      type: object
                  required:
                  - commit
                  type: object
                interval:
                  description: Interval gives an lower bound for how often the automation
                    run should be attempted.
                  type: string
                sourceRef:
                  description: SourceRef refers to the resource giving access details
                    to a git repository.
                  properties:
                    apiVersion:
                      description: API version of the referent
                      type: string
                    kind:
                      default: GitRepository
                      description: Kind of the referent
                      enum:
                      - GitRepository
                      type: string
                    name:
                      description: Name of the referent
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                suspend:
                  description: Suspend tells the controller to not run this automation,
                    until it is unset (or set to false). Defaults to false.
                  type: boolean
                update:
                  default:
                    strategy: Setters
                  description: Update gives the specification for how to update the
                    files in the repository. This can be left empty, to use the default
                    value.
                  properties:
                    path:
                      description: Path to the directory containing the manifests
                        to be updated. Defaults to 'None', which translates to the
                        root path of the GitRepositoryRef.
                      type: string
                    strategy:
                      default: Setters
                      description: Strategy names the strategy to be used.
                      enum:
                      - Setters
                      type: string
                  required:
                  - strategy
                  type: object
              required:
              - interval
              - sourceRef
              type: object
            status:
              description: ImageUpdateAutomationStatus defines the observed state
                of ImageUpdateAutomation
              properties:
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, type FooStatus struct{     // Represents the
                      observations of a foo's current state.     // Known .status.conditions.type
                      are: \"Available\", \"Progressing\", and \"Degraded\"     //
                      +patchMergeKey=type     // +patchStrategy=merge     // +listType=map
                      \    // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                lastAutomationRunTime:
                  description: LastAutomationRunTime records the last time the controller
                    ran this automation through to completion (even if no updates
                    were made).
                  format: date-time
                  type: string
                lastHandledReconcileAt:
                  description: LastHandledReconcileAt holds the value of the most
                    recent reconcile request value, so a change of the annotation
                    value can be detected.
                  type: string
                lastPushCommit:
                  description: LastPushCommit records the SHA1 of the last commit
                    made by the controller, for this automation object
                  type: string
                lastPushTime:
                  description: LastPushTime records the time of the last pushed change.
                  format: date-time
                  type: string
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.lastAutomationRunTime
        name: Last run
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: ImageUpdateAutomation is the Schema for the imageupdateautomations
            API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ImageUpdateAutomationSpec defines the desired state of
                ImageUpdateAutomation
              properties:
                git:
                  description: GitSpec contains all the git-specific definitions.
                    This is technically optional, but in practice mandatory until
                    there are other kinds of source allowed.
                  properties:
                    checkout:
                      description: Checkout gives the parameters for cloning the git
                        repository, ready to make changes. If not present, the `spec.ref`
                        field from the referenced `GitRepository` or its default will
                        be used.
                      properties:
                        ref:
                          description: Reference gives a branch, tag or commit to
                            clone from the Git repository.
                          properties:
                            branch:
                              description: "Branch to check out, defaults to 'master'
                                if no other field is defined. \n When GitRepositorySpec.GitImplementation
                                is set to 'go-git', a shallow clone of the specified
                                branch is performed."
                              type: string
                            commit:
                              description: "Commit SHA to check out, takes precedence
                                over all reference fields. \n When GitRepositorySpec.GitImplementation
                                is set to 'go-git', this can be combined with Branch
                                to shallow clone the branch, in which the commit is
                                expected to exist."
                              type: string
                            semver:
                              description: SemVer tag expression to check out, takes
                                precedence over Tag.
                              type: string
                            tag:
                              description: Tag to check out, takes precedence over
                                Branch.
                              type: string
                          type: object
                      required:
                      - ref
                      type: object
                    commit:
                      description: Commit specifies how to commit to the git repository.
                      properties:
                        author:
                          description: Author gives the email and optionally the name
                            to use as the author of commits.
                          properties:
                            email:
                              description: Email gives the email to provide when making
                                a commit.
                              type: string
                            name:
                              description: Name gives the name to provide when making
                                a commit.
                              type: string
                          required:
                          - email
                          type: object
                        messageTemplate:
                          description: MessageTemplate provides a template for the
                            commit message, into which will be interpolated the details
                            of the change made.
                          type: string
                        signingKey:
                          description: SigningKey provides the option to sign commits
                            with a GPG key
                          properties:
                            secretRef:
                              description: SecretRef holds the name to a secret that
                                contains a 'git.asc' key corresponding to the ASCII
                                Armored file containing the GPG signing keypair as
                                the value. It must be in the same namespace as the
                                ImageUpdateAutomation.
                              properties:
                                name:
                                  description: Name of the referent.
                                  type: string
                              required:
                              - name
                              type: object
                          type: object
                      required:
                      - author
                      type: object
                    push:
                      description: Push specifies how and where to push commits made
                        by the automation. If missing, commits are pushed (back) to
                        `.spec.checkout.branch` or its default.
                      properties:
                        branch:
                          description: Branch specifies that commits should be pushed
                            to the branch named. The branch is created using `.spec.checkout.branch`
                            as the starting point, if it doesn't already exist.
                          type: string
                      required:
                      - branch
                      type: object
                  required:
                  - commit
                  type: object
                interval:
                  description: Interval gives an lower bound for how often the automation
                    run should be attempted.
                  type: string
                sourceRef:
                  description: SourceRef refers to the resource giving access details
                    to a git repository.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    kind:
                      default: GitRepository
                      description: Kind of the referent.
                      enum:
                      - GitRepository
                      type: string
                    name:
                      description: Name of the referent.
                      type: string
                    namespace:
                      description: Namespace of the referent, defaults to the namespace
                        of the Kubernetes resource object that contains the reference.
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                suspend:
                  description: Suspend tells the controller to not run this automation,
                    until it is unset (or set to false). Defaults to false.
                  type: boolean
                update:
                  default:
                    strategy: Setters
                  description: Update gives the specification for how to update the
                    files in the repository. This can be left empty, to use the default
                    value.
                  properties:
                    path:
                      description: Path to the directory containing the manifests
                        to be updated. Defaults to 'None', which translates to the
                        root path of the GitRepositoryRef.
                      type: string
                    strategy:
                      default: Setters
                      description: Strategy names the strategy to be used.
                      enum:
                      - Setters
                      type: string
                  required:
                  - strategy
                  type: object
              required:
              - interval
              - sourceRef
              type: object
            status:
              default:
                observedGeneration: -1
              description: ImageUpdateAutomationStatus defines the observed state
                of ImageUpdateAutomation
              properties:
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, type FooStatus struct{     // Represents the
                      observations of a foo's current state.     // Known .status.conditions.type
                      are: \"Available\", \"Progressing\", and \"Degraded\"     //
                      +patchMergeKey=type     // +patchStrategy=merge     // +listType=map
                      \    // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                lastAutomationRunTime:
                  description: LastAutomationRunTime records the last time the controller
                    ran this automation through to completion (even if no updates
                    were made).
                  format: date-time
                  type: string
                lastHandledReconcileAt:
                  description: LastHandledReconcileAt holds the value of the most
                    recent reconcile request value, so a change of the annotation
                    value can be detected.
                  type: string
                lastPushCommit:
                  description: LastPushCommit records the SHA1 of the last commit
                    made by the controller, for this automation object
                  type: string
                lastPushTime:
                  description: LastPushTime records the time of the last pushed change.
                  format: date-time
                  type: string
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ImageUpdateAutomation
      listKind: ImageUpdateAutomationList
      plural: imageupdateautomations
      singular: imageupdateautomation
    conditions:
    - lastTransitionTime: "2022-04-12T18:16:18Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2022-04-12T18:16:18Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      cert-manager.io/inject-ca-from-secret: cert-manager/cert-manager-webhook-ca
    creationTimestamp: "2022-04-12T18:17:08Z"
    generation: 1
    labels:
      app: cert-manager
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.5.4
      kustomize.toolkit.fluxcd.io/name: cert-manager-kustomization
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: issuers.cert-manager.io
    resourceVersion: "10089381"
    uid: eb6dd9ac-6fb2-4d25-8c52-c5c12932b653
  spec:
    conversion:
      strategy: Webhook
      webhook:
        clientConfig:
          service:
            name: cert-manager-webhook
            namespace: cert-manager
            path: /convert
            port: 443
        conversionReviewVersions:
        - v1
        - v1beta1
    group: cert-manager.io
    names:
      categories:
      - cert-manager
      kind: Issuer
      listKind: IssuerList
      plural: issuers
      singular: issuer
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: An Issuer represents a certificate issuing authority which
            can be referenced as part of `issuerRef` fields. It is scoped to a single
            namespace and can therefore only be referenced by resources within the
            same namespace.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the Issuer resource.
              properties:
                acme:
                  description: ACME configures this issuer to communicate with a RFC8555
                    (ACME) server to obtain signed x509 certificates.
                  properties:
                    disableAccountKeyGeneration:
                      description: Enables or disables generating a new ACME account
                        key. If true, the Issuer resource will *not* request a new
                        account but will expect the account key to be supplied via
                        an existing secret. If false, the cert-manager system will
                        generate a new ACME account key for the Issuer. Defaults to
                        false.
                      type: boolean
                    email:
                      description: Email is the email address to be associated with
                        the ACME account. This field is optional, but it is strongly
                        recommended to be set. It will be used to contact you in case
                        of issues with your account or certificates, including expiry
                        notification emails. This field may be updated after the account
                        is initially registered.
                      type: string
                    enableDurationFeature:
                      description: Enables requesting a Not After date on certificates
                        that matches the duration of the certificate. This is not
                        supported by all ACME servers like Let's Encrypt. If set to
                        true when the ACME server does not support it it will create
                        an error on the Order. Defaults to false.
                      type: boolean
                    externalAccountBinding:
                      description: ExternalAccountBinding is a reference to a CA external
                        account of the ACME server. If set, upon registration cert-manager
                        will attempt to associate the given external account credentials
                        with the registered ACME account.
                      properties:
                        keyAlgorithm:
                          description: 'Deprecated: keyAlgorithm field exists for
                            historical compatibility reasons and should not be used.
                            The algorithm is now hardcoded to HS256 in golang/x/crypto/acme.'
                          enum:
                          - HS256
                          - HS384
                          - HS512
                          type: string
                        keyID:
                          description: keyID is the ID of the CA key that the External
                            Account is bound to.
                          type: string
                        keySecretRef:
                          description: keySecretRef is a Secret Key Selector referencing
                            a data item in a Kubernetes Secret which holds the symmetric
                            MAC key of the External Account Binding. The `key` is
                            the index string that is paired with the key data in the
                            Secret and should not be confused with the key data itself,
                            or indeed with the External Account Binding keyID above.
                            The secret key stored in the Secret **must** be un-padded,
                            base64 URL encoded data.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - keyID
                      - keySecretRef
                      type: object
                    preferredChain:
                      description: 'PreferredChain is the chain to use if the ACME
                        server outputs multiple. PreferredChain is no guarantee that
                        this one gets delivered by the ACME endpoint. For example,
                        for Let''s Encrypt''s DST crosssign you would use: "DST Root
                        CA X3" or "ISRG Root X1" for the newer Let''s Encrypt root
                        CA. This value picks the first certificate bundle in the ACME
                        alternative chains that has a certificate with this value
                        as its issuer''s CN'
                      maxLength: 64
                      type: string
                    privateKeySecretRef:
                      description: PrivateKey is the name of a Kubernetes Secret resource
                        that will be used to store the automatically generated ACME
                        account private key. Optionally, a `key` may be specified
                        to select a specific entry within the named Secret resource.
                        If `key` is not specified, a default of `tls.key` will be
                        used.
                      properties:
                        key:
                          description: The key of the entry in the Secret resource's
                            `data` field to be used. Some instances of this field
                            may be defaulted, in others it may be required.
                          type: string
                        name:
                          description: 'Name of the resource being referred to. More
                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                      required:
                      - name
                      type: object
                    server:
                      description: 'Server is the URL used to access the ACME server''s
                        ''directory'' endpoint. For example, for Let''s Encrypt''s
                        staging endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory".
                        Only ACME v2 endpoints (i.e. RFC 8555) are supported.'
                      type: string
                    skipTLSVerify:
                      description: Enables or disables validation of the ACME server
                        TLS certificate. If true, requests to the ACME server will
                        not have their TLS certificate validated (i.e. insecure connections
                        will be allowed). Only enable this option in development environments.
                        The cert-manager system installed roots will be used to verify
                        connections to the ACME server if this is false. Defaults
                        to false.
                      type: boolean
                    solvers:
                      description: 'Solvers is a list of challenge solvers that will
                        be used to solve ACME challenges for the matching domains.
                        Solver configurations must be provided in order to obtain
                        certificates from an ACME server. For more information, see:
                        https://cert-manager.io/docs/configuration/acme/'
                      items:
                        description: Configures an issuer to solve challenges using
                          the specified options. Only one of HTTP01 or DNS01 may be
                          provided.
                        properties:
                          dns01:
                            description: Configures cert-manager to attempt to complete
                              authorizations by performing the DNS01 challenge flow.
                            properties:
                              acmedns:
                                description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)
                                  API to manage DNS01 challenge records.
                                properties:
                                  accountSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  host:
                                    type: string
                                required:
                                - accountSecretRef
                                - host
                                type: object
                              akamai:
                                description: Use the Akamai DNS zone management API
                                  to manage DNS01 challenge records.
                                properties:
                                  accessTokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientSecretSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientTokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  serviceConsumerDomain:
                                    type: string
                                required:
                                - accessTokenSecretRef
                                - clientSecretSecretRef
                                - clientTokenSecretRef
                                - serviceConsumerDomain
                                type: object
                              azuredns:
                                description: Use the Microsoft Azure DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  clientID:
                                    description: if both this and ClientSecret are
                                      left unset MSI will be used
                                    type: string
                                  clientSecretSecretRef:
                                    description: if both this and ClientID are left
                                      unset MSI will be used
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  environment:
                                    enum:
                                    - AzurePublicCloud
                                    - AzureChinaCloud
                                    - AzureGermanCloud
                                    - AzureUSGovernmentCloud
                                    type: string
                                  hostedZoneName:
                                    type: string
                                  resourceGroupName:
                                    type: string
                                  subscriptionID:
                                    type: string
                                  tenantID:
                                    description: when specifying ClientID and ClientSecret
                                      then this field is also needed
                                    type: string
                                required:
                                - resourceGroupName
                                - subscriptionID
                                type: object
                              clouddns:
                                description: Use the Google Cloud DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  hostedZoneName:
                                    description: HostedZoneName is an optional field
                                      that tells cert-manager in which Cloud DNS zone
                                      the challenge record has to be created. If left
                                      empty cert-manager will automatically choose
                                      a zone.
                                    type: string
                                  project:
                                    type: string
                                  serviceAccountSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - project
                                type: object
                              cloudflare:
                                description: Use the Cloudflare API to manage DNS01
                                  challenge records.
                                properties:
                                  apiKeySecretRef:
                                    description: 'API key to use to authenticate with
                                      Cloudflare. Note: using an API token to authenticate
                                      is now the recommended method as it allows greater
                                      control of permissions.'
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  apiTokenSecretRef:
                                    description: API token used to authenticate with
                                      Cloudflare.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  email:
                                    description: Email of the account, only required
                                      when using API key based authentication.
                                    type: string
                                type: object
                              cnameStrategy:
                                description: CNAMEStrategy configures how the DNS01
                                  provider should handle CNAME records when found
                                  in DNS zones.
                                enum:
                                - None
                                - Follow
                                type: string
                              digitalocean:
                                description: Use the DigitalOcean DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  tokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - tokenSecretRef
                                type: object
                              rfc2136:
                                description: Use RFC2136 ("Dynamic Updates in the
                                  Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/)
                                  to manage DNS01 challenge records.
                                properties:
                                  nameserver:
                                    description: The IP address or hostname of an
                                      authoritative DNS server supporting RFC2136
                                      in the form host:port. If the host is an IPv6
                                      address it must be enclosed in square brackets
                                      (e.g [2001:db8::1])┬á; port is optional. This
                                      field is required.
                                    type: string
                                  tsigAlgorithm:
                                    description: 'The TSIG Algorithm configured in
                                      the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef``
                                      and ``tsigKeyName`` are defined. Supported values
                                      are (case-insensitive): ``HMACMD5`` (default),
                                      ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.'
                                    type: string
                                  tsigKeyName:
                                    description: The TSIG Key name configured in the
                                      DNS. If ``tsigSecretSecretRef`` is defined,
                                      this field is required.
                                    type: string
                                  tsigSecretSecretRef:
                                    description: The name of the secret containing
                                      the TSIG value. If ``tsigKeyName`` is defined,
                                      this field is required.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - nameserver
                                type: object
                              route53:
                                description: Use the AWS Route53 API to manage DNS01
                                  challenge records.
                                properties:
                                  accessKeyID:
                                    description: 'The AccessKeyID is used for authentication.
                                      If not set we fall-back to using env vars, shared
                                      credentials file or AWS Instance metadata see:
                                      https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                    type: string
                                  hostedZoneID:
                                    description: If set, the provider will manage
                                      only this zone in Route53 and will not do an
                                      lookup using the route53:ListHostedZonesByName
                                      api call.
                                    type: string
                                  region:
                                    description: Always set the region when using
                                      AccessKeyID and SecretAccessKey
                                    type: string
                                  role:
                                    description: Role is a Role ARN which the Route53
                                      provider will assume using either the explicit
                                      credentials AccessKeyID/SecretAccessKey or the
                                      inferred credentials from environment variables,
                                      shared credentials file or AWS Instance metadata
                                    type: string
                                  secretAccessKeySecretRef:
                                    description: The SecretAccessKey is used for authentication.
                                      If not set we fall-back to using env vars, shared
                                      credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - region
                                type: object
                              webhook:
                                description: Configure an external webhook based DNS01
                                  challenge solver to manage DNS01 challenge records.
                                properties:
                                  config:
                                    description: Additional configuration that should
                                      be passed to the webhook apiserver when challenges
                                      are processed. This can contain arbitrary JSON
                                      data. Secret values should not be specified
                                      in this stanza. If secret values are needed
                                      (e.g. credentials for a DNS service), you should
                                      use a SecretKeySelector to reference a Secret
                                      resource. For details on the schema of this
                                      field, consult the webhook provider implementation's
                                      documentation.
                                    x-kubernetes-preserve-unknown-fields: true
                                  groupName:
                                    description: The API group name that should be
                                      used when POSTing ChallengePayload resources
                                      to the webhook apiserver. This should be the
                                      same as the GroupName specified in the webhook
                                      provider implementation.
                                    type: string
                                  solverName:
                                    description: The name of the solver to use, as
                                      defined in the webhook provider implementation.
                                      This will typically be the name of the provider,
                                      e.g. 'cloudflare'.
                                    type: string
                                required:
                                - groupName
                                - solverName
                                type: object
                            type: object
                          http01:
                            description: Configures cert-manager to attempt to complete
                              authorizations by performing the HTTP01 challenge flow.
                              It is not possible to obtain certificates for wildcard
                              domain names (e.g. `*.example.com`) using the HTTP01
                              challenge mechanism.
                            properties:
                              gatewayHTTPRoute:
                                description: The Gateway API is a sig-network community
                                  API that models service networking in Kubernetes
                                  (https://gateway-api.sigs.k8s.io/). The Gateway
                                  solver will create HTTPRoutes with the specified
                                  labels in the same namespace as the challenge. This
                                  solver is experimental, and fields / behaviour may
                                  change in the future.
                                properties:
                                  labels:
                                    additionalProperties:
                                      type: string
                                    description: The labels that cert-manager will
                                      use when creating the temporary HTTPRoute needed
                                      for solving the HTTP-01 challenge. These labels
                                      must match the label selector of at least one
                                      Gateway.
                                    type: object
                                  serviceType:
                                    description: Optional service type for Kubernetes
                                      solver service. Supported values are NodePort
                                      or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                              ingress:
                                description: The ingress based HTTP01 challenge solver
                                  will solve challenges by creating or modifying Ingress
                                  resources in order to route requests for '/.well-known/acme-challenge/XYZ'
                                  to 'challenge solver' pods that are provisioned
                                  by cert-manager for each Challenge to be completed.
                                properties:
                                  class:
                                    description: The ingress class to use when creating
                                      Ingress resources to solve ACME challenges that
                                      use this challenge solver. Only one of 'class'
                                      or 'name' may be specified.
                                    type: string
                                  ingressTemplate:
                                    description: Optional ingress template used to
                                      configure the ACME challenge solver ingress
                                      used for HTTP01 challenges
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the
                                          ingress used to solve HTTP01 challenges.
                                          Only the 'labels' and 'annotations' fields
                                          may be set. If labels or annotations overlap
                                          with in-built values, the values here will
                                          override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be
                                              added to the created ACME HTTP01 solver
                                              ingress.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added
                                              to the created ACME HTTP01 solver ingress.
                                            type: object
                                        type: object
                                    type: object
                                  name:
                                    description: The name of the ingress resource
                                      that should have ACME challenge solving routes
                                      inserted into it in order to solve HTTP01 challenges.
                                      This is typically used in conjunction with ingress
                                      controllers like ingress-gce, which maintains
                                      a 1:1 mapping between external IPs and ingress
                                      resources.
                                    type: string
                                  podTemplate:
                                    description: Optional pod template used to configure
                                      the ACME challenge solver pods used for HTTP01
                                      challenges.
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the
                                          pod used to solve HTTP01 challenges. Only
                                          the 'labels' and 'annotations' fields may
                                          be set. If labels or annotations overlap
                                          with in-built values, the values here will
                                          override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be
                                              added to the create ACME HTTP01 solver
                                              pods.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added
                                              to the created ACME HTTP01 solver pods.
                                            type: object
                                        type: object
                                      spec:
                                        description: PodSpec defines overrides for
                                          the HTTP01 challenge solver pod. Only the
                                          'priorityClassName', 'nodeSelector', 'affinity',
                                          'serviceAccountName' and 'tolerations' fields
                                          are supported currently. All other fields
                                          will be ignored.
                                        properties:
                                          affinity:
                                            description: If specified, the pod's scheduling
                                              constraints
                                            properties:
                                              nodeAffinity:
                                                description: Describes node affinity
                                                  scheduling rules for the pod.
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      matches the corresponding matchExpressions;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: An empty preferred
                                                        scheduling term matches all
                                                        objects with implicit weight
                                                        0 (i.e. it's a no-op). A null
                                                        preferred scheduling term
                                                        matches no objects (i.e. is
                                                        also a no-op).
                                                      properties:
                                                        preference:
                                                          description: A node selector
                                                            term, associated with
                                                            the corresponding weight.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                        weight:
                                                          description: Weight associated
                                                            with matching the corresponding
                                                            nodeSelectorTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - preference
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to an update), the system
                                                      may or may not try to eventually
                                                      evict the pod from its node.
                                                    properties:
                                                      nodeSelectorTerms:
                                                        description: Required. A list
                                                          of node selector terms.
                                                          The terms are ORed.
                                                        items:
                                                          description: A null or empty
                                                            node selector term matches
                                                            no objects. The requirements
                                                            of them are ANDed. The
                                                            TopologySelectorTerm type
                                                            implements a subset of
                                                            the NodeSelectorTerm.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                        type: array
                                                    required:
                                                    - nodeSelectorTerms
                                                    type: object
                                                type: object
                                              podAffinity:
                                                description: Describes pod affinity
                                                  scheduling rules (e.g. co-locate
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      has pods which matches the corresponding
                                                      podAffinityTerm; the node(s)
                                                      with the highest sum are the
                                                      most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaceSelector:
                                                              description: A label
                                                                query over the set
                                                                of namespaces that
                                                                the term applies to.
                                                                The term is applied
                                                                to the union of the
                                                                namespaces selected
                                                                by this field and
                                                                the ones listed in
                                                                the namespaces field.
                                                                null selector and
                                                                null or empty namespaces
                                                                list means "this pod's
                                                                namespace". An empty
                                                                selector ({}) matches
                                                                all namespaces. This
                                                                field is alpha-level
                                                                and is only honored
                                                                when PodAffinityNamespaceSelector
                                                                feature is enabled.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaces:
                                                              description: namespaces
                                                                specifies a static
                                                                list of namespace
                                                                names that the term
                                                                applies to. The term
                                                                is applied to the
                                                                union of the namespaces
                                                                listed in this field
                                                                and the ones selected
                                                                by namespaceSelector.
                                                                null or empty namespaces
                                                                list and null namespaceSelector
                                                                means "this pod's
                                                                namespace"
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaceSelector:
                                                          description: A label query
                                                            over the set of namespaces
                                                            that the term applies
                                                            to. The term is applied
                                                            to the union of the namespaces
                                                            selected by this field
                                                            and the ones listed in
                                                            the namespaces field.
                                                            null selector and null
                                                            or empty namespaces list
                                                            means "this pod's namespace".
                                                            An empty selector ({})
                                                            matches all namespaces.
                                                            This field is alpha-level
                                                            and is only honored when
                                                            PodAffinityNamespaceSelector
                                                            feature is enabled.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces
                                                            specifies a static list
                                                            of namespace names that
                                                            the term applies to. The
                                                            term is applied to the
                                                            union of the namespaces
                                                            listed in this field and
                                                            the ones selected by namespaceSelector.
                                                            null or empty namespaces
                                                            list and null namespaceSelector
                                                            means "this pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                              podAntiAffinity:
                                                description: Describes pod anti-affinity
                                                  scheduling rules (e.g. avoid putting
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the anti-affinity
                                                      expressions specified by this
                                                      field, but it may choose a node
                                                      that violates one or more of
                                                      the expressions. The node that
                                                      is most preferred is the one
                                                      with the greatest sum of weights,
                                                      i.e. for each node that meets
                                                      all of the scheduling requirements
                                                      (resource request, requiredDuringScheduling
                                                      anti-affinity expressions, etc.),
                                                      compute a sum by iterating through
                                                      the elements of this field and
                                                      adding "weight" to the sum if
                                                      the node has pods which matches
                                                      the corresponding podAffinityTerm;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaceSelector:
                                                              description: A label
                                                                query over the set
                                                                of namespaces that
                                                                the term applies to.
                                                                The term is applied
                                                                to the union of the
                                                                namespaces selected
                                                                by this field and
                                                                the ones listed in
                                                                the namespaces field.
                                                                null selector and
                                                                null or empty namespaces
                                                                list means "this pod's
                                                                namespace". An empty
                                                                selector ({}) matches
                                                                all namespaces. This
                                                                field is alpha-level
                                                                and is only honored
                                                                when PodAffinityNamespaceSelector
                                                                feature is enabled.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaces:
                                                              description: namespaces
                                                                specifies a static
                                                                list of namespace
                                                                names that the term
                                                                applies to. The term
                                                                is applied to the
                                                                union of the namespaces
                                                                listed in this field
                                                                and the ones selected
                                                                by namespaceSelector.
                                                                null or empty namespaces
                                                                list and null namespaceSelector
                                                                means "this pod's
                                                                namespace"
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the anti-affinity
                                                      requirements specified by this
                                                      field are not met at scheduling
                                                      time, the pod will not be scheduled
                                                      onto the node. If the anti-affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaceSelector:
                                                          description: A label query
                                                            over the set of namespaces
                                                            that the term applies
                                                            to. The term is applied
                                                            to the union of the namespaces
                                                            selected by this field
                                                            and the ones listed in
                                                            the namespaces field.
                                                            null selector and null
                                                            or empty namespaces list
                                                            means "this pod's namespace".
                                                            An empty selector ({})
                                                            matches all namespaces.
                                                            This field is alpha-level
                                                            and is only honored when
                                                            PodAffinityNamespaceSelector
                                                            feature is enabled.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces
                                                            specifies a static list
                                                            of namespace names that
                                                            the term applies to. The
                                                            term is applied to the
                                                            union of the namespaces
                                                            listed in this field and
                                                            the ones selected by namespaceSelector.
                                                            null or empty namespaces
                                                            list and null namespaceSelector
                                                            means "this pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                            type: object
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: 'NodeSelector is a selector
                                              which must be true for the pod to fit
                                              on a node. Selector which must match
                                              a node''s labels for the pod to be scheduled
                                              on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                            type: object
                                          priorityClassName:
                                            description: If specified, the pod's priorityClassName.
                                            type: string
                                          serviceAccountName:
                                            description: If specified, the pod's service
                                              account
                                            type: string
                                          tolerations:
                                            description: If specified, the pod's tolerations.
                                            items:
                                              description: The pod this Toleration
                                                is attached to tolerates any taint
                                                that matches the triple <key,value,effect>
                                                using the matching operator <operator>.
                                              properties:
                                                effect:
                                                  description: Effect indicates the
                                                    taint effect to match. Empty means
                                                    match all taint effects. When
                                                    specified, allowed values are
                                                    NoSchedule, PreferNoSchedule and
                                                    NoExecute.
                                                  type: string
                                                key:
                                                  description: Key is the taint key
                                                    that the toleration applies to.
                                                    Empty means match all taint keys.
                                                    If the key is empty, operator
                                                    must be Exists; this combination
                                                    means to match all values and
                                                    all keys.
                                                  type: string
                                                operator:
                                                  description: Operator represents
                                                    a key's relationship to the value.
                                                    Valid operators are Exists and
                                                    Equal. Defaults to Equal. Exists
                                                    is equivalent to wildcard for
                                                    value, so that a pod can tolerate
                                                    all taints of a particular category.
                                                  type: string
                                                tolerationSeconds:
                                                  description: TolerationSeconds represents
                                                    the period of time the toleration
                                                    (which must be of effect NoExecute,
                                                    otherwise this field is ignored)
                                                    tolerates the taint. By default,
                                                    it is not set, which means tolerate
                                                    the taint forever (do not evict).
                                                    Zero and negative values will
                                                    be treated as 0 (evict immediately)
                                                    by the system.
                                                  format: int64
                                                  type: integer
                                                value:
                                                  description: Value is the taint
                                                    value the toleration matches to.
                                                    If the operator is Exists, the
                                                    value should be empty, otherwise
                                                    just a regular string.
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                    type: object
                                  serviceType:
                                    description: Optional service type for Kubernetes
                                      solver service. Supported values are NodePort
                                      or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                            type: object
                          selector:
                            description: Selector selects a set of DNSNames on the
                              Certificate resource that should be solved using this
                              challenge solver. If not specified, the solver will
                              be treated as the 'default' solver with the lowest priority,
                              i.e. if any other solver has a more specific match,
                              it will be used instead.
                            properties:
                              dnsNames:
                                description: List of DNSNames that this solver will
                                  be used to solve. If specified and a match is found,
                                  a dnsNames selector will take precedence over a
                                  dnsZones selector. If multiple solvers match with
                                  the same dnsNames value, the solver with the most
                                  matching labels in matchLabels will be selected.
                                  If neither has more matches, the solver defined
                                  earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              dnsZones:
                                description: List of DNSZones that this solver will
                                  be used to solve. The most specific DNS zone match
                                  specified here will take precedence over other DNS
                                  zone matches, so a solver specifying sys.example.com
                                  will be selected over one specifying example.com
                                  for the domain www.sys.example.com. If multiple
                                  solvers match with the same dnsZones value, the
                                  solver with the most matching labels in matchLabels
                                  will be selected. If neither has more matches, the
                                  solver defined earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: A label selector that is used to refine
                                  the set of certificate's that this challenge solver
                                  will apply to.
                                type: object
                            type: object
                        type: object
                      type: array
                  required:
                  - privateKeySecretRef
                  - server
                  type: object
                ca:
                  description: CA configures this issuer to sign certificates using
                    a signing CA keypair stored in a Secret resource. This is used
                    to build internal PKIs that are managed by cert-manager.
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate
                        extension which identifies the location of the CRL from which
                        the revocation of this certificate can be checked. If not
                        set, certificates will be issued without distribution points
                        set.
                      items:
                        type: string
                      type: array
                    ocspServers:
                      description: The OCSP server list is an X.509 v3 extension that
                        defines a list of URLs of OCSP responders. The OCSP responders
                        can be queried for the revocation status of an issued certificate.
                        If not set, the certificate will be issued with no OCSP servers
                        set. For example, an OCSP server URL could be "http://ocsp.int-x3.letsencrypt.org".
                      items:
                        type: string
                      type: array
                    secretName:
                      description: SecretName is the name of the secret used to sign
                        Certificates issued by this Issuer.
                      type: string
                  required:
                  - secretName
                  type: object
                selfSigned:
                  description: SelfSigned configures this issuer to 'self sign' certificates
                    using the private key used to create the CertificateRequest object.
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate
                        extension which identifies the location of the CRL from which
                        the revocation of this certificate can be checked. If not
                        set certificate will be issued without CDP. Values are strings.
                      items:
                        type: string
                      type: array
                  type: object
                vault:
                  description: Vault configures this issuer to sign certificates using
                    a HashiCorp Vault PKI backend.
                  properties:
                    auth:
                      description: Auth configures how cert-manager authenticates
                        with the Vault server.
                      properties:
                        appRole:
                          description: AppRole authenticates with Vault using the
                            App Role auth mechanism, with the role and secret stored
                            in a Kubernetes Secret resource.
                          properties:
                            path:
                              description: 'Path where the App Role authentication
                                backend is mounted in Vault, e.g: "approle"'
                              type: string
                            roleId:
                              description: RoleID configured in the App Role authentication
                                backend when setting up the authentication backend
                                in Vault.
                              type: string
                            secretRef:
                              description: Reference to a key in a Secret that contains
                                the App Role secret used to authenticate with Vault.
                                The `key` field must be specified and denotes which
                                entry within the Secret resource is used as the app
                                role secret.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - path
                          - roleId
                          - secretRef
                          type: object
                        kubernetes:
                          description: Kubernetes authenticates with Vault by passing
                            the ServiceAccount token stored in the named Secret resource
                            to the Vault server.
                          properties:
                            mountPath:
                              description: The Vault mountPath here is the mount path
                                to use when authenticating with Vault. For example,
                                setting a value to `/v1/auth/foo`, will use the path
                                `/v1/auth/foo/login` to authenticate with Vault. If
                                unspecified, the default value "/v1/auth/kubernetes"
                                will be used.
                              type: string
                            role:
                              description: A required field containing the Vault Role
                                to assume. A Role binds a Kubernetes ServiceAccount
                                with a set of Vault policies.
                              type: string
                            secretRef:
                              description: The required Secret field containing a
                                Kubernetes ServiceAccount JWT used for authenticating
                                with Vault. Use of 'ambient credentials' is not supported.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - role
                          - secretRef
                          type: object
                        tokenSecretRef:
                          description: TokenSecretRef authenticates with Vault by
                            presenting a token.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      type: object
                    caBundle:
                      description: PEM-encoded CA bundle (base64-encoded) used to
                        validate Vault server certificate. Only used if the Server
                        URL is using HTTPS protocol. This parameter is ignored for
                        plain HTTP protocol connection. If not set the system root
                        certificates are used to validate the TLS connection.
                      format: byte
                      type: string
                    namespace:
                      description: 'Name of the vault namespace. Namespaces is a set
                        of features within Vault Enterprise that allows Vault environments
                        to support Secure Multi-tenancy. e.g: "ns1" More about namespaces
                        can be found here https://www.vaultproject.io/docs/enterprise/namespaces'
                      type: string
                    path:
                      description: 'Path is the mount path of the Vault PKI backend''s
                        `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".'
                      type: string
                    server:
                      description: 'Server is the connection address for the Vault
                        server, e.g: "https://vault.example.com:8200".'
                      type: string
                  required:
                  - auth
                  - path
                  - server
                  type: object
                venafi:
                  description: Venafi configures this issuer to sign certificates
                    using a Venafi TPP or Venafi Cloud policy zone.
                  properties:
                    cloud:
                      description: Cloud specifies the Venafi cloud configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        apiTokenSecretRef:
                          description: APITokenSecretRef is a secret key selector
                            for the Venafi Cloud API token.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: URL is the base URL for Venafi Cloud. Defaults
                            to "https://api.venafi.cloud/v1".
                          type: string
                      required:
                      - apiTokenSecretRef
                      type: object
                    tpp:
                      description: TPP specifies Trust Protection Platform configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        caBundle:
                          description: CABundle is a PEM encoded TLS certificate to
                            use to verify connections to the TPP instance. If specified,
                            system roots will not be used and the issuing CA for the
                            TPP instance must be verifiable using the provided root.
                            If not specified, the connection will be verified using
                            the cert-manager system root certificates.
                          format: byte
                          type: string
                        credentialsRef:
                          description: CredentialsRef is a reference to a Secret containing
                            the username and password for the TPP server. The secret
                            must contain two keys, 'username' and 'password'.
                          properties:
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: 'URL is the base URL for the vedsdk endpoint
                            of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".'
                          type: string
                      required:
                      - credentialsRef
                      - url
                      type: object
                    zone:
                      description: Zone is the Venafi Policy Zone to use for this
                        issuer. All requests made to the Venafi platform will be restricted
                        by the named zone policy. This field is required.
                      type: string
                  required:
                  - zone
                  type: object
              type: object
            status:
              description: Status of the Issuer. This is set and managed automatically.
              properties:
                acme:
                  description: ACME specific status options. This field should only
                    be set if the Issuer is configured to use an ACME server to issue
                    certificates.
                  properties:
                    lastRegisteredEmail:
                      description: LastRegisteredEmail is the email associated with
                        the latest registered ACME account, in order to track changes
                        made to registered account associated with the  Issuer
                      type: string
                    uri:
                      description: URI is the unique account identifier, which can
                        also be used to retrieve account details from the CA
                      type: string
                  type: object
                conditions:
                  description: List of status conditions to indicate the status of
                    a CertificateRequest. Known condition types are `Ready`.
                  items:
                    description: IssuerCondition contains condition information for
                      an Issuer.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      observedGeneration:
                        description: If set, this represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.condition[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the Issuer.
                        format: int64
                        type: integer
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`,
                          `Unknown`).
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Ready`).
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha3
      schema:
        openAPIV3Schema:
          description: An Issuer represents a certificate issuing authority which
            can be referenced as part of `issuerRef` fields. It is scoped to a single
            namespace and can therefore only be referenced by resources within the
            same namespace.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the Issuer resource.
              properties:
                acme:
                  description: ACME configures this issuer to communicate with a RFC8555
                    (ACME) server to obtain signed x509 certificates.
                  properties:
                    disableAccountKeyGeneration:
                      description: Enables or disables generating a new ACME account
                        key. If true, the Issuer resource will *not* request a new
                        account but will expect the account key to be supplied via
                        an existing secret. If false, the cert-manager system will
                        generate a new ACME account key for the Issuer. Defaults to
                        false.
                      type: boolean
                    email:
                      description: Email is the email address to be associated with
                        the ACME account. This field is optional, but it is strongly
                        recommended to be set. It will be used to contact you in case
                        of issues with your account or certificates, including expiry
                        notification emails. This field may be updated after the account
                        is initially registered.
                      type: string
                    enableDurationFeature:
                      description: Enables requesting a Not After date on certificates
                        that matches the duration of the certificate. This is not
                        supported by all ACME servers like Let's Encrypt. If set to
                        true when the ACME server does not support it it will create
                        an error on the Order. Defaults to false.
                      type: boolean
                    externalAccountBinding:
                      description: ExternalAccountBinding is a reference to a CA external
                        account of the ACME server. If set, upon registration cert-manager
                        will attempt to associate the given external account credentials
                        with the registered ACME account.
                      properties:
                        keyAlgorithm:
                          description: 'Deprecated: keyAlgorithm field exists for
                            historical compatibility reasons and should not be used.
                            The algorithm is now hardcoded to HS256 in golang/x/crypto/acme.'
                          enum:
                          - HS256
                          - HS384
                          - HS512
                          type: string
                        keyID:
                          description: keyID is the ID of the CA key that the External
                            Account is bound to.
                          type: string
                        keySecretRef:
                          description: keySecretRef is a Secret Key Selector referencing
                            a data item in a Kubernetes Secret which holds the symmetric
                            MAC key of the External Account Binding. The `key` is
                            the index string that is paired with the key data in the
                            Secret and should not be confused with the key data itself,
                            or indeed with the External Account Binding keyID above.
                            The secret key stored in the Secret **must** be un-padded,
                            base64 URL encoded data.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - keyID
                      - keySecretRef
                      type: object
                    preferredChain:
                      description: 'PreferredChain is the chain to use if the ACME
                        server outputs multiple. PreferredChain is no guarantee that
                        this one gets delivered by the ACME endpoint. For example,
                        for Let''s Encrypt''s DST crosssign you would use: "DST Root
                        CA X3" or "ISRG Root X1" for the newer Let''s Encrypt root
                        CA. This value picks the first certificate bundle in the ACME
                        alternative chains that has a certificate with this value
                        as its issuer''s CN'
                      maxLength: 64
                      type: string
                    privateKeySecretRef:
                      description: PrivateKey is the name of a Kubernetes Secret resource
                        that will be used to store the automatically generated ACME
                        account private key. Optionally, a `key` may be specified
                        to select a specific entry within the named Secret resource.
                        If `key` is not specified, a default of `tls.key` will be
                        used.
                      properties:
                        key:
                          description: The key of the entry in the Secret resource's
                            `data` field to be used. Some instances of this field
                            may be defaulted, in others it may be required.
                          type: string
                        name:
                          description: 'Name of the resource being referred to. More
                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                      required:
                      - name
                      type: object
                    server:
                      description: 'Server is the URL used to access the ACME server''s
                        ''directory'' endpoint. For example, for Let''s Encrypt''s
                        staging endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory".
                        Only ACME v2 endpoints (i.e. RFC 8555) are supported.'
                      type: string
                    skipTLSVerify:
                      description: Enables or disables validation of the ACME server
                        TLS certificate. If true, requests to the ACME server will
                        not have their TLS certificate validated (i.e. insecure connections
                        will be allowed). Only enable this option in development environments.
                        The cert-manager system installed roots will be used to verify
                        connections to the ACME server if this is false. Defaults
                        to false.
                      type: boolean
                    solvers:
                      description: 'Solvers is a list of challenge solvers that will
                        be used to solve ACME challenges for the matching domains.
                        Solver configurations must be provided in order to obtain
                        certificates from an ACME server. For more information, see:
                        https://cert-manager.io/docs/configuration/acme/'
                      items:
                        description: Configures an issuer to solve challenges using
                          the specified options. Only one of HTTP01 or DNS01 may be
                          provided.
                        properties:
                          dns01:
                            description: Configures cert-manager to attempt to complete
                              authorizations by performing the DNS01 challenge flow.
                            properties:
                              acmedns:
                                description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)
                                  API to manage DNS01 challenge records.
                                properties:
                                  accountSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  host:
                                    type: string
                                required:
                                - accountSecretRef
                                - host
                                type: object
                              akamai:
                                description: Use the Akamai DNS zone management API
                                  to manage DNS01 challenge records.
                                properties:
                                  accessTokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientSecretSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientTokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  serviceConsumerDomain:
                                    type: string
                                required:
                                - accessTokenSecretRef
                                - clientSecretSecretRef
                                - clientTokenSecretRef
                                - serviceConsumerDomain
                                type: object
                              azuredns:
                                description: Use the Microsoft Azure DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  clientID:
                                    description: if both this and ClientSecret are
                                      left unset MSI will be used
                                    type: string
                                  clientSecretSecretRef:
                                    description: if both this and ClientID are left
                                      unset MSI will be used
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  environment:
                                    enum:
                                    - AzurePublicCloud
                                    - AzureChinaCloud
                                    - AzureGermanCloud
                                    - AzureUSGovernmentCloud
                                    type: string
                                  hostedZoneName:
                                    type: string
                                  resourceGroupName:
                                    type: string
                                  subscriptionID:
                                    type: string
                                  tenantID:
                                    description: when specifying ClientID and ClientSecret
                                      then this field is also needed
                                    type: string
                                required:
                                - resourceGroupName
                                - subscriptionID
                                type: object
                              clouddns:
                                description: Use the Google Cloud DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  hostedZoneName:
                                    description: HostedZoneName is an optional field
                                      that tells cert-manager in which Cloud DNS zone
                                      the challenge record has to be created. If left
                                      empty cert-manager will automatically choose
                                      a zone.
                                    type: string
                                  project:
                                    type: string
                                  serviceAccountSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - project
                                type: object
                              cloudflare:
                                description: Use the Cloudflare API to manage DNS01
                                  challenge records.
                                properties:
                                  apiKeySecretRef:
                                    description: 'API key to use to authenticate with
                                      Cloudflare. Note: using an API token to authenticate
                                      is now the recommended method as it allows greater
                                      control of permissions.'
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  apiTokenSecretRef:
                                    description: API token used to authenticate with
                                      Cloudflare.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  email:
                                    description: Email of the account, only required
                                      when using API key based authentication.
                                    type: string
                                type: object
                              cnameStrategy:
                                description: CNAMEStrategy configures how the DNS01
                                  provider should handle CNAME records when found
                                  in DNS zones.
                                enum:
                                - None
                                - Follow
                                type: string
                              digitalocean:
                                description: Use the DigitalOcean DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  tokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - tokenSecretRef
                                type: object
                              rfc2136:
                                description: Use RFC2136 ("Dynamic Updates in the
                                  Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/)
                                  to manage DNS01 challenge records.
                                properties:
                                  nameserver:
                                    description: The IP address or hostname of an
                                      authoritative DNS server supporting RFC2136
                                      in the form host:port. If the host is an IPv6
                                      address it must be enclosed in square brackets
                                      (e.g [2001:db8::1])┬á; port is optional. This
                                      field is required.
                                    type: string
                                  tsigAlgorithm:
                                    description: 'The TSIG Algorithm configured in
                                      the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef``
                                      and ``tsigKeyName`` are defined. Supported values
                                      are (case-insensitive): ``HMACMD5`` (default),
                                      ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.'
                                    type: string
                                  tsigKeyName:
                                    description: The TSIG Key name configured in the
                                      DNS. If ``tsigSecretSecretRef`` is defined,
                                      this field is required.
                                    type: string
                                  tsigSecretSecretRef:
                                    description: The name of the secret containing
                                      the TSIG value. If ``tsigKeyName`` is defined,
                                      this field is required.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - nameserver
                                type: object
                              route53:
                                description: Use the AWS Route53 API to manage DNS01
                                  challenge records.
                                properties:
                                  accessKeyID:
                                    description: 'The AccessKeyID is used for authentication.
                                      If not set we fall-back to using env vars, shared
                                      credentials file or AWS Instance metadata see:
                                      https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                    type: string
                                  hostedZoneID:
                                    description: If set, the provider will manage
                                      only this zone in Route53 and will not do an
                                      lookup using the route53:ListHostedZonesByName
                                      api call.
                                    type: string
                                  region:
                                    description: Always set the region when using
                                      AccessKeyID and SecretAccessKey
                                    type: string
                                  role:
                                    description: Role is a Role ARN which the Route53
                                      provider will assume using either the explicit
                                      credentials AccessKeyID/SecretAccessKey or the
                                      inferred credentials from environment variables,
                                      shared credentials file or AWS Instance metadata
                                    type: string
                                  secretAccessKeySecretRef:
                                    description: The SecretAccessKey is used for authentication.
                                      If not set we fall-back to using env vars, shared
                                      credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - region
                                type: object
                              webhook:
                                description: Configure an external webhook based DNS01
                                  challenge solver to manage DNS01 challenge records.
                                properties:
                                  config:
                                    description: Additional configuration that should
                                      be passed to the webhook apiserver when challenges
                                      are processed. This can contain arbitrary JSON
                                      data. Secret values should not be specified
                                      in this stanza. If secret values are needed
                                      (e.g. credentials for a DNS service), you should
                                      use a SecretKeySelector to reference a Secret
                                      resource. For details on the schema of this
                                      field, consult the webhook provider implementation's
                                      documentation.
                                    x-kubernetes-preserve-unknown-fields: true
                                  groupName:
                                    description: The API group name that should be
                                      used when POSTing ChallengePayload resources
                                      to the webhook apiserver. This should be the
                                      same as the GroupName specified in the webhook
                                      provider implementation.
                                    type: string
                                  solverName:
                                    description: The name of the solver to use, as
                                      defined in the webhook provider implementation.
                                      This will typically be the name of the provider,
                                      e.g. 'cloudflare'.
                                    type: string
                                required:
                                - groupName
                                - solverName
                                type: object
                            type: object
                          http01:
                            description: Configures cert-manager to attempt to complete
                              authorizations by performing the HTTP01 challenge flow.
                              It is not possible to obtain certificates for wildcard
                              domain names (e.g. `*.example.com`) using the HTTP01
                              challenge mechanism.
                            properties:
                              gatewayHTTPRoute:
                                description: The Gateway API is a sig-network community
                                  API that models service networking in Kubernetes
                                  (https://gateway-api.sigs.k8s.io/). The Gateway
                                  solver will create HTTPRoutes with the specified
                                  labels in the same namespace as the challenge. This
                                  solver is experimental, and fields / behaviour may
                                  change in the future.
                                properties:
                                  labels:
                                    additionalProperties:
                                      type: string
                                    description: The labels that cert-manager will
                                      use when creating the temporary HTTPRoute needed
                                      for solving the HTTP-01 challenge. These labels
                                      must match the label selector of at least one
                                      Gateway.
                                    type: object
                                  serviceType:
                                    description: Optional service type for Kubernetes
                                      solver service. Supported values are NodePort
                                      or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                              ingress:
                                description: The ingress based HTTP01 challenge solver
                                  will solve challenges by creating or modifying Ingress
                                  resources in order to route requests for '/.well-known/acme-challenge/XYZ'
                                  to 'challenge solver' pods that are provisioned
                                  by cert-manager for each Challenge to be completed.
                                properties:
                                  class:
                                    description: The ingress class to use when creating
                                      Ingress resources to solve ACME challenges that
                                      use this challenge solver. Only one of 'class'
                                      or 'name' may be specified.
                                    type: string
                                  ingressTemplate:
                                    description: Optional ingress template used to
                                      configure the ACME challenge solver ingress
                                      used for HTTP01 challenges
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the
                                          ingress used to solve HTTP01 challenges.
                                          Only the 'labels' and 'annotations' fields
                                          may be set. If labels or annotations overlap
                                          with in-built values, the values here will
                                          override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be
                                              added to the created ACME HTTP01 solver
                                              ingress.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added
                                              to the created ACME HTTP01 solver ingress.
                                            type: object
                                        type: object
                                    type: object
                                  name:
                                    description: The name of the ingress resource
                                      that should have ACME challenge solving routes
                                      inserted into it in order to solve HTTP01 challenges.
                                      This is typically used in conjunction with ingress
                                      controllers like ingress-gce, which maintains
                                      a 1:1 mapping between external IPs and ingress
                                      resources.
                                    type: string
                                  podTemplate:
                                    description: Optional pod template used to configure
                                      the ACME challenge solver pods used for HTTP01
                                      challenges.
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the
                                          pod used to solve HTTP01 challenges. Only
                                          the 'labels' and 'annotations' fields may
                                          be set. If labels or annotations overlap
                                          with in-built values, the values here will
                                          override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be
                                              added to the create ACME HTTP01 solver
                                              pods.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added
                                              to the created ACME HTTP01 solver pods.
                                            type: object
                                        type: object
                                      spec:
                                        description: PodSpec defines overrides for
                                          the HTTP01 challenge solver pod. Only the
                                          'priorityClassName', 'nodeSelector', 'affinity',
                                          'serviceAccountName' and 'tolerations' fields
                                          are supported currently. All other fields
                                          will be ignored.
                                        properties:
                                          affinity:
                                            description: If specified, the pod's scheduling
                                              constraints
                                            properties:
                                              nodeAffinity:
                                                description: Describes node affinity
                                                  scheduling rules for the pod.
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      matches the corresponding matchExpressions;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: An empty preferred
                                                        scheduling term matches all
                                                        objects with implicit weight
                                                        0 (i.e. it's a no-op). A null
                                                        preferred scheduling term
                                                        matches no objects (i.e. is
                                                        also a no-op).
                                                      properties:
                                                        preference:
                                                          description: A node selector
                                                            term, associated with
                                                            the corresponding weight.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                        weight:
                                                          description: Weight associated
                                                            with matching the corresponding
                                                            nodeSelectorTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - preference
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to an update), the system
                                                      may or may not try to eventually
                                                      evict the pod from its node.
                                                    properties:
                                                      nodeSelectorTerms:
                                                        description: Required. A list
                                                          of node selector terms.
                                                          The terms are ORed.
                                                        items:
                                                          description: A null or empty
                                                            node selector term matches
                                                            no objects. The requirements
                                                            of them are ANDed. The
                                                            TopologySelectorTerm type
                                                            implements a subset of
                                                            the NodeSelectorTerm.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                        type: array
                                                    required:
                                                    - nodeSelectorTerms
                                                    type: object
                                                type: object
                                              podAffinity:
                                                description: Describes pod affinity
                                                  scheduling rules (e.g. co-locate
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      has pods which matches the corresponding
                                                      podAffinityTerm; the node(s)
                                                      with the highest sum are the
                                                      most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaceSelector:
                                                              description: A label
                                                                query over the set
                                                                of namespaces that
                                                                the term applies to.
                                                                The term is applied
                                                                to the union of the
                                                                namespaces selected
                                                                by this field and
                                                                the ones listed in
                                                                the namespaces field.
                                                                null selector and
                                                                null or empty namespaces
                                                                list means "this pod's
                                                                namespace". An empty
                                                                selector ({}) matches
                                                                all namespaces. This
                                                                field is alpha-level
                                                                and is only honored
                                                                when PodAffinityNamespaceSelector
                                                                feature is enabled.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaces:
                                                              description: namespaces
                                                                specifies a static
                                                                list of namespace
                                                                names that the term
                                                                applies to. The term
                                                                is applied to the
                                                                union of the namespaces
                                                                listed in this field
                                                                and the ones selected
                                                                by namespaceSelector.
                                                                null or empty namespaces
                                                                list and null namespaceSelector
                                                                means "this pod's
                                                                namespace"
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaceSelector:
                                                          description: A label query
                                                            over the set of namespaces
                                                            that the term applies
                                                            to. The term is applied
                                                            to the union of the namespaces
                                                            selected by this field
                                                            and the ones listed in
                                                            the namespaces field.
                                                            null selector and null
                                                            or empty namespaces list
                                                            means "this pod's namespace".
                                                            An empty selector ({})
                                                            matches all namespaces.
                                                            This field is alpha-level
                                                            and is only honored when
                                                            PodAffinityNamespaceSelector
                                                            feature is enabled.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces
                                                            specifies a static list
                                                            of namespace names that
                                                            the term applies to. The
                                                            term is applied to the
                                                            union of the namespaces
                                                            listed in this field and
                                                            the ones selected by namespaceSelector.
                                                            null or empty namespaces
                                                            list and null namespaceSelector
                                                            means "this pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                              podAntiAffinity:
                                                description: Describes pod anti-affinity
                                                  scheduling rules (e.g. avoid putting
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the anti-affinity
                                                      expressions specified by this
                                                      field, but it may choose a node
                                                      that violates one or more of
                                                      the expressions. The node that
                                                      is most preferred is the one
                                                      with the greatest sum of weights,
                                                      i.e. for each node that meets
                                                      all of the scheduling requirements
                                                      (resource request, requiredDuringScheduling
                                                      anti-affinity expressions, etc.),
                                                      compute a sum by iterating through
                                                      the elements of this field and
                                                      adding "weight" to the sum if
                                                      the node has pods which matches
                                                      the corresponding podAffinityTerm;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaceSelector:
                                                              description: A label
                                                                query over the set
                                                                of namespaces that
                                                                the term applies to.
                                                                The term is applied
                                                                to the union of the
                                                                namespaces selected
                                                                by this field and
                                                                the ones listed in
                                                                the namespaces field.
                                                                null selector and
                                                                null or empty namespaces
                                                                list means "this pod's
                                                                namespace". An empty
                                                                selector ({}) matches
                                                                all namespaces. This
                                                                field is alpha-level
                                                                and is only honored
                                                                when PodAffinityNamespaceSelector
                                                                feature is enabled.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaces:
                                                              description: namespaces
                                                                specifies a static
                                                                list of namespace
                                                                names that the term
                                                                applies to. The term
                                                                is applied to the
                                                                union of the namespaces
                                                                listed in this field
                                                                and the ones selected
                                                                by namespaceSelector.
                                                                null or empty namespaces
                                                                list and null namespaceSelector
                                                                means "this pod's
                                                                namespace"
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the anti-affinity
                                                      requirements specified by this
                                                      field are not met at scheduling
                                                      time, the pod will not be scheduled
                                                      onto the node. If the anti-affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaceSelector:
                                                          description: A label query
                                                            over the set of namespaces
                                                            that the term applies
                                                            to. The term is applied
                                                            to the union of the namespaces
                                                            selected by this field
                                                            and the ones listed in
                                                            the namespaces field.
                                                            null selector and null
                                                            or empty namespaces list
                                                            means "this pod's namespace".
                                                            An empty selector ({})
                                                            matches all namespaces.
                                                            This field is alpha-level
                                                            and is only honored when
                                                            PodAffinityNamespaceSelector
                                                            feature is enabled.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces
                                                            specifies a static list
                                                            of namespace names that
                                                            the term applies to. The
                                                            term is applied to the
                                                            union of the namespaces
                                                            listed in this field and
                                                            the ones selected by namespaceSelector.
                                                            null or empty namespaces
                                                            list and null namespaceSelector
                                                            means "this pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                            type: object
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: 'NodeSelector is a selector
                                              which must be true for the pod to fit
                                              on a node. Selector which must match
                                              a node''s labels for the pod to be scheduled
                                              on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                            type: object
                                          priorityClassName:
                                            description: If specified, the pod's priorityClassName.
                                            type: string
                                          serviceAccountName:
                                            description: If specified, the pod's service
                                              account
                                            type: string
                                          tolerations:
                                            description: If specified, the pod's tolerations.
                                            items:
                                              description: The pod this Toleration
                                                is attached to tolerates any taint
                                                that matches the triple <key,value,effect>
                                                using the matching operator <operator>.
                                              properties:
                                                effect:
                                                  description: Effect indicates the
                                                    taint effect to match. Empty means
                                                    match all taint effects. When
                                                    specified, allowed values are
                                                    NoSchedule, PreferNoSchedule and
                                                    NoExecute.
                                                  type: string
                                                key:
                                                  description: Key is the taint key
                                                    that the toleration applies to.
                                                    Empty means match all taint keys.
                                                    If the key is empty, operator
                                                    must be Exists; this combination
                                                    means to match all values and
                                                    all keys.
                                                  type: string
                                                operator:
                                                  description: Operator represents
                                                    a key's relationship to the value.
                                                    Valid operators are Exists and
                                                    Equal. Defaults to Equal. Exists
                                                    is equivalent to wildcard for
                                                    value, so that a pod can tolerate
                                                    all taints of a particular category.
                                                  type: string
                                                tolerationSeconds:
                                                  description: TolerationSeconds represents
                                                    the period of time the toleration
                                                    (which must be of effect NoExecute,
                                                    otherwise this field is ignored)
                                                    tolerates the taint. By default,
                                                    it is not set, which means tolerate
                                                    the taint forever (do not evict).
                                                    Zero and negative values will
                                                    be treated as 0 (evict immediately)
                                                    by the system.
                                                  format: int64
                                                  type: integer
                                                value:
                                                  description: Value is the taint
                                                    value the toleration matches to.
                                                    If the operator is Exists, the
                                                    value should be empty, otherwise
                                                    just a regular string.
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                    type: object
                                  serviceType:
                                    description: Optional service type for Kubernetes
                                      solver service. Supported values are NodePort
                                      or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                            type: object
                          selector:
                            description: Selector selects a set of DNSNames on the
                              Certificate resource that should be solved using this
                              challenge solver. If not specified, the solver will
                              be treated as the 'default' solver with the lowest priority,
                              i.e. if any other solver has a more specific match,
                              it will be used instead.
                            properties:
                              dnsNames:
                                description: List of DNSNames that this solver will
                                  be used to solve. If specified and a match is found,
                                  a dnsNames selector will take precedence over a
                                  dnsZones selector. If multiple solvers match with
                                  the same dnsNames value, the solver with the most
                                  matching labels in matchLabels will be selected.
                                  If neither has more matches, the solver defined
                                  earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              dnsZones:
                                description: List of DNSZones that this solver will
                                  be used to solve. The most specific DNS zone match
                                  specified here will take precedence over other DNS
                                  zone matches, so a solver specifying sys.example.com
                                  will be selected over one specifying example.com
                                  for the domain www.sys.example.com. If multiple
                                  solvers match with the same dnsZones value, the
                                  solver with the most matching labels in matchLabels
                                  will be selected. If neither has more matches, the
                                  solver defined earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: A label selector that is used to refine
                                  the set of certificate's that this challenge solver
                                  will apply to.
                                type: object
                            type: object
                        type: object
                      type: array
                  required:
                  - privateKeySecretRef
                  - server
                  type: object
                ca:
                  description: CA configures this issuer to sign certificates using
                    a signing CA keypair stored in a Secret resource. This is used
                    to build internal PKIs that are managed by cert-manager.
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate
                        extension which identifies the location of the CRL from which
                        the revocation of this certificate can be checked. If not
                        set, certificates will be issued without distribution points
                        set.
                      items:
                        type: string
                      type: array
                    ocspServers:
                      description: The OCSP server list is an X.509 v3 extension that
                        defines a list of URLs of OCSP responders. The OCSP responders
                        can be queried for the revocation status of an issued certificate.
                        If not set, the certificate will be issued with no OCSP servers
                        set. For example, an OCSP server URL could be "http://ocsp.int-x3.letsencrypt.org".
                      items:
                        type: string
                      type: array
                    secretName:
                      description: SecretName is the name of the secret used to sign
                        Certificates issued by this Issuer.
                      type: string
                  required:
                  - secretName
                  type: object
                selfSigned:
                  description: SelfSigned configures this issuer to 'self sign' certificates
                    using the private key used to create the CertificateRequest object.
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate
                        extension which identifies the location of the CRL from which
                        the revocation of this certificate can be checked. If not
                        set certificate will be issued without CDP. Values are strings.
                      items:
                        type: string
                      type: array
                  type: object
                vault:
                  description: Vault configures this issuer to sign certificates using
                    a HashiCorp Vault PKI backend.
                  properties:
                    auth:
                      description: Auth configures how cert-manager authenticates
                        with the Vault server.
                      properties:
                        appRole:
                          description: AppRole authenticates with Vault using the
                            App Role auth mechanism, with the role and secret stored
                            in a Kubernetes Secret resource.
                          properties:
                            path:
                              description: 'Path where the App Role authentication
                                backend is mounted in Vault, e.g: "approle"'
                              type: string
                            roleId:
                              description: RoleID configured in the App Role authentication
                                backend when setting up the authentication backend
                                in Vault.
                              type: string
                            secretRef:
                              description: Reference to a key in a Secret that contains
                                the App Role secret used to authenticate with Vault.
                                The `key` field must be specified and denotes which
                                entry within the Secret resource is used as the app
                                role secret.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - path
                          - roleId
                          - secretRef
                          type: object
                        kubernetes:
                          description: Kubernetes authenticates with Vault by passing
                            the ServiceAccount token stored in the named Secret resource
                            to the Vault server.
                          properties:
                            mountPath:
                              description: The Vault mountPath here is the mount path
                                to use when authenticating with Vault. For example,
                                setting a value to `/v1/auth/foo`, will use the path
                                `/v1/auth/foo/login` to authenticate with Vault. If
                                unspecified, the default value "/v1/auth/kubernetes"
                                will be used.
                              type: string
                            role:
                              description: A required field containing the Vault Role
                                to assume. A Role binds a Kubernetes ServiceAccount
                                with a set of Vault policies.
                              type: string
                            secretRef:
                              description: The required Secret field containing a
                                Kubernetes ServiceAccount JWT used for authenticating
                                with Vault. Use of 'ambient credentials' is not supported.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - role
                          - secretRef
                          type: object
                        tokenSecretRef:
                          description: TokenSecretRef authenticates with Vault by
                            presenting a token.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      type: object
                    caBundle:
                      description: PEM-encoded CA bundle (base64-encoded) used to
                        validate Vault server certificate. Only used if the Server
                        URL is using HTTPS protocol. This parameter is ignored for
                        plain HTTP protocol connection. If not set the system root
                        certificates are used to validate the TLS connection.
                      format: byte
                      type: string
                    namespace:
                      description: 'Name of the vault namespace. Namespaces is a set
                        of features within Vault Enterprise that allows Vault environments
                        to support Secure Multi-tenancy. e.g: "ns1" More about namespaces
                        can be found here https://www.vaultproject.io/docs/enterprise/namespaces'
                      type: string
                    path:
                      description: 'Path is the mount path of the Vault PKI backend''s
                        `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".'
                      type: string
                    server:
                      description: 'Server is the connection address for the Vault
                        server, e.g: "https://vault.example.com:8200".'
                      type: string
                  required:
                  - auth
                  - path
                  - server
                  type: object
                venafi:
                  description: Venafi configures this issuer to sign certificates
                    using a Venafi TPP or Venafi Cloud policy zone.
                  properties:
                    cloud:
                      description: Cloud specifies the Venafi cloud configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        apiTokenSecretRef:
                          description: APITokenSecretRef is a secret key selector
                            for the Venafi Cloud API token.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: URL is the base URL for Venafi Cloud. Defaults
                            to "https://api.venafi.cloud/v1".
                          type: string
                      required:
                      - apiTokenSecretRef
                      type: object
                    tpp:
                      description: TPP specifies Trust Protection Platform configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        caBundle:
                          description: CABundle is a PEM encoded TLS certificate to
                            use to verify connections to the TPP instance. If specified,
                            system roots will not be used and the issuing CA for the
                            TPP instance must be verifiable using the provided root.
                            If not specified, the connection will be verified using
                            the cert-manager system root certificates.
                          format: byte
                          type: string
                        credentialsRef:
                          description: CredentialsRef is a reference to a Secret containing
                            the username and password for the TPP server. The secret
                            must contain two keys, 'username' and 'password'.
                          properties:
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: 'URL is the base URL for the vedsdk endpoint
                            of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".'
                          type: string
                      required:
                      - credentialsRef
                      - url
                      type: object
                    zone:
                      description: Zone is the Venafi Policy Zone to use for this
                        issuer. All requests made to the Venafi platform will be restricted
                        by the named zone policy. This field is required.
                      type: string
                  required:
                  - zone
                  type: object
              type: object
            status:
              description: Status of the Issuer. This is set and managed automatically.
              properties:
                acme:
                  description: ACME specific status options. This field should only
                    be set if the Issuer is configured to use an ACME server to issue
                    certificates.
                  properties:
                    lastRegisteredEmail:
                      description: LastRegisteredEmail is the email associated with
                        the latest registered ACME account, in order to track changes
                        made to registered account associated with the  Issuer
                      type: string
                    uri:
                      description: URI is the unique account identifier, which can
                        also be used to retrieve account details from the CA
                      type: string
                  type: object
                conditions:
                  description: List of status conditions to indicate the status of
                    a CertificateRequest. Known condition types are `Ready`.
                  items:
                    description: IssuerCondition contains condition information for
                      an Issuer.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      observedGeneration:
                        description: If set, this represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.condition[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the Issuer.
                        format: int64
                        type: integer
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`,
                          `Unknown`).
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Ready`).
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: An Issuer represents a certificate issuing authority which
            can be referenced as part of `issuerRef` fields. It is scoped to a single
            namespace and can therefore only be referenced by resources within the
            same namespace.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the Issuer resource.
              properties:
                acme:
                  description: ACME configures this issuer to communicate with a RFC8555
                    (ACME) server to obtain signed x509 certificates.
                  properties:
                    disableAccountKeyGeneration:
                      description: Enables or disables generating a new ACME account
                        key. If true, the Issuer resource will *not* request a new
                        account but will expect the account key to be supplied via
                        an existing secret. If false, the cert-manager system will
                        generate a new ACME account key for the Issuer. Defaults to
                        false.
                      type: boolean
                    email:
                      description: Email is the email address to be associated with
                        the ACME account. This field is optional, but it is strongly
                        recommended to be set. It will be used to contact you in case
                        of issues with your account or certificates, including expiry
                        notification emails. This field may be updated after the account
                        is initially registered.
                      type: string
                    enableDurationFeature:
                      description: Enables requesting a Not After date on certificates
                        that matches the duration of the certificate. This is not
                        supported by all ACME servers like Let's Encrypt. If set to
                        true when the ACME server does not support it it will create
                        an error on the Order. Defaults to false.
                      type: boolean
                    externalAccountBinding:
                      description: ExternalAccountBinding is a reference to a CA external
                        account of the ACME server. If set, upon registration cert-manager
                        will attempt to associate the given external account credentials
                        with the registered ACME account.
                      properties:
                        keyAlgorithm:
                          description: 'Deprecated: keyAlgorithm field exists for
                            historical compatibility reasons and should not be used.
                            The algorithm is now hardcoded to HS256 in golang/x/crypto/acme.'
                          enum:
                          - HS256
                          - HS384
                          - HS512
                          type: string
                        keyID:
                          description: keyID is the ID of the CA key that the External
                            Account is bound to.
                          type: string
                        keySecretRef:
                          description: keySecretRef is a Secret Key Selector referencing
                            a data item in a Kubernetes Secret which holds the symmetric
                            MAC key of the External Account Binding. The `key` is
                            the index string that is paired with the key data in the
                            Secret and should not be confused with the key data itself,
                            or indeed with the External Account Binding keyID above.
                            The secret key stored in the Secret **must** be un-padded,
                            base64 URL encoded data.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - keyID
                      - keySecretRef
                      type: object
                    preferredChain:
                      description: 'PreferredChain is the chain to use if the ACME
                        server outputs multiple. PreferredChain is no guarantee that
                        this one gets delivered by the ACME endpoint. For example,
                        for Let''s Encrypt''s DST crosssign you would use: "DST Root
                        CA X3" or "ISRG Root X1" for the newer Let''s Encrypt root
                        CA. This value picks the first certificate bundle in the ACME
                        alternative chains that has a certificate with this value
                        as its issuer''s CN'
                      maxLength: 64
                      type: string
                    privateKeySecretRef:
                      description: PrivateKey is the name of a Kubernetes Secret resource
                        that will be used to store the automatically generated ACME
                        account private key. Optionally, a `key` may be specified
                        to select a specific entry within the named Secret resource.
                        If `key` is not specified, a default of `tls.key` will be
                        used.
                      properties:
                        key:
                          description: The key of the entry in the Secret resource's
                            `data` field to be used. Some instances of this field
                            may be defaulted, in others it may be required.
                          type: string
                        name:
                          description: 'Name of the resource being referred to. More
                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                      required:
                      - name
                      type: object
                    server:
                      description: 'Server is the URL used to access the ACME server''s
                        ''directory'' endpoint. For example, for Let''s Encrypt''s
                        staging endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory".
                        Only ACME v2 endpoints (i.e. RFC 8555) are supported.'
                      type: string
                    skipTLSVerify:
                      description: Enables or disables validation of the ACME server
                        TLS certificate. If true, requests to the ACME server will
                        not have their TLS certificate validated (i.e. insecure connections
                        will be allowed). Only enable this option in development environments.
                        The cert-manager system installed roots will be used to verify
                        connections to the ACME server if this is false. Defaults
                        to false.
                      type: boolean
                    solvers:
                      description: 'Solvers is a list of challenge solvers that will
                        be used to solve ACME challenges for the matching domains.
                        Solver configurations must be provided in order to obtain
                        certificates from an ACME server. For more information, see:
                        https://cert-manager.io/docs/configuration/acme/'
                      items:
                        description: Configures an issuer to solve challenges using
                          the specified options. Only one of HTTP01 or DNS01 may be
                          provided.
                        properties:
                          dns01:
                            description: Configures cert-manager to attempt to complete
                              authorizations by performing the DNS01 challenge flow.
                            properties:
                              acmeDNS:
                                description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)
                                  API to manage DNS01 challenge records.
                                properties:
                                  accountSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  host:
                                    type: string
                                required:
                                - accountSecretRef
                                - host
                                type: object
                              akamai:
                                description: Use the Akamai DNS zone management API
                                  to manage DNS01 challenge records.
                                properties:
                                  accessTokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientSecretSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientTokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  serviceConsumerDomain:
                                    type: string
                                required:
                                - accessTokenSecretRef
                                - clientSecretSecretRef
                                - clientTokenSecretRef
                                - serviceConsumerDomain
                                type: object
                              azureDNS:
                                description: Use the Microsoft Azure DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  clientID:
                                    description: if both this and ClientSecret are
                                      left unset MSI will be used
                                    type: string
                                  clientSecretSecretRef:
                                    description: if both this and ClientID are left
                                      unset MSI will be used
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  environment:
                                    enum:
                                    - AzurePublicCloud
                                    - AzureChinaCloud
                                    - AzureGermanCloud
                                    - AzureUSGovernmentCloud
                                    type: string
                                  hostedZoneName:
                                    type: string
                                  resourceGroupName:
                                    type: string
                                  subscriptionID:
                                    type: string
                                  tenantID:
                                    description: when specifying ClientID and ClientSecret
                                      then this field is also needed
                                    type: string
                                required:
                                - resourceGroupName
                                - subscriptionID
                                type: object
                              cloudDNS:
                                description: Use the Google Cloud DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  hostedZoneName:
                                    description: HostedZoneName is an optional field
                                      that tells cert-manager in which Cloud DNS zone
                                      the challenge record has to be created. If left
                                      empty cert-manager will automatically choose
                                      a zone.
                                    type: string
                                  project:
                                    type: string
                                  serviceAccountSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - project
                                type: object
                              cloudflare:
                                description: Use the Cloudflare API to manage DNS01
                                  challenge records.
                                properties:
                                  apiKeySecretRef:
                                    description: 'API key to use to authenticate with
                                      Cloudflare. Note: using an API token to authenticate
                                      is now the recommended method as it allows greater
                                      control of permissions.'
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  apiTokenSecretRef:
                                    description: API token used to authenticate with
                                      Cloudflare.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  email:
                                    description: Email of the account, only required
                                      when using API key based authentication.
                                    type: string
                                type: object
                              cnameStrategy:
                                description: CNAMEStrategy configures how the DNS01
                                  provider should handle CNAME records when found
                                  in DNS zones.
                                enum:
                                - None
                                - Follow
                                type: string
                              digitalocean:
                                description: Use the DigitalOcean DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  tokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - tokenSecretRef
                                type: object
                              rfc2136:
                                description: Use RFC2136 ("Dynamic Updates in the
                                  Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/)
                                  to manage DNS01 challenge records.
                                properties:
                                  nameserver:
                                    description: The IP address or hostname of an
                                      authoritative DNS server supporting RFC2136
                                      in the form host:port. If the host is an IPv6
                                      address it must be enclosed in square brackets
                                      (e.g [2001:db8::1])┬á; port is optional. This
                                      field is required.
                                    type: string
                                  tsigAlgorithm:
                                    description: 'The TSIG Algorithm configured in
                                      the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef``
                                      and ``tsigKeyName`` are defined. Supported values
                                      are (case-insensitive): ``HMACMD5`` (default),
                                      ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.'
                                    type: string
                                  tsigKeyName:
                                    description: The TSIG Key name configured in the
                                      DNS. If ``tsigSecretSecretRef`` is defined,
                                      this field is required.
                                    type: string
                                  tsigSecretSecretRef:
                                    description: The name of the secret containing
                                      the TSIG value. If ``tsigKeyName`` is defined,
                                      this field is required.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - nameserver
                                type: object
                              route53:
                                description: Use the AWS Route53 API to manage DNS01
                                  challenge records.
                                properties:
                                  accessKeyID:
                                    description: 'The AccessKeyID is used for authentication.
                                      If not set we fall-back to using env vars, shared
                                      credentials file or AWS Instance metadata see:
                                      https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                    type: string
                                  hostedZoneID:
                                    description: If set, the provider will manage
                                      only this zone in Route53 and will not do an
                                      lookup using the route53:ListHostedZonesByName
                                      api call.
                                    type: string
                                  region:
                                    description: Always set the region when using
                                      AccessKeyID and SecretAccessKey
                                    type: string
                                  role:
                                    description: Role is a Role ARN which the Route53
                                      provider will assume using either the explicit
                                      credentials AccessKeyID/SecretAccessKey or the
                                      inferred credentials from environment variables,
                                      shared credentials file or AWS Instance metadata
                                    type: string
                                  secretAccessKeySecretRef:
                                    description: The SecretAccessKey is used for authentication.
                                      If not set we fall-back to using env vars, shared
                                      credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - region
                                type: object
                              webhook:
                                description: Configure an external webhook based DNS01
                                  challenge solver to manage DNS01 challenge records.
                                properties:
                                  config:
                                    description: Additional configuration that should
                                      be passed to the webhook apiserver when challenges
                                      are processed. This can contain arbitrary JSON
                                      data. Secret values should not be specified
                                      in this stanza. If secret values are needed
                                      (e.g. credentials for a DNS service), you should
                                      use a SecretKeySelector to reference a Secret
                                      resource. For details on the schema of this
                                      field, consult the webhook provider implementation's
                                      documentation.
                                    x-kubernetes-preserve-unknown-fields: true
                                  groupName:
                                    description: The API group name that should be
                                      used when POSTing ChallengePayload resources
                                      to the webhook apiserver. This should be the
                                      same as the GroupName specified in the webhook
                                      provider implementation.
                                    type: string
                                  solverName:
                                    description: The name of the solver to use, as
                                      defined in the webhook provider implementation.
                                      This will typically be the name of the provider,
                                      e.g. 'cloudflare'.
                                    type: string
                                required:
                                - groupName
                                - solverName
                                type: object
                            type: object
                          http01:
                            description: Configures cert-manager to attempt to complete
                              authorizations by performing the HTTP01 challenge flow.
                              It is not possible to obtain certificates for wildcard
                              domain names (e.g. `*.example.com`) using the HTTP01
                              challenge mechanism.
                            properties:
                              gatewayHTTPRoute:
                                description: The Gateway API is a sig-network community
                                  API that models service networking in Kubernetes
                                  (https://gateway-api.sigs.k8s.io/). The Gateway
                                  solver will create HTTPRoutes with the specified
                                  labels in the same namespace as the challenge. This
                                  solver is experimental, and fields / behaviour may
                                  change in the future.
                                properties:
                                  labels:
                                    additionalProperties:
                                      type: string
                                    description: The labels that cert-manager will
                                      use when creating the temporary HTTPRoute needed
                                      for solving the HTTP-01 challenge. These labels
                                      must match the label selector of at least one
                                      Gateway.
                                    type: object
                                  serviceType:
                                    description: Optional service type for Kubernetes
                                      solver service. Supported values are NodePort
                                      or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                              ingress:
                                description: The ingress based HTTP01 challenge solver
                                  will solve challenges by creating or modifying Ingress
                                  resources in order to route requests for '/.well-known/acme-challenge/XYZ'
                                  to 'challenge solver' pods that are provisioned
                                  by cert-manager for each Challenge to be completed.
                                properties:
                                  class:
                                    description: The ingress class to use when creating
                                      Ingress resources to solve ACME challenges that
                                      use this challenge solver. Only one of 'class'
                                      or 'name' may be specified.
                                    type: string
                                  ingressTemplate:
                                    description: Optional ingress template used to
                                      configure the ACME challenge solver ingress
                                      used for HTTP01 challenges.
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the
                                          ingress used to solve HTTP01 challenges.
                                          Only the 'labels' and 'annotations' fields
                                          may be set. If labels or annotations overlap
                                          with in-built values, the values here will
                                          override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be
                                              added to the created ACME HTTP01 solver
                                              ingress.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added
                                              to the created ACME HTTP01 solver ingress.
                                            type: object
                                        type: object
                                    type: object
                                  name:
                                    description: The name of the ingress resource
                                      that should have ACME challenge solving routes
                                      inserted into it in order to solve HTTP01 challenges.
                                      This is typically used in conjunction with ingress
                                      controllers like ingress-gce, which maintains
                                      a 1:1 mapping between external IPs and ingress
                                      resources.
                                    type: string
                                  podTemplate:
                                    description: Optional pod template used to configure
                                      the ACME challenge solver pods used for HTTP01
                                      challenges
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the
                                          pod used to solve HTTP01 challenges. Only
                                          the 'labels' and 'annotations' fields may
                                          be set. If labels or annotations overlap
                                          with in-built values, the values here will
                                          override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be
                                              added to the create ACME HTTP01 solver
                                              pods.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added
                                              to the created ACME HTTP01 solver pods.
                                            type: object
                                        type: object
                                      spec:
                                        description: PodSpec defines overrides for
                                          the HTTP01 challenge solver pod. Only the
                                          'priorityClassName', 'nodeSelector', 'affinity',
                                          'serviceAccountName' and 'tolerations' fields
                                          are supported currently. All other fields
                                          will be ignored.
                                        properties:
                                          affinity:
                                            description: If specified, the pod's scheduling
                                              constraints
                                            properties:
                                              nodeAffinity:
                                                description: Describes node affinity
                                                  scheduling rules for the pod.
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      matches the corresponding matchExpressions;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: An empty preferred
                                                        scheduling term matches all
                                                        objects with implicit weight
                                                        0 (i.e. it's a no-op). A null
                                                        preferred scheduling term
                                                        matches no objects (i.e. is
                                                        also a no-op).
                                                      properties:
                                                        preference:
                                                          description: A node selector
                                                            term, associated with
                                                            the corresponding weight.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                        weight:
                                                          description: Weight associated
                                                            with matching the corresponding
                                                            nodeSelectorTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - preference
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to an update), the system
                                                      may or may not try to eventually
                                                      evict the pod from its node.
                                                    properties:
                                                      nodeSelectorTerms:
                                                        description: Required. A list
                                                          of node selector terms.
                                                          The terms are ORed.
                                                        items:
                                                          description: A null or empty
                                                            node selector term matches
                                                            no objects. The requirements
                                                            of them are ANDed. The
                                                            TopologySelectorTerm type
                                                            implements a subset of
                                                            the NodeSelectorTerm.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                        type: array
                                                    required:
                                                    - nodeSelectorTerms
                                                    type: object
                                                type: object
                                              podAffinity:
                                                description: Describes pod affinity
                                                  scheduling rules (e.g. co-locate
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      has pods which matches the corresponding
                                                      podAffinityTerm; the node(s)
                                                      with the highest sum are the
                                                      most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaceSelector:
                                                              description: A label
                                                                query over the set
                                                                of namespaces that
                                                                the term applies to.
                                                                The term is applied
                                                                to the union of the
                                                                namespaces selected
                                                                by this field and
                                                                the ones listed in
                                                                the namespaces field.
                                                                null selector and
                                                                null or empty namespaces
                                                                list means "this pod's
                                                                namespace". An empty
                                                                selector ({}) matches
                                                                all namespaces. This
                                                                field is alpha-level
                                                                and is only honored
                                                                when PodAffinityNamespaceSelector
                                                                feature is enabled.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaces:
                                                              description: namespaces
                                                                specifies a static
                                                                list of namespace
                                                                names that the term
                                                                applies to. The term
                                                                is applied to the
                                                                union of the namespaces
                                                                listed in this field
                                                                and the ones selected
                                                                by namespaceSelector.
                                                                null or empty namespaces
                                                                list and null namespaceSelector
                                                                means "this pod's
                                                                namespace"
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaceSelector:
                                                          description: A label query
                                                            over the set of namespaces
                                                            that the term applies
                                                            to. The term is applied
                                                            to the union of the namespaces
                                                            selected by this field
                                                            and the ones listed in
                                                            the namespaces field.
                                                            null selector and null
                                                            or empty namespaces list
                                                            means "this pod's namespace".
                                                            An empty selector ({})
                                                            matches all namespaces.
                                                            This field is alpha-level
                                                            and is only honored when
                                                            PodAffinityNamespaceSelector
                                                            feature is enabled.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces
                                                            specifies a static list
                                                            of namespace names that
                                                            the term applies to. The
                                                            term is applied to the
                                                            union of the namespaces
                                                            listed in this field and
                                                            the ones selected by namespaceSelector.
                                                            null or empty namespaces
                                                            list and null namespaceSelector
                                                            means "this pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                              podAntiAffinity:
                                                description: Describes pod anti-affinity
                                                  scheduling rules (e.g. avoid putting
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the anti-affinity
                                                      expressions specified by this
                                                      field, but it may choose a node
                                                      that violates one or more of
                                                      the expressions. The node that
                                                      is most preferred is the one
                                                      with the greatest sum of weights,
                                                      i.e. for each node that meets
                                                      all of the scheduling requirements
                                                      (resource request, requiredDuringScheduling
                                                      anti-affinity expressions, etc.),
                                                      compute a sum by iterating through
                                                      the elements of this field and
                                                      adding "weight" to the sum if
                                                      the node has pods which matches
                                                      the corresponding podAffinityTerm;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaceSelector:
                                                              description: A label
                                                                query over the set
                                                                of namespaces that
                                                                the term applies to.
                                                                The term is applied
                                                                to the union of the
                                                                namespaces selected
                                                                by this field and
                                                                the ones listed in
                                                                the namespaces field.
                                                                null selector and
                                                                null or empty namespaces
                                                                list means "this pod's
                                                                namespace". An empty
                                                                selector ({}) matches
                                                                all namespaces. This
                                                                field is alpha-level
                                                                and is only honored
                                                                when PodAffinityNamespaceSelector
                                                                feature is enabled.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaces:
                                                              description: namespaces
                                                                specifies a static
                                                                list of namespace
                                                                names that the term
                                                                applies to. The term
                                                                is applied to the
                                                                union of the namespaces
                                                                listed in this field
                                                                and the ones selected
                                                                by namespaceSelector.
                                                                null or empty namespaces
                                                                list and null namespaceSelector
                                                                means "this pod's
                                                                namespace"
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the anti-affinity
                                                      requirements specified by this
                                                      field are not met at scheduling
                                                      time, the pod will not be scheduled
                                                      onto the node. If the anti-affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaceSelector:
                                                          description: A label query
                                                            over the set of namespaces
                                                            that the term applies
                                                            to. The term is applied
                                                            to the union of the namespaces
                                                            selected by this field
                                                            and the ones listed in
                                                            the namespaces field.
                                                            null selector and null
                                                            or empty namespaces list
                                                            means "this pod's namespace".
                                                            An empty selector ({})
                                                            matches all namespaces.
                                                            This field is alpha-level
                                                            and is only honored when
                                                            PodAffinityNamespaceSelector
                                                            feature is enabled.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces
                                                            specifies a static list
                                                            of namespace names that
                                                            the term applies to. The
                                                            term is applied to the
                                                            union of the namespaces
                                                            listed in this field and
                                                            the ones selected by namespaceSelector.
                                                            null or empty namespaces
                                                            list and null namespaceSelector
                                                            means "this pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                            type: object
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: 'NodeSelector is a selector
                                              which must be true for the pod to fit
                                              on a node. Selector which must match
                                              a node''s labels for the pod to be scheduled
                                              on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                            type: object
                                          priorityClassName:
                                            description: If specified, the pod's priorityClassName.
                                            type: string
                                          serviceAccountName:
                                            description: If specified, the pod's service
                                              account
                                            type: string
                                          tolerations:
                                            description: If specified, the pod's tolerations.
                                            items:
                                              description: The pod this Toleration
                                                is attached to tolerates any taint
                                                that matches the triple <key,value,effect>
                                                using the matching operator <operator>.
                                              properties:
                                                effect:
                                                  description: Effect indicates the
                                                    taint effect to match. Empty means
                                                    match all taint effects. When
                                                    specified, allowed values are
                                                    NoSchedule, PreferNoSchedule and
                                                    NoExecute.
                                                  type: string
                                                key:
                                                  description: Key is the taint key
                                                    that the toleration applies to.
                                                    Empty means match all taint keys.
                                                    If the key is empty, operator
                                                    must be Exists; this combination
                                                    means to match all values and
                                                    all keys.
                                                  type: string
                                                operator:
                                                  description: Operator represents
                                                    a key's relationship to the value.
                                                    Valid operators are Exists and
                                                    Equal. Defaults to Equal. Exists
                                                    is equivalent to wildcard for
                                                    value, so that a pod can tolerate
                                                    all taints of a particular category.
                                                  type: string
                                                tolerationSeconds:
                                                  description: TolerationSeconds represents
                                                    the period of time the toleration
                                                    (which must be of effect NoExecute,
                                                    otherwise this field is ignored)
                                                    tolerates the taint. By default,
                                                    it is not set, which means tolerate
                                                    the taint forever (do not evict).
                                                    Zero and negative values will
                                                    be treated as 0 (evict immediately)
                                                    by the system.
                                                  format: int64
                                                  type: integer
                                                value:
                                                  description: Value is the taint
                                                    value the toleration matches to.
                                                    If the operator is Exists, the
                                                    value should be empty, otherwise
                                                    just a regular string.
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                    type: object
                                  serviceType:
                                    description: Optional service type for Kubernetes
                                      solver service. Supported values are NodePort
                                      or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                            type: object
                          selector:
                            description: Selector selects a set of DNSNames on the
                              Certificate resource that should be solved using this
                              challenge solver. If not specified, the solver will
                              be treated as the 'default' solver with the lowest priority,
                              i.e. if any other solver has a more specific match,
                              it will be used instead.
                            properties:
                              dnsNames:
                                description: List of DNSNames that this solver will
                                  be used to solve. If specified and a match is found,
                                  a dnsNames selector will take precedence over a
                                  dnsZones selector. If multiple solvers match with
                                  the same dnsNames value, the solver with the most
                                  matching labels in matchLabels will be selected.
                                  If neither has more matches, the solver defined
                                  earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              dnsZones:
                                description: List of DNSZones that this solver will
                                  be used to solve. The most specific DNS zone match
                                  specified here will take precedence over other DNS
                                  zone matches, so a solver specifying sys.example.com
                                  will be selected over one specifying example.com
                                  for the domain www.sys.example.com. If multiple
                                  solvers match with the same dnsZones value, the
                                  solver with the most matching labels in matchLabels
                                  will be selected. If neither has more matches, the
                                  solver defined earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: A label selector that is used to refine
                                  the set of certificate's that this challenge solver
                                  will apply to.
                                type: object
                            type: object
                        type: object
                      type: array
                  required:
                  - privateKeySecretRef
                  - server
                  type: object
                ca:
                  description: CA configures this issuer to sign certificates using
                    a signing CA keypair stored in a Secret resource. This is used
                    to build internal PKIs that are managed by cert-manager.
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate
                        extension which identifies the location of the CRL from which
                        the revocation of this certificate can be checked. If not
                        set, certificates will be issued without distribution points
                        set.
                      items:
                        type: string
                      type: array
                    ocspServers:
                      description: The OCSP server list is an X.509 v3 extension that
                        defines a list of URLs of OCSP responders. The OCSP responders
                        can be queried for the revocation status of an issued certificate.
                        If not set, the certificate will be issued with no OCSP servers
                        set. For example, an OCSP server URL could be "http://ocsp.int-x3.letsencrypt.org".
                      items:
                        type: string
                      type: array
                    secretName:
                      description: SecretName is the name of the secret used to sign
                        Certificates issued by this Issuer.
                      type: string
                  required:
                  - secretName
                  type: object
                selfSigned:
                  description: SelfSigned configures this issuer to 'self sign' certificates
                    using the private key used to create the CertificateRequest object.
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate
                        extension which identifies the location of the CRL from which
                        the revocation of this certificate can be checked. If not
                        set certificate will be issued without CDP. Values are strings.
                      items:
                        type: string
                      type: array
                  type: object
                vault:
                  description: Vault configures this issuer to sign certificates using
                    a HashiCorp Vault PKI backend.
                  properties:
                    auth:
                      description: Auth configures how cert-manager authenticates
                        with the Vault server.
                      properties:
                        appRole:
                          description: AppRole authenticates with Vault using the
                            App Role auth mechanism, with the role and secret stored
                            in a Kubernetes Secret resource.
                          properties:
                            path:
                              description: 'Path where the App Role authentication
                                backend is mounted in Vault, e.g: "approle"'
                              type: string
                            roleId:
                              description: RoleID configured in the App Role authentication
                                backend when setting up the authentication backend
                                in Vault.
                              type: string
                            secretRef:
                              description: Reference to a key in a Secret that contains
                                the App Role secret used to authenticate with Vault.
                                The `key` field must be specified and denotes which
                                entry within the Secret resource is used as the app
                                role secret.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - path
                          - roleId
                          - secretRef
                          type: object
                        kubernetes:
                          description: Kubernetes authenticates with Vault by passing
                            the ServiceAccount token stored in the named Secret resource
                            to the Vault server.
                          properties:
                            mountPath:
                              description: The Vault mountPath here is the mount path
                                to use when authenticating with Vault. For example,
                                setting a value to `/v1/auth/foo`, will use the path
                                `/v1/auth/foo/login` to authenticate with Vault. If
                                unspecified, the default value "/v1/auth/kubernetes"
                                will be used.
                              type: string
                            role:
                              description: A required field containing the Vault Role
                                to assume. A Role binds a Kubernetes ServiceAccount
                                with a set of Vault policies.
                              type: string
                            secretRef:
                              description: The required Secret field containing a
                                Kubernetes ServiceAccount JWT used for authenticating
                                with Vault. Use of 'ambient credentials' is not supported.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - role
                          - secretRef
                          type: object
                        tokenSecretRef:
                          description: TokenSecretRef authenticates with Vault by
                            presenting a token.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      type: object
                    caBundle:
                      description: PEM-encoded CA bundle (base64-encoded) used to
                        validate Vault server certificate. Only used if the Server
                        URL is using HTTPS protocol. This parameter is ignored for
                        plain HTTP protocol connection. If not set the system root
                        certificates are used to validate the TLS connection.
                      format: byte
                      type: string
                    namespace:
                      description: 'Name of the vault namespace. Namespaces is a set
                        of features within Vault Enterprise that allows Vault environments
                        to support Secure Multi-tenancy. e.g: "ns1" More about namespaces
                        can be found here https://www.vaultproject.io/docs/enterprise/namespaces'
                      type: string
                    path:
                      description: 'Path is the mount path of the Vault PKI backend''s
                        `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".'
                      type: string
                    server:
                      description: 'Server is the connection address for the Vault
                        server, e.g: "https://vault.example.com:8200".'
                      type: string
                  required:
                  - auth
                  - path
                  - server
                  type: object
                venafi:
                  description: Venafi configures this issuer to sign certificates
                    using a Venafi TPP or Venafi Cloud policy zone.
                  properties:
                    cloud:
                      description: Cloud specifies the Venafi cloud configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        apiTokenSecretRef:
                          description: APITokenSecretRef is a secret key selector
                            for the Venafi Cloud API token.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: URL is the base URL for Venafi Cloud. Defaults
                            to "https://api.venafi.cloud/v1".
                          type: string
                      required:
                      - apiTokenSecretRef
                      type: object
                    tpp:
                      description: TPP specifies Trust Protection Platform configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        caBundle:
                          description: CABundle is a PEM encoded TLS certificate to
                            use to verify connections to the TPP instance. If specified,
                            system roots will not be used and the issuing CA for the
                            TPP instance must be verifiable using the provided root.
                            If not specified, the connection will be verified using
                            the cert-manager system root certificates.
                          format: byte
                          type: string
                        credentialsRef:
                          description: CredentialsRef is a reference to a Secret containing
                            the username and password for the TPP server. The secret
                            must contain two keys, 'username' and 'password'.
                          properties:
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: 'URL is the base URL for the vedsdk endpoint
                            of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".'
                          type: string
                      required:
                      - credentialsRef
                      - url
                      type: object
                    zone:
                      description: Zone is the Venafi Policy Zone to use for this
                        issuer. All requests made to the Venafi platform will be restricted
                        by the named zone policy. This field is required.
                      type: string
                  required:
                  - zone
                  type: object
              type: object
            status:
              description: Status of the Issuer. This is set and managed automatically.
              properties:
                acme:
                  description: ACME specific status options. This field should only
                    be set if the Issuer is configured to use an ACME server to issue
                    certificates.
                  properties:
                    lastRegisteredEmail:
                      description: LastRegisteredEmail is the email associated with
                        the latest registered ACME account, in order to track changes
                        made to registered account associated with the  Issuer
                      type: string
                    uri:
                      description: URI is the unique account identifier, which can
                        also be used to retrieve account details from the CA
                      type: string
                  type: object
                conditions:
                  description: List of status conditions to indicate the status of
                    a CertificateRequest. Known condition types are `Ready`.
                  items:
                    description: IssuerCondition contains condition information for
                      an Issuer.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      observedGeneration:
                        description: If set, this represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.condition[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the Issuer.
                        format: int64
                        type: integer
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`,
                          `Unknown`).
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Ready`).
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
              type: object
          required:
          - spec
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: An Issuer represents a certificate issuing authority which
            can be referenced as part of `issuerRef` fields. It is scoped to a single
            namespace and can therefore only be referenced by resources within the
            same namespace.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the Issuer resource.
              properties:
                acme:
                  description: ACME configures this issuer to communicate with a RFC8555
                    (ACME) server to obtain signed x509 certificates.
                  properties:
                    disableAccountKeyGeneration:
                      description: Enables or disables generating a new ACME account
                        key. If true, the Issuer resource will *not* request a new
                        account but will expect the account key to be supplied via
                        an existing secret. If false, the cert-manager system will
                        generate a new ACME account key for the Issuer. Defaults to
                        false.
                      type: boolean
                    email:
                      description: Email is the email address to be associated with
                        the ACME account. This field is optional, but it is strongly
                        recommended to be set. It will be used to contact you in case
                        of issues with your account or certificates, including expiry
                        notification emails. This field may be updated after the account
                        is initially registered.
                      type: string
                    enableDurationFeature:
                      description: Enables requesting a Not After date on certificates
                        that matches the duration of the certificate. This is not
                        supported by all ACME servers like Let's Encrypt. If set to
                        true when the ACME server does not support it it will create
                        an error on the Order. Defaults to false.
                      type: boolean
                    externalAccountBinding:
                      description: ExternalAccountBinding is a reference to a CA external
                        account of the ACME server. If set, upon registration cert-manager
                        will attempt to associate the given external account credentials
                        with the registered ACME account.
                      properties:
                        keyAlgorithm:
                          description: 'Deprecated: keyAlgorithm field exists for
                            historical compatibility reasons and should not be used.
                            The algorithm is now hardcoded to HS256 in golang/x/crypto/acme.'
                          enum:
                          - HS256
                          - HS384
                          - HS512
                          type: string
                        keyID:
                          description: keyID is the ID of the CA key that the External
                            Account is bound to.
                          type: string
                        keySecretRef:
                          description: keySecretRef is a Secret Key Selector referencing
                            a data item in a Kubernetes Secret which holds the symmetric
                            MAC key of the External Account Binding. The `key` is
                            the index string that is paired with the key data in the
                            Secret and should not be confused with the key data itself,
                            or indeed with the External Account Binding keyID above.
                            The secret key stored in the Secret **must** be un-padded,
                            base64 URL encoded data.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - keyID
                      - keySecretRef
                      type: object
                    preferredChain:
                      description: 'PreferredChain is the chain to use if the ACME
                        server outputs multiple. PreferredChain is no guarantee that
                        this one gets delivered by the ACME endpoint. For example,
                        for Let''s Encrypt''s DST crosssign you would use: "DST Root
                        CA X3" or "ISRG Root X1" for the newer Let''s Encrypt root
                        CA. This value picks the first certificate bundle in the ACME
                        alternative chains that has a certificate with this value
                        as its issuer''s CN'
                      maxLength: 64
                      type: string
                    privateKeySecretRef:
                      description: PrivateKey is the name of a Kubernetes Secret resource
                        that will be used to store the automatically generated ACME
                        account private key. Optionally, a `key` may be specified
                        to select a specific entry within the named Secret resource.
                        If `key` is not specified, a default of `tls.key` will be
                        used.
                      properties:
                        key:
                          description: The key of the entry in the Secret resource's
                            `data` field to be used. Some instances of this field
                            may be defaulted, in others it may be required.
                          type: string
                        name:
                          description: 'Name of the resource being referred to. More
                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                      required:
                      - name
                      type: object
                    server:
                      description: 'Server is the URL used to access the ACME server''s
                        ''directory'' endpoint. For example, for Let''s Encrypt''s
                        staging endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory".
                        Only ACME v2 endpoints (i.e. RFC 8555) are supported.'
                      type: string
                    skipTLSVerify:
                      description: Enables or disables validation of the ACME server
                        TLS certificate. If true, requests to the ACME server will
                        not have their TLS certificate validated (i.e. insecure connections
                        will be allowed). Only enable this option in development environments.
                        The cert-manager system installed roots will be used to verify
                        connections to the ACME server if this is false. Defaults
                        to false.
                      type: boolean
                    solvers:
                      description: 'Solvers is a list of challenge solvers that will
                        be used to solve ACME challenges for the matching domains.
                        Solver configurations must be provided in order to obtain
                        certificates from an ACME server. For more information, see:
                        https://cert-manager.io/docs/configuration/acme/'
                      items:
                        description: An ACMEChallengeSolver describes how to solve
                          ACME challenges for the issuer it is part of. A selector
                          may be provided to use different solving strategies for
                          different DNS names. Only one of HTTP01 or DNS01 must be
                          provided.
                        properties:
                          dns01:
                            description: Configures cert-manager to attempt to complete
                              authorizations by performing the DNS01 challenge flow.
                            properties:
                              acmeDNS:
                                description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)
                                  API to manage DNS01 challenge records.
                                properties:
                                  accountSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  host:
                                    type: string
                                required:
                                - accountSecretRef
                                - host
                                type: object
                              akamai:
                                description: Use the Akamai DNS zone management API
                                  to manage DNS01 challenge records.
                                properties:
                                  accessTokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientSecretSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientTokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  serviceConsumerDomain:
                                    type: string
                                required:
                                - accessTokenSecretRef
                                - clientSecretSecretRef
                                - clientTokenSecretRef
                                - serviceConsumerDomain
                                type: object
                              azureDNS:
                                description: Use the Microsoft Azure DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  clientID:
                                    description: if both this and ClientSecret are
                                      left unset MSI will be used
                                    type: string
                                  clientSecretSecretRef:
                                    description: if both this and ClientID are left
                                      unset MSI will be used
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  environment:
                                    enum:
                                    - AzurePublicCloud
                                    - AzureChinaCloud
                                    - AzureGermanCloud
                                    - AzureUSGovernmentCloud
                                    type: string
                                  hostedZoneName:
                                    type: string
                                  resourceGroupName:
                                    type: string
                                  subscriptionID:
                                    type: string
                                  tenantID:
                                    description: when specifying ClientID and ClientSecret
                                      then this field is also needed
                                    type: string
                                required:
                                - resourceGroupName
                                - subscriptionID
                                type: object
                              cloudDNS:
                                description: Use the Google Cloud DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  hostedZoneName:
                                    description: HostedZoneName is an optional field
                                      that tells cert-manager in which Cloud DNS zone
                                      the challenge record has to be created. If left
                                      empty cert-manager will automatically choose
                                      a zone.
                                    type: string
                                  project:
                                    type: string
                                  serviceAccountSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - project
                                type: object
                              cloudflare:
                                description: Use the Cloudflare API to manage DNS01
                                  challenge records.
                                properties:
                                  apiKeySecretRef:
                                    description: 'API key to use to authenticate with
                                      Cloudflare. Note: using an API token to authenticate
                                      is now the recommended method as it allows greater
                                      control of permissions.'
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  apiTokenSecretRef:
                                    description: API token used to authenticate with
                                      Cloudflare.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  email:
                                    description: Email of the account, only required
                                      when using API key based authentication.
                                    type: string
                                type: object
                              cnameStrategy:
                                description: CNAMEStrategy configures how the DNS01
                                  provider should handle CNAME records when found
                                  in DNS zones.
                                enum:
                                - None
                                - Follow
                                type: string
                              digitalocean:
                                description: Use the DigitalOcean DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  tokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - tokenSecretRef
                                type: object
                              rfc2136:
                                description: Use RFC2136 ("Dynamic Updates in the
                                  Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/)
                                  to manage DNS01 challenge records.
                                properties:
                                  nameserver:
                                    description: The IP address or hostname of an
                                      authoritative DNS server supporting RFC2136
                                      in the form host:port. If the host is an IPv6
                                      address it must be enclosed in square brackets
                                      (e.g [2001:db8::1])┬á; port is optional. This
                                      field is required.
                                    type: string
                                  tsigAlgorithm:
                                    description: 'The TSIG Algorithm configured in
                                      the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef``
                                      and ``tsigKeyName`` are defined. Supported values
                                      are (case-insensitive): ``HMACMD5`` (default),
                                      ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.'
                                    type: string
                                  tsigKeyName:
                                    description: The TSIG Key name configured in the
                                      DNS. If ``tsigSecretSecretRef`` is defined,
                                      this field is required.
                                    type: string
                                  tsigSecretSecretRef:
                                    description: The name of the secret containing
                                      the TSIG value. If ``tsigKeyName`` is defined,
                                      this field is required.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - nameserver
                                type: object
                              route53:
                                description: Use the AWS Route53 API to manage DNS01
                                  challenge records.
                                properties:
                                  accessKeyID:
                                    description: 'The AccessKeyID is used for authentication.
                                      If not set we fall-back to using env vars, shared
                                      credentials file or AWS Instance metadata see:
                                      https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                    type: string
                                  hostedZoneID:
                                    description: If set, the provider will manage
                                      only this zone in Route53 and will not do an
                                      lookup using the route53:ListHostedZonesByName
                                      api call.
                                    type: string
                                  region:
                                    description: Always set the region when using
                                      AccessKeyID and SecretAccessKey
                                    type: string
                                  role:
                                    description: Role is a Role ARN which the Route53
                                      provider will assume using either the explicit
                                      credentials AccessKeyID/SecretAccessKey or the
                                      inferred credentials from environment variables,
                                      shared credentials file or AWS Instance metadata
                                    type: string
                                  secretAccessKeySecretRef:
                                    description: The SecretAccessKey is used for authentication.
                                      If not set we fall-back to using env vars, shared
                                      credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - region
                                type: object
                              webhook:
                                description: Configure an external webhook based DNS01
                                  challenge solver to manage DNS01 challenge records.
                                properties:
                                  config:
                                    description: Additional configuration that should
                                      be passed to the webhook apiserver when challenges
                                      are processed. This can contain arbitrary JSON
                                      data. Secret values should not be specified
                                      in this stanza. If secret values are needed
                                      (e.g. credentials for a DNS service), you should
                                      use a SecretKeySelector to reference a Secret
                                      resource. For details on the schema of this
                                      field, consult the webhook provider implementation's
                                      documentation.
                                    x-kubernetes-preserve-unknown-fields: true
                                  groupName:
                                    description: The API group name that should be
                                      used when POSTing ChallengePayload resources
                                      to the webhook apiserver. This should be the
                                      same as the GroupName specified in the webhook
                                      provider implementation.
                                    type: string
                                  solverName:
                                    description: The name of the solver to use, as
                                      defined in the webhook provider implementation.
                                      This will typically be the name of the provider,
                                      e.g. 'cloudflare'.
                                    type: string
                                required:
                                - groupName
                                - solverName
                                type: object
                            type: object
                          http01:
                            description: Configures cert-manager to attempt to complete
                              authorizations by performing the HTTP01 challenge flow.
                              It is not possible to obtain certificates for wildcard
                              domain names (e.g. `*.example.com`) using the HTTP01
                              challenge mechanism.
                            properties:
                              gatewayHTTPRoute:
                                description: The Gateway API is a sig-network community
                                  API that models service networking in Kubernetes
                                  (https://gateway-api.sigs.k8s.io/). The Gateway
                                  solver will create HTTPRoutes with the specified
                                  labels in the same namespace as the challenge. This
                                  solver is experimental, and fields / behaviour may
                                  change in the future.
                                properties:
                                  labels:
                                    additionalProperties:
                                      type: string
                                    description: The labels that cert-manager will
                                      use when creating the temporary HTTPRoute needed
                                      for solving the HTTP-01 challenge. These labels
                                      must match the label selector of at least one
                                      Gateway.
                                    type: object
                                  serviceType:
                                    description: Optional service type for Kubernetes
                                      solver service. Supported values are NodePort
                                      or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                              ingress:
                                description: The ingress based HTTP01 challenge solver
                                  will solve challenges by creating or modifying Ingress
                                  resources in order to route requests for '/.well-known/acme-challenge/XYZ'
                                  to 'challenge solver' pods that are provisioned
                                  by cert-manager for each Challenge to be completed.
                                properties:
                                  class:
                                    description: The ingress class to use when creating
                                      Ingress resources to solve ACME challenges that
                                      use this challenge solver. Only one of 'class'
                                      or 'name' may be specified.
                                    type: string
                                  ingressTemplate:
                                    description: Optional ingress template used to
                                      configure the ACME challenge solver ingress
                                      used for HTTP01 challenges.
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the
                                          ingress used to solve HTTP01 challenges.
                                          Only the 'labels' and 'annotations' fields
                                          may be set. If labels or annotations overlap
                                          with in-built values, the values here will
                                          override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be
                                              added to the created ACME HTTP01 solver
                                              ingress.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added
                                              to the created ACME HTTP01 solver ingress.
                                            type: object
                                        type: object
                                    type: object
                                  name:
                                    description: The name of the ingress resource
                                      that should have ACME challenge solving routes
                                      inserted into it in order to solve HTTP01 challenges.
                                      This is typically used in conjunction with ingress
                                      controllers like ingress-gce, which maintains
                                      a 1:1 mapping between external IPs and ingress
                                      resources.
                                    type: string
                                  podTemplate:
                                    description: Optional pod template used to configure
                                      the ACME challenge solver pods used for HTTP01
                                      challenges.
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the
                                          pod used to solve HTTP01 challenges. Only
                                          the 'labels' and 'annotations' fields may
                                          be set. If labels or annotations overlap
                                          with in-built values, the values here will
                                          override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be
                                              added to the create ACME HTTP01 solver
                                              pods.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added
                                              to the created ACME HTTP01 solver pods.
                                            type: object
                                        type: object
                                      spec:
                                        description: PodSpec defines overrides for
                                          the HTTP01 challenge solver pod. Only the
                                          'priorityClassName', 'nodeSelector', 'affinity',
                                          'serviceAccountName' and 'tolerations' fields
                                          are supported currently. All other fields
                                          will be ignored.
                                        properties:
                                          affinity:
                                            description: If specified, the pod's scheduling
                                              constraints
                                            properties:
                                              nodeAffinity:
                                                description: Describes node affinity
                                                  scheduling rules for the pod.
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      matches the corresponding matchExpressions;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: An empty preferred
                                                        scheduling term matches all
                                                        objects with implicit weight
                                                        0 (i.e. it's a no-op). A null
                                                        preferred scheduling term
                                                        matches no objects (i.e. is
                                                        also a no-op).
                                                      properties:
                                                        preference:
                                                          description: A node selector
                                                            term, associated with
                                                            the corresponding weight.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                        weight:
                                                          description: Weight associated
                                                            with matching the corresponding
                                                            nodeSelectorTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - preference
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to an update), the system
                                                      may or may not try to eventually
                                                      evict the pod from its node.
                                                    properties:
                                                      nodeSelectorTerms:
                                                        description: Required. A list
                                                          of node selector terms.
                                                          The terms are ORed.
                                                        items:
                                                          description: A null or empty
                                                            node selector term matches
                                                            no objects. The requirements
                                                            of them are ANDed. The
                                                            TopologySelectorTerm type
                                                            implements a subset of
                                                            the NodeSelectorTerm.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                        type: array
                                                    required:
                                                    - nodeSelectorTerms
                                                    type: object
                                                type: object
                                              podAffinity:
                                                description: Describes pod affinity
                                                  scheduling rules (e.g. co-locate
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      has pods which matches the corresponding
                                                      podAffinityTerm; the node(s)
                                                      with the highest sum are the
                                                      most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaceSelector:
                                                              description: A label
                                                                query over the set
                                                                of namespaces that
                                                                the term applies to.
                                                                The term is applied
                                                                to the union of the
                                                                namespaces selected
                                                                by this field and
                                                                the ones listed in
                                                                the namespaces field.
                                                                null selector and
                                                                null or empty namespaces
                                                                list means "this pod's
                                                                namespace". An empty
                                                                selector ({}) matches
                                                                all namespaces. This
                                                                field is alpha-level
                                                                and is only honored
                                                                when PodAffinityNamespaceSelector
                                                                feature is enabled.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaces:
                                                              description: namespaces
                                                                specifies a static
                                                                list of namespace
                                                                names that the term
                                                                applies to. The term
                                                                is applied to the
                                                                union of the namespaces
                                                                listed in this field
                                                                and the ones selected
                                                                by namespaceSelector.
                                                                null or empty namespaces
                                                                list and null namespaceSelector
                                                                means "this pod's
                                                                namespace"
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaceSelector:
                                                          description: A label query
                                                            over the set of namespaces
                                                            that the term applies
                                                            to. The term is applied
                                                            to the union of the namespaces
                                                            selected by this field
                                                            and the ones listed in
                                                            the namespaces field.
                                                            null selector and null
                                                            or empty namespaces list
                                                            means "this pod's namespace".
                                                            An empty selector ({})
                                                            matches all namespaces.
                                                            This field is alpha-level
                                                            and is only honored when
                                                            PodAffinityNamespaceSelector
                                                            feature is enabled.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces
                                                            specifies a static list
                                                            of namespace names that
                                                            the term applies to. The
                                                            term is applied to the
                                                            union of the namespaces
                                                            listed in this field and
                                                            the ones selected by namespaceSelector.
                                                            null or empty namespaces
                                                            list and null namespaceSelector
                                                            means "this pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                              podAntiAffinity:
                                                description: Describes pod anti-affinity
                                                  scheduling rules (e.g. avoid putting
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the anti-affinity
                                                      expressions specified by this
                                                      field, but it may choose a node
                                                      that violates one or more of
                                                      the expressions. The node that
                                                      is most preferred is the one
                                                      with the greatest sum of weights,
                                                      i.e. for each node that meets
                                                      all of the scheduling requirements
                                                      (resource request, requiredDuringScheduling
                                                      anti-affinity expressions, etc.),
                                                      compute a sum by iterating through
                                                      the elements of this field and
                                                      adding "weight" to the sum if
                                                      the node has pods which matches
                                                      the corresponding podAffinityTerm;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaceSelector:
                                                              description: A label
                                                                query over the set
                                                                of namespaces that
                                                                the term applies to.
                                                                The term is applied
                                                                to the union of the
                                                                namespaces selected
                                                                by this field and
                                                                the ones listed in
                                                                the namespaces field.
                                                                null selector and
                                                                null or empty namespaces
                                                                list means "this pod's
                                                                namespace". An empty
                                                                selector ({}) matches
                                                                all namespaces. This
                                                                field is alpha-level
                                                                and is only honored
                                                                when PodAffinityNamespaceSelector
                                                                feature is enabled.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaces:
                                                              description: namespaces
                                                                specifies a static
                                                                list of namespace
                                                                names that the term
                                                                applies to. The term
                                                                is applied to the
                                                                union of the namespaces
                                                                listed in this field
                                                                and the ones selected
                                                                by namespaceSelector.
                                                                null or empty namespaces
                                                                list and null namespaceSelector
                                                                means "this pod's
                                                                namespace"
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the anti-affinity
                                                      requirements specified by this
                                                      field are not met at scheduling
                                                      time, the pod will not be scheduled
                                                      onto the node. If the anti-affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaceSelector:
                                                          description: A label query
                                                            over the set of namespaces
                                                            that the term applies
                                                            to. The term is applied
                                                            to the union of the namespaces
                                                            selected by this field
                                                            and the ones listed in
                                                            the namespaces field.
                                                            null selector and null
                                                            or empty namespaces list
                                                            means "this pod's namespace".
                                                            An empty selector ({})
                                                            matches all namespaces.
                                                            This field is alpha-level
                                                            and is only honored when
                                                            PodAffinityNamespaceSelector
                                                            feature is enabled.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces
                                                            specifies a static list
                                                            of namespace names that
                                                            the term applies to. The
                                                            term is applied to the
                                                            union of the namespaces
                                                            listed in this field and
                                                            the ones selected by namespaceSelector.
                                                            null or empty namespaces
                                                            list and null namespaceSelector
                                                            means "this pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                            type: object
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: 'NodeSelector is a selector
                                              which must be true for the pod to fit
                                              on a node. Selector which must match
                                              a node''s labels for the pod to be scheduled
                                              on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                            type: object
                                          priorityClassName:
                                            description: If specified, the pod's priorityClassName.
                                            type: string
                                          serviceAccountName:
                                            description: If specified, the pod's service
                                              account
                                            type: string
                                          tolerations:
                                            description: If specified, the pod's tolerations.
                                            items:
                                              description: The pod this Toleration
                                                is attached to tolerates any taint
                                                that matches the triple <key,value,effect>
                                                using the matching operator <operator>.
                                              properties:
                                                effect:
                                                  description: Effect indicates the
                                                    taint effect to match. Empty means
                                                    match all taint effects. When
                                                    specified, allowed values are
                                                    NoSchedule, PreferNoSchedule and
                                                    NoExecute.
                                                  type: string
                                                key:
                                                  description: Key is the taint key
                                                    that the toleration applies to.
                                                    Empty means match all taint keys.
                                                    If the key is empty, operator
                                                    must be Exists; this combination
                                                    means to match all values and
                                                    all keys.
                                                  type: string
                                                operator:
                                                  description: Operator represents
                                                    a key's relationship to the value.
                                                    Valid operators are Exists and
                                                    Equal. Defaults to Equal. Exists
                                                    is equivalent to wildcard for
                                                    value, so that a pod can tolerate
                                                    all taints of a particular category.
                                                  type: string
                                                tolerationSeconds:
                                                  description: TolerationSeconds represents
                                                    the period of time the toleration
                                                    (which must be of effect NoExecute,
                                                    otherwise this field is ignored)
                                                    tolerates the taint. By default,
                                                    it is not set, which means tolerate
                                                    the taint forever (do not evict).
                                                    Zero and negative values will
                                                    be treated as 0 (evict immediately)
                                                    by the system.
                                                  format: int64
                                                  type: integer
                                                value:
                                                  description: Value is the taint
                                                    value the toleration matches to.
                                                    If the operator is Exists, the
                                                    value should be empty, otherwise
                                                    just a regular string.
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                    type: object
                                  serviceType:
                                    description: Optional service type for Kubernetes
                                      solver service. Supported values are NodePort
                                      or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                            type: object
                          selector:
                            description: Selector selects a set of DNSNames on the
                              Certificate resource that should be solved using this
                              challenge solver. If not specified, the solver will
                              be treated as the 'default' solver with the lowest priority,
                              i.e. if any other solver has a more specific match,
                              it will be used instead.
                            properties:
                              dnsNames:
                                description: List of DNSNames that this solver will
                                  be used to solve. If specified and a match is found,
                                  a dnsNames selector will take precedence over a
                                  dnsZones selector. If multiple solvers match with
                                  the same dnsNames value, the solver with the most
                                  matching labels in matchLabels will be selected.
                                  If neither has more matches, the solver defined
                                  earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              dnsZones:
                                description: List of DNSZones that this solver will
                                  be used to solve. The most specific DNS zone match
                                  specified here will take precedence over other DNS
                                  zone matches, so a solver specifying sys.example.com
                                  will be selected over one specifying example.com
                                  for the domain www.sys.example.com. If multiple
                                  solvers match with the same dnsZones value, the
                                  solver with the most matching labels in matchLabels
                                  will be selected. If neither has more matches, the
                                  solver defined earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: A label selector that is used to refine
                                  the set of certificate's that this challenge solver
                                  will apply to.
                                type: object
                            type: object
                        type: object
                      type: array
                  required:
                  - privateKeySecretRef
                  - server
                  type: object
                ca:
                  description: CA configures this issuer to sign certificates using
                    a signing CA keypair stored in a Secret resource. This is used
                    to build internal PKIs that are managed by cert-manager.
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate
                        extension which identifies the location of the CRL from which
                        the revocation of this certificate can be checked. If not
                        set, certificates will be issued without distribution points
                        set.
                      items:
                        type: string
                      type: array
                    ocspServers:
                      description: The OCSP server list is an X.509 v3 extension that
                        defines a list of URLs of OCSP responders. The OCSP responders
                        can be queried for the revocation status of an issued certificate.
                        If not set, the certificate will be issued with no OCSP servers
                        set. For example, an OCSP server URL could be "http://ocsp.int-x3.letsencrypt.org".
                      items:
                        type: string
                      type: array
                    secretName:
                      description: SecretName is the name of the secret used to sign
                        Certificates issued by this Issuer.
                      type: string
                  required:
                  - secretName
                  type: object
                selfSigned:
                  description: SelfSigned configures this issuer to 'self sign' certificates
                    using the private key used to create the CertificateRequest object.
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate
                        extension which identifies the location of the CRL from which
                        the revocation of this certificate can be checked. If not
                        set certificate will be issued without CDP. Values are strings.
                      items:
                        type: string
                      type: array
                  type: object
                vault:
                  description: Vault configures this issuer to sign certificates using
                    a HashiCorp Vault PKI backend.
                  properties:
                    auth:
                      description: Auth configures how cert-manager authenticates
                        with the Vault server.
                      properties:
                        appRole:
                          description: AppRole authenticates with Vault using the
                            App Role auth mechanism, with the role and secret stored
                            in a Kubernetes Secret resource.
                          properties:
                            path:
                              description: 'Path where the App Role authentication
                                backend is mounted in Vault, e.g: "approle"'
                              type: string
                            roleId:
                              description: RoleID configured in the App Role authentication
                                backend when setting up the authentication backend
                                in Vault.
                              type: string
                            secretRef:
                              description: Reference to a key in a Secret that contains
                                the App Role secret used to authenticate with Vault.
                                The `key` field must be specified and denotes which
                                entry within the Secret resource is used as the app
                                role secret.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - path
                          - roleId
                          - secretRef
                          type: object
                        kubernetes:
                          description: Kubernetes authenticates with Vault by passing
                            the ServiceAccount token stored in the named Secret resource
                            to the Vault server.
                          properties:
                            mountPath:
                              description: The Vault mountPath here is the mount path
                                to use when authenticating with Vault. For example,
                                setting a value to `/v1/auth/foo`, will use the path
                                `/v1/auth/foo/login` to authenticate with Vault. If
                                unspecified, the default value "/v1/auth/kubernetes"
                                will be used.
                              type: string
                            role:
                              description: A required field containing the Vault Role
                                to assume. A Role binds a Kubernetes ServiceAccount
                                with a set of Vault policies.
                              type: string
                            secretRef:
                              description: The required Secret field containing a
                                Kubernetes ServiceAccount JWT used for authenticating
                                with Vault. Use of 'ambient credentials' is not supported.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - role
                          - secretRef
                          type: object
                        tokenSecretRef:
                          description: TokenSecretRef authenticates with Vault by
                            presenting a token.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      type: object
                    caBundle:
                      description: PEM-encoded CA bundle (base64-encoded) used to
                        validate Vault server certificate. Only used if the Server
                        URL is using HTTPS protocol. This parameter is ignored for
                        plain HTTP protocol connection. If not set the system root
                        certificates are used to validate the TLS connection.
                      format: byte
                      type: string
                    namespace:
                      description: 'Name of the vault namespace. Namespaces is a set
                        of features within Vault Enterprise that allows Vault environments
                        to support Secure Multi-tenancy. e.g: "ns1" More about namespaces
                        can be found here https://www.vaultproject.io/docs/enterprise/namespaces'
                      type: string
                    path:
                      description: 'Path is the mount path of the Vault PKI backend''s
                        `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".'
                      type: string
                    server:
                      description: 'Server is the connection address for the Vault
                        server, e.g: "https://vault.example.com:8200".'
                      type: string
                  required:
                  - auth
                  - path
                  - server
                  type: object
                venafi:
                  description: Venafi configures this issuer to sign certificates
                    using a Venafi TPP or Venafi Cloud policy zone.
                  properties:
                    cloud:
                      description: Cloud specifies the Venafi cloud configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        apiTokenSecretRef:
                          description: APITokenSecretRef is a secret key selector
                            for the Venafi Cloud API token.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: URL is the base URL for Venafi Cloud. Defaults
                            to "https://api.venafi.cloud/v1".
                          type: string
                      required:
                      - apiTokenSecretRef
                      type: object
                    tpp:
                      description: TPP specifies Trust Protection Platform configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        caBundle:
                          description: CABundle is a PEM encoded TLS certificate to
                            use to verify connections to the TPP instance. If specified,
                            system roots will not be used and the issuing CA for the
                            TPP instance must be verifiable using the provided root.
                            If not specified, the connection will be verified using
                            the cert-manager system root certificates.
                          format: byte
                          type: string
                        credentialsRef:
                          description: CredentialsRef is a reference to a Secret containing
                            the username and password for the TPP server. The secret
                            must contain two keys, 'username' and 'password'.
                          properties:
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: 'URL is the base URL for the vedsdk endpoint
                            of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".'
                          type: string
                      required:
                      - credentialsRef
                      - url
                      type: object
                    zone:
                      description: Zone is the Venafi Policy Zone to use for this
                        issuer. All requests made to the Venafi platform will be restricted
                        by the named zone policy. This field is required.
                      type: string
                  required:
                  - zone
                  type: object
              type: object
            status:
              description: Status of the Issuer. This is set and managed automatically.
              properties:
                acme:
                  description: ACME specific status options. This field should only
                    be set if the Issuer is configured to use an ACME server to issue
                    certificates.
                  properties:
                    lastRegisteredEmail:
                      description: LastRegisteredEmail is the email associated with
                        the latest registered ACME account, in order to track changes
                        made to registered account associated with the  Issuer
                      type: string
                    uri:
                      description: URI is the unique account identifier, which can
                        also be used to retrieve account details from the CA
                      type: string
                  type: object
                conditions:
                  description: List of status conditions to indicate the status of
                    a CertificateRequest. Known condition types are `Ready`.
                  items:
                    description: IssuerCondition contains condition information for
                      an Issuer.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      observedGeneration:
                        description: If set, this represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.condition[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the Issuer.
                        format: int64
                        type: integer
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`,
                          `Unknown`).
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Ready`).
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - cert-manager
      kind: Issuer
      listKind: IssuerList
      plural: issuers
      singular: issuer
    conditions:
    - lastTransitionTime: "2022-04-12T18:17:08Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2022-04-12T18:17:09Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.7.0
    creationTimestamp: "2022-04-12T18:16:22Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v0.28.5
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: kustomizations.kustomize.toolkit.fluxcd.io
    resourceVersion: "10089212"
    uid: dd744e4b-e80a-41c2-8b88-c7de9b45dafc
  spec:
    conversion:
      strategy: None
    group: kustomize.toolkit.fluxcd.io
    names:
      kind: Kustomization
      listKind: KustomizationList
      plural: kustomizations
      shortNames:
      - ks
      singular: kustomization
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: Kustomization is the Schema for the kustomizations API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: KustomizationSpec defines the desired state of a kustomization.
              properties:
                decryption:
                  description: Decrypt Kubernetes secrets before applying them on
                    the cluster.
                  properties:
                    provider:
                      description: Provider is the name of the decryption engine.
                      enum:
                      - sops
                      type: string
                    secretRef:
                      description: The secret name containing the private OpenPGP
                        keys used for decryption.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - provider
                  type: object
                dependsOn:
                  description: DependsOn may contain a meta.NamespacedObjectReference
                    slice with references to Kustomization resources that must be
                    ready before this Kustomization can be reconciled.
                  items:
                    description: NamespacedObjectReference contains enough information
                      to locate the referenced Kubernetes resource object in any namespace.
                    properties:
                      name:
                        description: Name of the referent.
                        type: string
                      namespace:
                        description: Namespace of the referent, when not specified
                          it acts as LocalObjectReference.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                force:
                  default: false
                  description: Force instructs the controller to recreate resources
                    when patching fails due to an immutable field change.
                  type: boolean
                healthChecks:
                  description: A list of resources to be included in the health assessment.
                  items:
                    description: NamespacedObjectKindReference contains enough information
                      to locate the typed referenced Kubernetes resource object in
                      any namespace.
                    properties:
                      apiVersion:
                        description: API version of the referent, if not specified
                          the Kubernetes preferred version will be used.
                        type: string
                      kind:
                        description: Kind of the referent.
                        type: string
                      name:
                        description: Name of the referent.
                        type: string
                      namespace:
                        description: Namespace of the referent, when not specified
                          it acts as LocalObjectReference.
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                  type: array
                images:
                  description: Images is a list of (image name, new name, new tag
                    or digest) for changing image names, tags or digests. This can
                    also be achieved with a patch, but this operator is simpler to
                    specify.
                  items:
                    description: Image contains an image name, a new name, a new tag
                      or digest, which will replace the original name and tag.
                    properties:
                      digest:
                        description: Digest is the value used to replace the original
                          image tag. If digest is present NewTag value is ignored.
                        type: string
                      name:
                        description: Name is a tag-less image name.
                        type: string
                      newName:
                        description: NewName is the value used to replace the original
                          name.
                        type: string
                      newTag:
                        description: NewTag is the value used to replace the original
                          tag.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                interval:
                  description: The interval at which to reconcile the Kustomization.
                  type: string
                kubeConfig:
                  description: The KubeConfig for reconciling the Kustomization on
                    a remote cluster. When specified, KubeConfig takes precedence
                    over ServiceAccountName.
                  properties:
                    secretRef:
                      description: SecretRef holds the name to a secret that contains
                        a 'value' key with the kubeconfig file as the value. It must
                        be in the same namespace as the Kustomization. It is recommended
                        that the kubeconfig is self-contained, and the secret is regularly
                        updated if credentials such as a cloud-access-token expire.
                        Cloud specific `cmd-path` auth helpers will not function without
                        adding binaries and credentials to the Pod that is responsible
                        for reconciling the Kustomization.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                      - name
                      type: object
                  type: object
                patches:
                  description: Strategic merge and JSON patches, defined as inline
                    YAML objects, capable of targeting objects based on kind, label
                    and annotation selectors.
                  items:
                    description: Patch contains an inline StrategicMerge or JSON6902
                      patch, and the target the patch should be applied to.
                    properties:
                      patch:
                        description: Patch contains an inline StrategicMerge patch
                          or an inline JSON6902 patch with an array of operation objects.
                        type: string
                      target:
                        description: Target points to the resources that the patch
                          document should be applied to.
                        properties:
                          annotationSelector:
                            description: AnnotationSelector is a string that follows
                              the label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                              It matches with the resource annotations.
                            type: string
                          group:
                            description: Group is the API group to select resources
                              from. Together with Version and Kind it is capable of
                              unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          kind:
                            description: Kind of the API Group to select resources
                              from. Together with Group and Version it is capable
                              of unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          labelSelector:
                            description: LabelSelector is a string that follows the
                              label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                              It matches with the resource labels.
                            type: string
                          name:
                            description: Name to match resources with.
                            type: string
                          namespace:
                            description: Namespace to select resources from.
                            type: string
                          version:
                            description: Version of the API Group to select resources
                              from. Together with Group and Kind it is capable of
                              unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                        type: object
                    type: object
                  type: array
                patchesJson6902:
                  description: JSON 6902 patches, defined as inline YAML objects.
                  items:
                    description: JSON6902Patch contains a JSON6902 patch and the target
                      the patch should be applied to.
                    properties:
                      patch:
                        description: Patch contains the JSON6902 patch document with
                          an array of operation objects.
                        items:
                          description: JSON6902 is a JSON6902 operation object. https://datatracker.ietf.org/doc/html/rfc6902#section-4
                          properties:
                            from:
                              description: From contains a JSON-pointer value that
                                references a location within the target document where
                                the operation is performed. The meaning of the value
                                depends on the value of Op, and is NOT taken into
                                account by all operations.
                              type: string
                            op:
                              description: Op indicates the operation to perform.
                                Its value MUST be one of "add", "remove", "replace",
                                "move", "copy", or "test". https://datatracker.ietf.org/doc/html/rfc6902#section-4
                              enum:
                              - test
                              - remove
                              - add
                              - replace
                              - move
                              - copy
                              type: string
                            path:
                              description: Path contains the JSON-pointer value that
                                references a location within the target document where
                                the operation is performed. The meaning of the value
                                depends on the value of Op.
                              type: string
                            value:
                              description: Value contains a valid JSON structure.
                                The meaning of the value depends on the value of Op,
                                and is NOT taken into account by all operations.
                              x-kubernetes-preserve-unknown-fields: true
                          required:
                          - op
                          - path
                          type: object
                        type: array
                      target:
                        description: Target points to the resources that the patch
                          document should be applied to.
                        properties:
                          annotationSelector:
                            description: AnnotationSelector is a string that follows
                              the label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                              It matches with the resource annotations.
                            type: string
                          group:
                            description: Group is the API group to select resources
                              from. Together with Version and Kind it is capable of
                              unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          kind:
                            description: Kind of the API Group to select resources
                              from. Together with Group and Version it is capable
                              of unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          labelSelector:
                            description: LabelSelector is a string that follows the
                              label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                              It matches with the resource labels.
                            type: string
                          name:
                            description: Name to match resources with.
                            type: string
                          namespace:
                            description: Namespace to select resources from.
                            type: string
                          version:
                            description: Version of the API Group to select resources
                              from. Together with Group and Kind it is capable of
                              unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                        type: object
                    required:
                    - patch
                    - target
                    type: object
                  type: array
                patchesStrategicMerge:
                  description: Strategic merge patches, defined as inline YAML objects.
                  items:
                    x-kubernetes-preserve-unknown-fields: true
                  type: array
                path:
                  description: Path to the directory containing the kustomization.yaml
                    file, or the set of plain YAMLs a kustomization.yaml should be
                    generated for. Defaults to 'None', which translates to the root
                    path of the SourceRef.
                  type: string
                postBuild:
                  description: PostBuild describes which actions to perform on the
                    YAML manifest generated by building the kustomize overlay.
                  properties:
                    substitute:
                      additionalProperties:
                        type: string
                      description: Substitute holds a map of key/value pairs. The
                        variables defined in your YAML manifests that match any of
                        the keys defined in the map will be substituted with the set
                        value. Includes support for bash string replacement functions
                        e.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.
                      type: object
                    substituteFrom:
                      description: SubstituteFrom holds references to ConfigMaps and
                        Secrets containing the variables and their values to be substituted
                        in the YAML manifests. The ConfigMap and the Secret data keys
                        represent the var names and they must match the vars declared
                        in the manifests for the substitution to happen.
                      items:
                        description: SubstituteReference contains a reference to a
                          resource containing the variables name and value.
                        properties:
                          kind:
                            description: Kind of the values referent, valid values
                              are ('Secret', 'ConfigMap').
                            enum:
                            - Secret
                            - ConfigMap
                            type: string
                          name:
                            description: Name of the values referent. Should reside
                              in the same namespace as the referring resource.
                            maxLength: 253
                            minLength: 1
                            type: string
                        required:
                        - kind
                        - name
                        type: object
                      type: array
                  type: object
                prune:
                  description: Prune enables garbage collection.
                  type: boolean
                retryInterval:
                  description: The interval at which to retry a previously failed
                    reconciliation. When not specified, the controller uses the KustomizationSpec.Interval
                    value to retry failures.
                  type: string
                serviceAccountName:
                  description: The name of the Kubernetes service account to impersonate
                    when reconciling this Kustomization.
                  type: string
                sourceRef:
                  description: Reference of the source where the kustomization file
                    is.
                  properties:
                    apiVersion:
                      description: API version of the referent
                      type: string
                    kind:
                      description: Kind of the referent
                      enum:
                      - GitRepository
                      - Bucket
                      type: string
                    name:
                      description: Name of the referent
                      type: string
                    namespace:
                      description: Namespace of the referent, defaults to the Kustomization
                        namespace
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                suspend:
                  description: This flag tells the controller to suspend subsequent
                    kustomize executions, it does not apply to already started executions.
                    Defaults to false.
                  type: boolean
                targetNamespace:
                  description: TargetNamespace sets or overrides the namespace in
                    the kustomization.yaml file.
                  maxLength: 63
                  minLength: 1
                  type: string
                timeout:
                  description: Timeout for validation, apply and health checking operations.
                    Defaults to 'Interval' duration.
                  type: string
                validation:
                  description: Validate the Kubernetes objects before applying them
                    on the cluster. The validation strategy can be 'client' (local
                    dry-run), 'server' (APIServer dry-run) or 'none'. When 'Force'
                    is 'true', validation will fallback to 'client' if set to 'server'
                    because server-side validation is not supported in this scenario.
                  enum:
                  - none
                  - client
                  - server
                  type: string
              required:
              - interval
              - prune
              - sourceRef
              type: object
            status:
              default:
                observedGeneration: -1
              description: KustomizationStatus defines the observed state of a kustomization.
              properties:
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, type FooStatus struct{     // Represents the
                      observations of a foo's current state.     // Known .status.conditions.type
                      are: \"Available\", \"Progressing\", and \"Degraded\"     //
                      +patchMergeKey=type     // +patchStrategy=merge     // +listType=map
                      \    // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                lastAppliedRevision:
                  description: The last successfully applied revision. The revision
                    format for Git sources is <branch|tag>/<commit-sha>.
                  type: string
                lastAttemptedRevision:
                  description: LastAttemptedRevision is the revision of the last reconciliation
                    attempt.
                  type: string
                lastHandledReconcileAt:
                  description: LastHandledReconcileAt holds the value of the most
                    recent reconcile request value, so a change of the annotation
                    value can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last reconciled generation.
                  format: int64
                  type: integer
                snapshot:
                  description: The last successfully applied revision metadata.
                  properties:
                    checksum:
                      description: The manifests sha1 checksum.
                      type: string
                    entries:
                      description: A list of Kubernetes kinds grouped by namespace.
                      items:
                        description: Snapshot holds the metadata of namespaced Kubernetes
                          objects
                        properties:
                          kinds:
                            additionalProperties:
                              type: string
                            description: The list of Kubernetes kinds.
                            type: object
                          namespace:
                            description: The namespace of this entry.
                            type: string
                        required:
                        - kinds
                        type: object
                      type: array
                  required:
                  - checksum
                  - entries
                  type: object
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: Kustomization is the Schema for the kustomizations API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: KustomizationSpec defines the configuration to calculate
                the desired state from a Source using Kustomize.
              properties:
                decryption:
                  description: Decrypt Kubernetes secrets before applying them on
                    the cluster.
                  properties:
                    provider:
                      description: Provider is the name of the decryption engine.
                      enum:
                      - sops
                      type: string
                    secretRef:
                      description: The secret name containing the private OpenPGP
                        keys used for decryption.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - provider
                  type: object
                dependsOn:
                  description: DependsOn may contain a meta.NamespacedObjectReference
                    slice with references to Kustomization resources that must be
                    ready before this Kustomization can be reconciled.
                  items:
                    description: NamespacedObjectReference contains enough information
                      to locate the referenced Kubernetes resource object in any namespace.
                    properties:
                      name:
                        description: Name of the referent.
                        type: string
                      namespace:
                        description: Namespace of the referent, when not specified
                          it acts as LocalObjectReference.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                force:
                  default: false
                  description: Force instructs the controller to recreate resources
                    when patching fails due to an immutable field change.
                  type: boolean
                healthChecks:
                  description: A list of resources to be included in the health assessment.
                  items:
                    description: NamespacedObjectKindReference contains enough information
                      to locate the typed referenced Kubernetes resource object in
                      any namespace.
                    properties:
                      apiVersion:
                        description: API version of the referent, if not specified
                          the Kubernetes preferred version will be used.
                        type: string
                      kind:
                        description: Kind of the referent.
                        type: string
                      name:
                        description: Name of the referent.
                        type: string
                      namespace:
                        description: Namespace of the referent, when not specified
                          it acts as LocalObjectReference.
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                  type: array
                images:
                  description: Images is a list of (image name, new name, new tag
                    or digest) for changing image names, tags or digests. This can
                    also be achieved with a patch, but this operator is simpler to
                    specify.
                  items:
                    description: Image contains an image name, a new name, a new tag
                      or digest, which will replace the original name and tag.
                    properties:
                      digest:
                        description: Digest is the value used to replace the original
                          image tag. If digest is present NewTag value is ignored.
                        type: string
                      name:
                        description: Name is a tag-less image name.
                        type: string
                      newName:
                        description: NewName is the value used to replace the original
                          name.
                        type: string
                      newTag:
                        description: NewTag is the value used to replace the original
                          tag.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                interval:
                  description: The interval at which to reconcile the Kustomization.
                  type: string
                kubeConfig:
                  description: The KubeConfig for reconciling the Kustomization on
                    a remote cluster. When specified, KubeConfig takes precedence
                    over ServiceAccountName.
                  properties:
                    secretRef:
                      description: SecretRef holds the name to a secret that contains
                        a 'value' key with the kubeconfig file as the value. It must
                        be in the same namespace as the Kustomization. It is recommended
                        that the kubeconfig is self-contained, and the secret is regularly
                        updated if credentials such as a cloud-access-token expire.
                        Cloud specific `cmd-path` auth helpers will not function without
                        adding binaries and credentials to the Pod that is responsible
                        for reconciling the Kustomization.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                      - name
                      type: object
                  type: object
                patches:
                  description: Strategic merge and JSON patches, defined as inline
                    YAML objects, capable of targeting objects based on kind, label
                    and annotation selectors.
                  items:
                    description: Patch contains an inline StrategicMerge or JSON6902
                      patch, and the target the patch should be applied to.
                    properties:
                      patch:
                        description: Patch contains an inline StrategicMerge patch
                          or an inline JSON6902 patch with an array of operation objects.
                        type: string
                      target:
                        description: Target points to the resources that the patch
                          document should be applied to.
                        properties:
                          annotationSelector:
                            description: AnnotationSelector is a string that follows
                              the label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                              It matches with the resource annotations.
                            type: string
                          group:
                            description: Group is the API group to select resources
                              from. Together with Version and Kind it is capable of
                              unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          kind:
                            description: Kind of the API Group to select resources
                              from. Together with Group and Version it is capable
                              of unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          labelSelector:
                            description: LabelSelector is a string that follows the
                              label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                              It matches with the resource labels.
                            type: string
                          name:
                            description: Name to match resources with.
                            type: string
                          namespace:
                            description: Namespace to select resources from.
                            type: string
                          version:
                            description: Version of the API Group to select resources
                              from. Together with Group and Kind it is capable of
                              unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                        type: object
                    type: object
                  type: array
                patchesJson6902:
                  description: 'JSON 6902 patches, defined as inline YAML objects.
                    Deprecated: Use Patches instead.'
                  items:
                    description: JSON6902Patch contains a JSON6902 patch and the target
                      the patch should be applied to.
                    properties:
                      patch:
                        description: Patch contains the JSON6902 patch document with
                          an array of operation objects.
                        items:
                          description: JSON6902 is a JSON6902 operation object. https://datatracker.ietf.org/doc/html/rfc6902#section-4
                          properties:
                            from:
                              description: From contains a JSON-pointer value that
                                references a location within the target document where
                                the operation is performed. The meaning of the value
                                depends on the value of Op, and is NOT taken into
                                account by all operations.
                              type: string
                            op:
                              description: Op indicates the operation to perform.
                                Its value MUST be one of "add", "remove", "replace",
                                "move", "copy", or "test". https://datatracker.ietf.org/doc/html/rfc6902#section-4
                              enum:
                              - test
                              - remove
                              - add
                              - replace
                              - move
                              - copy
                              type: string
                            path:
                              description: Path contains the JSON-pointer value that
                                references a location within the target document where
                                the operation is performed. The meaning of the value
                                depends on the value of Op.
                              type: string
                            value:
                              description: Value contains a valid JSON structure.
                                The meaning of the value depends on the value of Op,
                                and is NOT taken into account by all operations.
                              x-kubernetes-preserve-unknown-fields: true
                          required:
                          - op
                          - path
                          type: object
                        type: array
                      target:
                        description: Target points to the resources that the patch
                          document should be applied to.
                        properties:
                          annotationSelector:
                            description: AnnotationSelector is a string that follows
                              the label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                              It matches with the resource annotations.
                            type: string
                          group:
                            description: Group is the API group to select resources
                              from. Together with Version and Kind it is capable of
                              unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          kind:
                            description: Kind of the API Group to select resources
                              from. Together with Group and Version it is capable
                              of unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          labelSelector:
                            description: LabelSelector is a string that follows the
                              label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                              It matches with the resource labels.
                            type: string
                          name:
                            description: Name to match resources with.
                            type: string
                          namespace:
                            description: Namespace to select resources from.
                            type: string
                          version:
                            description: Version of the API Group to select resources
                              from. Together with Group and Kind it is capable of
                              unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                        type: object
                    required:
                    - patch
                    - target
                    type: object
                  type: array
                patchesStrategicMerge:
                  description: 'Strategic merge patches, defined as inline YAML objects.
                    Deprecated: Use Patches instead.'
                  items:
                    x-kubernetes-preserve-unknown-fields: true
                  type: array
                path:
                  description: Path to the directory containing the kustomization.yaml
                    file, or the set of plain YAMLs a kustomization.yaml should be
                    generated for. Defaults to 'None', which translates to the root
                    path of the SourceRef.
                  type: string
                postBuild:
                  description: PostBuild describes which actions to perform on the
                    YAML manifest generated by building the kustomize overlay.
                  properties:
                    substitute:
                      additionalProperties:
                        type: string
                      description: Substitute holds a map of key/value pairs. The
                        variables defined in your YAML manifests that match any of
                        the keys defined in the map will be substituted with the set
                        value. Includes support for bash string replacement functions
                        e.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.
                      type: object
                    substituteFrom:
                      description: SubstituteFrom holds references to ConfigMaps and
                        Secrets containing the variables and their values to be substituted
                        in the YAML manifests. The ConfigMap and the Secret data keys
                        represent the var names and they must match the vars declared
                        in the manifests for the substitution to happen.
                      items:
                        description: SubstituteReference contains a reference to a
                          resource containing the variables name and value.
                        properties:
                          kind:
                            description: Kind of the values referent, valid values
                              are ('Secret', 'ConfigMap').
                            enum:
                            - Secret
                            - ConfigMap
                            type: string
                          name:
                            description: Name of the values referent. Should reside
                              in the same namespace as the referring resource.
                            maxLength: 253
                            minLength: 1
                            type: string
                          optional:
                            default: false
                            description: Optional indicates whether the referenced
                              resource must exist, or whether to tolerate its absence.
                              If true and the referenced resource is absent, proceed
                              as if the resource was present but empty, without any
                              variables defined.
                            type: boolean
                        required:
                        - kind
                        - name
                        type: object
                      type: array
                  type: object
                prune:
                  description: Prune enables garbage collection.
                  type: boolean
                retryInterval:
                  description: The interval at which to retry a previously failed
                    reconciliation. When not specified, the controller uses the KustomizationSpec.Interval
                    value to retry failures.
                  type: string
                serviceAccountName:
                  description: The name of the Kubernetes service account to impersonate
                    when reconciling this Kustomization.
                  type: string
                sourceRef:
                  description: Reference of the source where the kustomization file
                    is.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    kind:
                      description: Kind of the referent.
                      enum:
                      - GitRepository
                      - Bucket
                      type: string
                    name:
                      description: Name of the referent.
                      type: string
                    namespace:
                      description: Namespace of the referent, defaults to the namespace
                        of the Kubernetes resource object that contains the reference.
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                suspend:
                  description: This flag tells the controller to suspend subsequent
                    kustomize executions, it does not apply to already started executions.
                    Defaults to false.
                  type: boolean
                targetNamespace:
                  description: TargetNamespace sets or overrides the namespace in
                    the kustomization.yaml file.
                  maxLength: 63
                  minLength: 1
                  type: string
                timeout:
                  description: Timeout for validation, apply and health checking operations.
                    Defaults to 'Interval' duration.
                  type: string
                validation:
                  description: 'Deprecated: Not used in v1beta2.'
                  enum:
                  - none
                  - client
                  - server
                  type: string
                wait:
                  description: Wait instructs the controller to check the health of
                    all the reconciled resources. When enabled, the HealthChecks are
                    ignored. Defaults to false.
                  type: boolean
              required:
              - interval
              - prune
              - sourceRef
              type: object
            status:
              default:
                observedGeneration: -1
              description: KustomizationStatus defines the observed state of a kustomization.
              properties:
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, type FooStatus struct{     // Represents the
                      observations of a foo's current state.     // Known .status.conditions.type
                      are: \"Available\", \"Progressing\", and \"Degraded\"     //
                      +patchMergeKey=type     // +patchStrategy=merge     // +listType=map
                      \    // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                inventory:
                  description: Inventory contains the list of Kubernetes resource
                    object references that have been successfully applied.
                  properties:
                    entries:
                      description: Entries of Kubernetes resource object references.
                      items:
                        description: ResourceRef contains the information necessary
                          to locate a resource within a cluster.
                        properties:
                          id:
                            description: ID is the string representation of the Kubernetes
                              resource object's metadata, in the format '<namespace>_<name>_<group>_<kind>'.
                            type: string
                          v:
                            description: Version is the API version of the Kubernetes
                              resource object's kind.
                            type: string
                        required:
                        - id
                        - v
                        type: object
                      type: array
                  required:
                  - entries
                  type: object
                lastAppliedRevision:
                  description: The last successfully applied revision. The revision
                    format for Git sources is <branch|tag>/<commit-sha>.
                  type: string
                lastAttemptedRevision:
                  description: LastAttemptedRevision is the revision of the last reconciliation
                    attempt.
                  type: string
                lastHandledReconcileAt:
                  description: LastHandledReconcileAt holds the value of the most
                    recent reconcile request value, so a change of the annotation
                    value can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last reconciled generation.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: Kustomization
      listKind: KustomizationList
      plural: kustomizations
      shortNames:
      - ks
      singular: kustomization
    conditions:
    - lastTransitionTime: "2022-04-12T18:16:22Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2022-04-12T18:16:22Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta2
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      cert-manager.io/inject-ca-from-secret: cert-manager/cert-manager-webhook-ca
    creationTimestamp: "2022-04-12T18:17:08Z"
    generation: 1
    labels:
      app: cert-manager
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.5.4
      kustomize.toolkit.fluxcd.io/name: cert-manager-kustomization
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: orders.acme.cert-manager.io
    resourceVersion: "10089383"
    uid: 8c7f6514-b1db-486f-a804-cee4d4141a03
  spec:
    conversion:
      strategy: Webhook
      webhook:
        clientConfig:
          service:
            name: cert-manager-webhook
            namespace: cert-manager
            path: /convert
            port: 443
        conversionReviewVersions:
        - v1
        - v1beta1
    group: acme.cert-manager.io
    names:
      categories:
      - cert-manager
      - cert-manager-acme
      kind: Order
      listKind: OrderList
      plural: orders
      singular: order
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.state
        name: State
        type: string
      - jsonPath: .spec.issuerRef.name
        name: Issuer
        priority: 1
        type: string
      - jsonPath: .status.reason
        name: Reason
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: Order is a type to represent an Order with an ACME server
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                commonName:
                  description: CommonName is the common name as specified on the DER
                    encoded CSR. If specified, this value must also be present in
                    `dnsNames` or `ipAddresses`. This field must match the corresponding
                    field on the DER encoded CSR.
                  type: string
                csr:
                  description: Certificate signing request bytes in DER encoding.
                    This will be used when finalizing the order. This field must be
                    set on the order.
                  format: byte
                  type: string
                dnsNames:
                  description: DNSNames is a list of DNS names that should be included
                    as part of the Order validation process. This field must match
                    the corresponding field on the DER encoded CSR.
                  items:
                    type: string
                  type: array
                duration:
                  description: Duration is the duration for the not after date for
                    the requested certificate. this is set on order creation as pe
                    the ACME spec.
                  type: string
                ipAddresses:
                  description: IPAddresses is a list of IP addresses that should be
                    included as part of the Order validation process. This field must
                    match the corresponding field on the DER encoded CSR.
                  items:
                    type: string
                  type: array
                issuerRef:
                  description: IssuerRef references a properly configured ACME-type
                    Issuer which should be used to create this Order. If the Issuer
                    does not exist, processing will be retried. If the Issuer is not
                    an 'ACME' Issuer, an error will be returned and the Order will
                    be marked as failed.
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                  - name
                  type: object
              required:
              - csr
              - issuerRef
              type: object
            status:
              properties:
                authorizations:
                  description: Authorizations contains data returned from the ACME
                    server on what authorizations must be completed in order to validate
                    the DNS names specified on the Order.
                  items:
                    description: ACMEAuthorization contains data returned from the
                      ACME server on an authorization that must be completed in order
                      validate a DNS name on an ACME Order resource.
                    properties:
                      challenges:
                        description: Challenges specifies the challenge types offered
                          by the ACME server. One of these challenge types will be
                          selected when validating the DNS name and an appropriate
                          Challenge resource will be created to perform the ACME challenge
                          process.
                        items:
                          description: Challenge specifies a challenge offered by
                            the ACME server for an Order. An appropriate Challenge
                            resource can be created to perform the ACME challenge
                            process.
                          properties:
                            token:
                              description: Token is the token that must be presented
                                for this challenge. This is used to compute the 'key'
                                that must also be presented.
                              type: string
                            type:
                              description: Type is the type of challenge being offered,
                                e.g. 'http-01', 'dns-01', 'tls-sni-01', etc. This
                                is the raw value retrieved from the ACME server. Only
                                'http-01' and 'dns-01' are supported by cert-manager,
                                other values will be ignored.
                              type: string
                            url:
                              description: URL is the URL of this challenge. It can
                                be used to retrieve additional metadata about the
                                Challenge from the ACME server.
                              type: string
                          required:
                          - token
                          - type
                          - url
                          type: object
                        type: array
                      identifier:
                        description: Identifier is the DNS name to be validated as
                          part of this authorization
                        type: string
                      initialState:
                        description: InitialState is the initial state of the ACME
                          authorization when first fetched from the ACME server. If
                          an Authorization is already 'valid', the Order controller
                          will not create a Challenge resource for the authorization.
                          This will occur when working with an ACME server that enables
                          'authz reuse' (such as Let's Encrypt's production endpoint).
                          If not set and 'identifier' is set, the state is assumed
                          to be pending and a Challenge will be created.
                        enum:
                        - valid
                        - ready
                        - pending
                        - processing
                        - invalid
                        - expired
                        - errored
                        type: string
                      url:
                        description: URL is the URL of the Authorization that must
                          be completed
                        type: string
                      wildcard:
                        description: Wildcard will be true if this authorization is
                          for a wildcard DNS name. If this is true, the identifier
                          will be the *non-wildcard* version of the DNS name. For
                          example, if '*.example.com' is the DNS name being validated,
                          this field will be 'true' and the 'identifier' field will
                          be 'example.com'.
                        type: boolean
                    required:
                    - url
                    type: object
                  type: array
                certificate:
                  description: Certificate is a copy of the PEM encoded certificate
                    for this Order. This field will be populated after the order has
                    been successfully finalized with the ACME server, and the order
                    has transitioned to the 'valid' state.
                  format: byte
                  type: string
                failureTime:
                  description: FailureTime stores the time that this order failed.
                    This is used to influence garbage collection and back-off.
                  format: date-time
                  type: string
                finalizeURL:
                  description: FinalizeURL of the Order. This is used to obtain certificates
                    for this order once it has been completed.
                  type: string
                reason:
                  description: Reason optionally provides more information about a
                    why the order is in the current state.
                  type: string
                state:
                  description: State contains the current state of this Order resource.
                    States 'success' and 'expired' are 'final'
                  enum:
                  - valid
                  - ready
                  - pending
                  - processing
                  - invalid
                  - expired
                  - errored
                  type: string
                url:
                  description: URL of the Order. This will initially be empty when
                    the resource is first created. The Order controller will populate
                    this field when the Order is first processed. This field will
                    be immutable after it is initially set.
                  type: string
              type: object
          required:
          - metadata
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.state
        name: State
        type: string
      - jsonPath: .spec.issuerRef.name
        name: Issuer
        priority: 1
        type: string
      - jsonPath: .status.reason
        name: Reason
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha3
      schema:
        openAPIV3Schema:
          description: Order is a type to represent an Order with an ACME server
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                commonName:
                  description: CommonName is the common name as specified on the DER
                    encoded CSR. If specified, this value must also be present in
                    `dnsNames` or `ipAddresses`. This field must match the corresponding
                    field on the DER encoded CSR.
                  type: string
                csr:
                  description: Certificate signing request bytes in DER encoding.
                    This will be used when finalizing the order. This field must be
                    set on the order.
                  format: byte
                  type: string
                dnsNames:
                  description: DNSNames is a list of DNS names that should be included
                    as part of the Order validation process. This field must match
                    the corresponding field on the DER encoded CSR.
                  items:
                    type: string
                  type: array
                duration:
                  description: Duration is the duration for the not after date for
                    the requested certificate. this is set on order creation as pe
                    the ACME spec.
                  type: string
                ipAddresses:
                  description: IPAddresses is a list of IP addresses that should be
                    included as part of the Order validation process. This field must
                    match the corresponding field on the DER encoded CSR.
                  items:
                    type: string
                  type: array
                issuerRef:
                  description: IssuerRef references a properly configured ACME-type
                    Issuer which should be used to create this Order. If the Issuer
                    does not exist, processing will be retried. If the Issuer is not
                    an 'ACME' Issuer, an error will be returned and the Order will
                    be marked as failed.
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                  - name
                  type: object
              required:
              - csr
              - issuerRef
              type: object
            status:
              properties:
                authorizations:
                  description: Authorizations contains data returned from the ACME
                    server on what authorizations must be completed in order to validate
                    the DNS names specified on the Order.
                  items:
                    description: ACMEAuthorization contains data returned from the
                      ACME server on an authorization that must be completed in order
                      validate a DNS name on an ACME Order resource.
                    properties:
                      challenges:
                        description: Challenges specifies the challenge types offered
                          by the ACME server. One of these challenge types will be
                          selected when validating the DNS name and an appropriate
                          Challenge resource will be created to perform the ACME challenge
                          process.
                        items:
                          description: Challenge specifies a challenge offered by
                            the ACME server for an Order. An appropriate Challenge
                            resource can be created to perform the ACME challenge
                            process.
                          properties:
                            token:
                              description: Token is the token that must be presented
                                for this challenge. This is used to compute the 'key'
                                that must also be presented.
                              type: string
                            type:
                              description: Type is the type of challenge being offered,
                                e.g. 'http-01', 'dns-01', 'tls-sni-01', etc. This
                                is the raw value retrieved from the ACME server. Only
                                'http-01' and 'dns-01' are supported by cert-manager,
                                other values will be ignored.
                              type: string
                            url:
                              description: URL is the URL of this challenge. It can
                                be used to retrieve additional metadata about the
                                Challenge from the ACME server.
                              type: string
                          required:
                          - token
                          - type
                          - url
                          type: object
                        type: array
                      identifier:
                        description: Identifier is the DNS name to be validated as
                          part of this authorization
                        type: string
                      initialState:
                        description: InitialState is the initial state of the ACME
                          authorization when first fetched from the ACME server. If
                          an Authorization is already 'valid', the Order controller
                          will not create a Challenge resource for the authorization.
                          This will occur when working with an ACME server that enables
                          'authz reuse' (such as Let's Encrypt's production endpoint).
                          If not set and 'identifier' is set, the state is assumed
                          to be pending and a Challenge will be created.
                        enum:
                        - valid
                        - ready
                        - pending
                        - processing
                        - invalid
                        - expired
                        - errored
                        type: string
                      url:
                        description: URL is the URL of the Authorization that must
                          be completed
                        type: string
                      wildcard:
                        description: Wildcard will be true if this authorization is
                          for a wildcard DNS name. If this is true, the identifier
                          will be the *non-wildcard* version of the DNS name. For
                          example, if '*.example.com' is the DNS name being validated,
                          this field will be 'true' and the 'identifier' field will
                          be 'example.com'.
                        type: boolean
                    required:
                    - url
                    type: object
                  type: array
                certificate:
                  description: Certificate is a copy of the PEM encoded certificate
                    for this Order. This field will be populated after the order has
                    been successfully finalized with the ACME server, and the order
                    has transitioned to the 'valid' state.
                  format: byte
                  type: string
                failureTime:
                  description: FailureTime stores the time that this order failed.
                    This is used to influence garbage collection and back-off.
                  format: date-time
                  type: string
                finalizeURL:
                  description: FinalizeURL of the Order. This is used to obtain certificates
                    for this order once it has been completed.
                  type: string
                reason:
                  description: Reason optionally provides more information about a
                    why the order is in the current state.
                  type: string
                state:
                  description: State contains the current state of this Order resource.
                    States 'success' and 'expired' are 'final'
                  enum:
                  - valid
                  - ready
                  - pending
                  - processing
                  - invalid
                  - expired
                  - errored
                  type: string
                url:
                  description: URL of the Order. This will initially be empty when
                    the resource is first created. The Order controller will populate
                    this field when the Order is first processed. This field will
                    be immutable after it is initially set.
                  type: string
              type: object
          required:
          - metadata
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.state
        name: State
        type: string
      - jsonPath: .spec.issuerRef.name
        name: Issuer
        priority: 1
        type: string
      - jsonPath: .status.reason
        name: Reason
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: Order is a type to represent an Order with an ACME server
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                commonName:
                  description: CommonName is the common name as specified on the DER
                    encoded CSR. If specified, this value must also be present in
                    `dnsNames` or `ipAddresses`. This field must match the corresponding
                    field on the DER encoded CSR.
                  type: string
                dnsNames:
                  description: DNSNames is a list of DNS names that should be included
                    as part of the Order validation process. This field must match
                    the corresponding field on the DER encoded CSR.
                  items:
                    type: string
                  type: array
                duration:
                  description: Duration is the duration for the not after date for
                    the requested certificate. this is set on order creation as pe
                    the ACME spec.
                  type: string
                ipAddresses:
                  description: IPAddresses is a list of IP addresses that should be
                    included as part of the Order validation process. This field must
                    match the corresponding field on the DER encoded CSR.
                  items:
                    type: string
                  type: array
                issuerRef:
                  description: IssuerRef references a properly configured ACME-type
                    Issuer which should be used to create this Order. If the Issuer
                    does not exist, processing will be retried. If the Issuer is not
                    an 'ACME' Issuer, an error will be returned and the Order will
                    be marked as failed.
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                  - name
                  type: object
                request:
                  description: Certificate signing request bytes in DER encoding.
                    This will be used when finalizing the order. This field must be
                    set on the order.
                  format: byte
                  type: string
              required:
              - issuerRef
              - request
              type: object
            status:
              properties:
                authorizations:
                  description: Authorizations contains data returned from the ACME
                    server on what authorizations must be completed in order to validate
                    the DNS names specified on the Order.
                  items:
                    description: ACMEAuthorization contains data returned from the
                      ACME server on an authorization that must be completed in order
                      validate a DNS name on an ACME Order resource.
                    properties:
                      challenges:
                        description: Challenges specifies the challenge types offered
                          by the ACME server. One of these challenge types will be
                          selected when validating the DNS name and an appropriate
                          Challenge resource will be created to perform the ACME challenge
                          process.
                        items:
                          description: Challenge specifies a challenge offered by
                            the ACME server for an Order. An appropriate Challenge
                            resource can be created to perform the ACME challenge
                            process.
                          properties:
                            token:
                              description: Token is the token that must be presented
                                for this challenge. This is used to compute the 'key'
                                that must also be presented.
                              type: string
                            type:
                              description: Type is the type of challenge being offered,
                                e.g. 'http-01', 'dns-01', 'tls-sni-01', etc. This
                                is the raw value retrieved from the ACME server. Only
                                'http-01' and 'dns-01' are supported by cert-manager,
                                other values will be ignored.
                              type: string
                            url:
                              description: URL is the URL of this challenge. It can
                                be used to retrieve additional metadata about the
                                Challenge from the ACME server.
                              type: string
                          required:
                          - token
                          - type
                          - url
                          type: object
                        type: array
                      identifier:
                        description: Identifier is the DNS name to be validated as
                          part of this authorization
                        type: string
                      initialState:
                        description: InitialState is the initial state of the ACME
                          authorization when first fetched from the ACME server. If
                          an Authorization is already 'valid', the Order controller
                          will not create a Challenge resource for the authorization.
                          This will occur when working with an ACME server that enables
                          'authz reuse' (such as Let's Encrypt's production endpoint).
                          If not set and 'identifier' is set, the state is assumed
                          to be pending and a Challenge will be created.
                        enum:
                        - valid
                        - ready
                        - pending
                        - processing
                        - invalid
                        - expired
                        - errored
                        type: string
                      url:
                        description: URL is the URL of the Authorization that must
                          be completed
                        type: string
                      wildcard:
                        description: Wildcard will be true if this authorization is
                          for a wildcard DNS name. If this is true, the identifier
                          will be the *non-wildcard* version of the DNS name. For
                          example, if '*.example.com' is the DNS name being validated,
                          this field will be 'true' and the 'identifier' field will
                          be 'example.com'.
                        type: boolean
                    required:
                    - url
                    type: object
                  type: array
                certificate:
                  description: Certificate is a copy of the PEM encoded certificate
                    for this Order. This field will be populated after the order has
                    been successfully finalized with the ACME server, and the order
                    has transitioned to the 'valid' state.
                  format: byte
                  type: string
                failureTime:
                  description: FailureTime stores the time that this order failed.
                    This is used to influence garbage collection and back-off.
                  format: date-time
                  type: string
                finalizeURL:
                  description: FinalizeURL of the Order. This is used to obtain certificates
                    for this order once it has been completed.
                  type: string
                reason:
                  description: Reason optionally provides more information about a
                    why the order is in the current state.
                  type: string
                state:
                  description: State contains the current state of this Order resource.
                    States 'success' and 'expired' are 'final'
                  enum:
                  - valid
                  - ready
                  - pending
                  - processing
                  - invalid
                  - expired
                  - errored
                  type: string
                url:
                  description: URL of the Order. This will initially be empty when
                    the resource is first created. The Order controller will populate
                    this field when the Order is first processed. This field will
                    be immutable after it is initially set.
                  type: string
              type: object
          required:
          - metadata
          - spec
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.state
        name: State
        type: string
      - jsonPath: .spec.issuerRef.name
        name: Issuer
        priority: 1
        type: string
      - jsonPath: .status.reason
        name: Reason
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: Order is a type to represent an Order with an ACME server
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                commonName:
                  description: CommonName is the common name as specified on the DER
                    encoded CSR. If specified, this value must also be present in
                    `dnsNames` or `ipAddresses`. This field must match the corresponding
                    field on the DER encoded CSR.
                  type: string
                dnsNames:
                  description: DNSNames is a list of DNS names that should be included
                    as part of the Order validation process. This field must match
                    the corresponding field on the DER encoded CSR.
                  items:
                    type: string
                  type: array
                duration:
                  description: Duration is the duration for the not after date for
                    the requested certificate. this is set on order creation as pe
                    the ACME spec.
                  type: string
                ipAddresses:
                  description: IPAddresses is a list of IP addresses that should be
                    included as part of the Order validation process. This field must
                    match the corresponding field on the DER encoded CSR.
                  items:
                    type: string
                  type: array
                issuerRef:
                  description: IssuerRef references a properly configured ACME-type
                    Issuer which should be used to create this Order. If the Issuer
                    does not exist, processing will be retried. If the Issuer is not
                    an 'ACME' Issuer, an error will be returned and the Order will
                    be marked as failed.
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                  - name
                  type: object
                request:
                  description: Certificate signing request bytes in DER encoding.
                    This will be used when finalizing the order. This field must be
                    set on the order.
                  format: byte
                  type: string
              required:
              - issuerRef
              - request
              type: object
            status:
              properties:
                authorizations:
                  description: Authorizations contains data returned from the ACME
                    server on what authorizations must be completed in order to validate
                    the DNS names specified on the Order.
                  items:
                    description: ACMEAuthorization contains data returned from the
                      ACME server on an authorization that must be completed in order
                      validate a DNS name on an ACME Order resource.
                    properties:
                      challenges:
                        description: Challenges specifies the challenge types offered
                          by the ACME server. One of these challenge types will be
                          selected when validating the DNS name and an appropriate
                          Challenge resource will be created to perform the ACME challenge
                          process.
                        items:
                          description: Challenge specifies a challenge offered by
                            the ACME server for an Order. An appropriate Challenge
                            resource can be created to perform the ACME challenge
                            process.
                          properties:
                            token:
                              description: Token is the token that must be presented
                                for this challenge. This is used to compute the 'key'
                                that must also be presented.
                              type: string
                            type:
                              description: Type is the type of challenge being offered,
                                e.g. 'http-01', 'dns-01', 'tls-sni-01', etc. This
                                is the raw value retrieved from the ACME server. Only
                                'http-01' and 'dns-01' are supported by cert-manager,
                                other values will be ignored.
                              type: string
                            url:
                              description: URL is the URL of this challenge. It can
                                be used to retrieve additional metadata about the
                                Challenge from the ACME server.
                              type: string
                          required:
                          - token
                          - type
                          - url
                          type: object
                        type: array
                      identifier:
                        description: Identifier is the DNS name to be validated as
                          part of this authorization
                        type: string
                      initialState:
                        description: InitialState is the initial state of the ACME
                          authorization when first fetched from the ACME server. If
                          an Authorization is already 'valid', the Order controller
                          will not create a Challenge resource for the authorization.
                          This will occur when working with an ACME server that enables
                          'authz reuse' (such as Let's Encrypt's production endpoint).
                          If not set and 'identifier' is set, the state is assumed
                          to be pending and a Challenge will be created.
                        enum:
                        - valid
                        - ready
                        - pending
                        - processing
                        - invalid
                        - expired
                        - errored
                        type: string
                      url:
                        description: URL is the URL of the Authorization that must
                          be completed
                        type: string
                      wildcard:
                        description: Wildcard will be true if this authorization is
                          for a wildcard DNS name. If this is true, the identifier
                          will be the *non-wildcard* version of the DNS name. For
                          example, if '*.example.com' is the DNS name being validated,
                          this field will be 'true' and the 'identifier' field will
                          be 'example.com'.
                        type: boolean
                    required:
                    - url
                    type: object
                  type: array
                certificate:
                  description: Certificate is a copy of the PEM encoded certificate
                    for this Order. This field will be populated after the order has
                    been successfully finalized with the ACME server, and the order
                    has transitioned to the 'valid' state.
                  format: byte
                  type: string
                failureTime:
                  description: FailureTime stores the time that this order failed.
                    This is used to influence garbage collection and back-off.
                  format: date-time
                  type: string
                finalizeURL:
                  description: FinalizeURL of the Order. This is used to obtain certificates
                    for this order once it has been completed.
                  type: string
                reason:
                  description: Reason optionally provides more information about a
                    why the order is in the current state.
                  type: string
                state:
                  description: State contains the current state of this Order resource.
                    States 'success' and 'expired' are 'final'
                  enum:
                  - valid
                  - ready
                  - pending
                  - processing
                  - invalid
                  - expired
                  - errored
                  type: string
                url:
                  description: URL of the Order. This will initially be empty when
                    the resource is first created. The Order controller will populate
                    this field when the Order is first processed. This field will
                    be immutable after it is initially set.
                  type: string
              type: object
          required:
          - metadata
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - cert-manager
      - cert-manager-acme
      kind: Order
      listKind: OrderList
      plural: orders
      singular: order
    conditions:
    - lastTransitionTime: "2022-04-12T18:17:09Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2022-04-12T18:17:10Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.7.0
    creationTimestamp: "2022-04-12T18:16:17Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v0.28.5
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: providers.notification.toolkit.fluxcd.io
    resourceVersion: "10089213"
    uid: 4d1fbe48-938b-4d7a-ad6d-f7fffba9955d
  spec:
    conversion:
      strategy: None
    group: notification.toolkit.fluxcd.io
    names:
      kind: Provider
      listKind: ProviderList
      plural: providers
      singular: provider
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: Provider is the Schema for the providers API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ProviderSpec defines the desired state of Provider
              properties:
                address:
                  description: HTTP/S webhook address of this provider
                  pattern: ^(http|https)://
                  type: string
                certSecretRef:
                  description: CertSecretRef can be given the name of a secret containing
                    a PEM-encoded CA certificate (`caFile`)
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                  - name
                  type: object
                channel:
                  description: Alert channel for this provider
                  type: string
                proxy:
                  description: HTTP/S address of the proxy
                  pattern: ^(http|https)://
                  type: string
                secretRef:
                  description: Secret reference containing the provider webhook URL
                    using "address" as data key
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                  - name
                  type: object
                suspend:
                  description: This flag tells the controller to suspend subsequent
                    events handling. Defaults to false.
                  type: boolean
                type:
                  description: Type of provider
                  enum:
                  - slack
                  - discord
                  - msteams
                  - rocket
                  - generic
                  - github
                  - gitlab
                  - bitbucket
                  - azuredevops
                  - googlechat
                  - webex
                  - sentry
                  - azureeventhub
                  - telegram
                  - lark
                  - matrix
                  - opsgenie
                  - alertmanager
                  - grafana
                  type: string
                username:
                  description: Bot username for this provider
                  type: string
              required:
              - type
              type: object
            status:
              default:
                observedGeneration: -1
              description: ProviderStatus defines the observed state of Provider
              properties:
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, type FooStatus struct{     // Represents the
                      observations of a foo's current state.     // Known .status.conditions.type
                      are: \"Available\", \"Progressing\", and \"Degraded\"     //
                      +patchMergeKey=type     // +patchStrategy=merge     // +listType=map
                      \    // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                observedGeneration:
                  description: ObservedGeneration is the last reconciled generation.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: Provider
      listKind: ProviderList
      plural: providers
      singular: provider
    conditions:
    - lastTransitionTime: "2022-04-12T18:16:17Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2022-04-12T18:16:17Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.7.0
    creationTimestamp: "2022-04-12T18:16:17Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v0.28.5
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: receivers.notification.toolkit.fluxcd.io
    resourceVersion: "10089214"
    uid: 14591d65-4c51-4ce1-9dfe-63b3badc3b42
  spec:
    conversion:
      strategy: None
    group: notification.toolkit.fluxcd.io
    names:
      kind: Receiver
      listKind: ReceiverList
      plural: receivers
      singular: receiver
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: Receiver is the Schema for the receivers API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ReceiverSpec defines the desired state of Receiver
              properties:
                events:
                  description: A list of events to handle, e.g. 'push' for GitHub
                    or 'Push Hook' for GitLab.
                  items:
                    type: string
                  type: array
                resources:
                  description: A list of resources to be notified about changes.
                  items:
                    description: CrossNamespaceObjectReference contains enough information
                      to let you locate the typed referenced object at cluster level
                    properties:
                      apiVersion:
                        description: API version of the referent
                        type: string
                      kind:
                        description: Kind of the referent
                        enum:
                        - Bucket
                        - GitRepository
                        - Kustomization
                        - HelmRelease
                        - HelmChart
                        - HelmRepository
                        - ImageRepository
                        - ImagePolicy
                        - ImageUpdateAutomation
                        type: string
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                      name:
                        description: Name of the referent
                        maxLength: 53
                        minLength: 1
                        type: string
                      namespace:
                        description: Namespace of the referent
                        maxLength: 53
                        minLength: 1
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                secretRef:
                  description: Secret reference containing the token used to validate
                    the payload authenticity
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                  - name
                  type: object
                suspend:
                  description: This flag tells the controller to suspend subsequent
                    events handling. Defaults to false.
                  type: boolean
                type:
                  description: Type of webhook sender, used to determine the validation
                    procedure and payload deserialization.
                  enum:
                  - generic
                  - generic-hmac
                  - github
                  - gitlab
                  - bitbucket
                  - harbor
                  - dockerhub
                  - quay
                  - gcr
                  - nexus
                  - acr
                  type: string
              required:
              - resources
              - type
              type: object
            status:
              default:
                observedGeneration: -1
              description: ReceiverStatus defines the observed state of Receiver
              properties:
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, type FooStatus struct{     // Represents the
                      observations of a foo's current state.     // Known .status.conditions.type
                      are: \"Available\", \"Progressing\", and \"Degraded\"     //
                      +patchMergeKey=type     // +patchStrategy=merge     // +listType=map
                      \    // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
                url:
                  description: Generated webhook URL in the format of '/hook/sha256sum(token+name+namespace)'.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: Receiver
      listKind: ReceiverList
      plural: receivers
      singular: receiver
    conditions:
    - lastTransitionTime: "2022-04-12T18:16:17Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2022-04-12T18:16:17Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2022-01-13T07:23:06Z"
    generation: 1
    labels:
      kustomize.toolkit.fluxcd.io/name: cluster-admin-kustomization
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: sealedsecrets.bitnami.com
    resourceVersion: "10089285"
    uid: 8cdcf16d-86b5-478d-99d6-780004549fb5
  spec:
    conversion:
      strategy: None
    group: bitnami.com
    names:
      kind: SealedSecret
      listKind: SealedSecretList
      plural: sealedsecrets
      singular: sealedsecret
    preserveUnknownFields: true
    scope: Namespaced
    versions:
    - name: v1alpha1
      served: true
      storage: true
  status:
    acceptedNames:
      kind: SealedSecret
      listKind: SealedSecretList
      plural: sealedsecrets
      singular: sealedsecret
    conditions:
    - lastTransitionTime: "2022-01-13T07:23:06Z"
      message: 'spec.preserveUnknownFields: Invalid value: true: must be false'
      reason: Violations
      status: "True"
      type: NonStructuralSchema
    - lastTransitionTime: "2022-01-13T07:23:06Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2022-01-13T07:23:06Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
